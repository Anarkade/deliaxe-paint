# Inspect untracked files and give a summary
$ErrorActionPreference='Stop'

# Get untracked files
$untracked = git ls-files -o --exclude-standard | ForEach-Object { $_.Trim() } | Where-Object { $_ -ne '' }
$u_count = $untracked.Count
Write-Host "Untracked files count: $u_count"

if ($u_count -eq 0) { exit 0 }

Write-Host "\n--- Sample untracked files (first 200) ---"
$untracked | Select-Object -First 200 | ForEach-Object { Write-Host "  $_" }

# Top extensions
Write-Host "\n--- Top untracked extensions (by count) ---"
$untracked_ext = $untracked | ForEach-Object { [io.path]::GetExtension($_).ToLower() }
$untracked_ext | Where-Object { $_ -ne '' } | Group-Object | Sort-Object Count -Descending | Select-Object -First 20 | ForEach-Object { Write-Host ("  $($_.Count)  $($_.Name)") }

# Top-level folders
Write-Host "\n--- Top-level folders for untracked files ---"
$topdirs = $untracked | ForEach-Object { $p = $_ -replace '/','\\'; $parts = $p.Split('\\'); if($parts.Length -gt 0){ $parts[0] } else { '.' } }
$topdirs | Group-Object | Sort-Object Count -Descending | Select-Object -First 50 | ForEach-Object { Write-Host ("  $($_.Count)  $($_.Name)") }

# Check specific dirs and sizes
$checkDirs = @('node_modules','dist','artifacts','origin','.cache','public')
Write-Host "\n--- Sizes for common artifact dirs (may take a few seconds) ---"
foreach($d in $checkDirs) {
  $path = Join-Path (Get-Location) $d
  if (Test-Path $path) {
    $sum = Get-ChildItem -Path $path -Recurse -File -ErrorAction SilentlyContinue | Measure-Object -Property Length -Sum
    $s = $sum.Sum
    if (-not $s) { $hs = '0 B' } else {
      if ($s -gt 1GB) { $hs = '{0:N2} GB' -f ($s/1GB) }
      elseif ($s -gt 1MB) { $hs = '{0:N2} MB' -f ($s/1MB) }
      else { $hs = '{0:N2} KB' -f ($s/1KB) }
    }
    Write-Host ("  $d : $hs")
  } else {
    Write-Host ("  $d : (not present)")
  }
}

# Quick guidance heuristics
Write-Host "\n--- Quick guidance ---"
if ($untracked -match 'node_modules') { Write-Host ' - node_modules found untracked: usually safe to delete (recreated via npm ci/npm install).' }
if ($untracked -match 'dist') { Write-Host ' - dist/build output found untracked: safe to remove if you can rebuild (npm run build).' }
if ($untracked -match '^origin\\') { Write-Host ' - origin/ directory present in working tree: likely leftover worktree or artifact; safe to remove if you are not using it.' }
Write-Host "\nReport generated by .devscripts/inspect-untracked.ps1"
