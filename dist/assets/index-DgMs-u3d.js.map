{"version":3,"mappings":"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","names":["TOAST_LIMIT","TOAST_REMOVE_DELAY","count","genId","toastTimeouts","addToRemoveQueue","toastId","timeout","dispatch","reducer","state","action","toast","t","listeners","memoryState","listener","props","id","update","dismiss","open","useToast","setState","React.useState","React.useEffect","index","cn","inputs","twMerge","clsx","ToastProvider","ToastPrimitives.Provider","ToastViewport","React.forwardRef","className","ref","jsx","ToastPrimitives.Viewport","toastVariants","cva","Toast","variant","ToastPrimitives.Root","ToastAction","ToastPrimitives.Action","ToastClose","ToastPrimitives.Close","X","ToastTitle","ToastPrimitives.Title","ToastDescription","ToastPrimitives.Description","Toaster","toasts","title","description","jsxs","theme","useTheme","SonnerToaster","TooltipProvider","TooltipPrimitive.Provider","Tooltip","TooltipPrimitive.Root","TooltipTrigger","TooltipPrimitive.Trigger","TooltipContent","sideOffset","TooltipPrimitive.Content","buttonVariants","Button","size","asChild","Comp","Slot","Input","type","Card","CardHeader","CardTitle","CardDescription","CardContent","CardFooter","translationsAppCsv","translationsChangeGridsCsv","translationsChangeLanguageCsv","translationsChangePaletteCsv","translationsChangeResolutionCsv","translationsExportImageCsv","translationsImagePreviewCsv","translationsImportImageCsv","translationsPaletteViewerCsv","translationsToolbarCsv","constantsCsv","parseTranslationsCsv","raw","rows","cur","inQuotes","i","pushChar","ch","c","header","result","r","key","ci","colName","parseConstantsCsv","row","commaIndex","value","mergeParsedCsvObjects","list","obj","cols","csvData","constantsData","buildTranslationForLanguage","language","translation","buildBaseTranslation","base","languageNames","langCode","baseTranslation","translations","TranslationContext","React","useTranslation","context","CAMERA_SWITCH_DELAY","getErrorInfo","error","e","ImageUpload","onImageLoad","onCameraPreviewRequest","hideSection","onLoadFromClipboard","videoRef","useRef","streamRef","showCameraPreview","setShowCameraPreview","useState","availableCameras","setAvailableCameras","currentCameraIndex","setCurrentCameraIndex","cameraError","setCameraError","isDragOver","setIsDragOver","showCameraSelector","setShowCameraSelector","handleFileUpload","useCallback","event","file","handleUrlUpload","url","getAvailableCameras","cameras","device","useEffect","constraints","stream","name","message","errorMessage","stopCameraPreview","track","switchCamera","nextIndex","resolve","handleCameraCapture","video","canvas","blob","getCameraDisplayName","camera","handleCameraPreviewRequest","handleCameraSelection","cameraIndex","closeCameraSelector","handleDragEnter","handleDragLeave","handleDragOver","handleDrop","files","Camera","Upload","HardDriveUpload","Clipboard","ClipboardPaste","Link","RotateCcw","Eye","LoadImage","onClose","CameraSelector","onSelect","resolutions","setResolutions","d","mounted","probe","deviceId","settings","width","height","onLoaded","prev","cam","RadioGroup","RadioGroupPrimitive.Root","RadioGroupItem","RadioGroupPrimitive.Item","RadioGroupPrimitive.Indicator","Circle","labelVariants","Label","LabelPrimitive.Root","ColorPaletteSelector","selectedPalette","onPaletteChange","originalPaletteColors","setOriginalPaletteColors","paletteOptions","Palette","option","Slider","SliderPrimitive.Root","SliderPrimitive.Track","SliderPrimitive.Range","SliderPrimitive.Thumb","Checkbox","CheckboxPrimitive.Root","CheckboxPrimitive.Indicator","Check","getDefaultPalette","paletteType","PaletteViewer","imageData","onPaletteUpdate","originalImageSource","externalPalette","onImageUpdate","paletteColors","setPaletteColors","draggedIndex","setDraggedIndex","isOriginalPNG","setIsOriginalPNG","handleDragStart","targetIndex","newColors","draggedColor","selectNewColor","currentPalette","input","applyColor","hex","g","b","rgb333","toRGB333","cleanup","handleChange","target","r3","g3","b3","pngPalette","__vitePreload","n","colors","data","colorKey","sortedColors","a","color","defaultPalette","module","extractedPalette","hexColor","alpha","touch","targetElement","GripVertical","COLOR_SAMPLE_INTERVAL","FIT_DEBOUNCE_MS","ZOOM_BOUNDS","analyzeImageFormat","image","ctx","src","baseFormat","mimeMatch","mime","uniqueColors","colorCount","analyzeImageDataFormat","ImagePreview","originalImage","processedImageData","onDownload","onLoadImageClick","onCameraPreviewChange","selectedCameraId","currentPaletteColors","onSectionOpen","onRequestOpenCameraSelector","showTileGrid","showFrameGrid","tileWidth","tileHeight","frameWidth","frameHeight","tileGridColor","frameGridColor","tileLineThickness","frameLineThickness","autoFitKey","onZoomChange","isVerticalLayout","containerStyle","canvasRef","containerRef","showOriginal","setShowOriginal","zoom","setZoom","sliderValue","setSliderValue","containerWidth","setContainerWidth","containerWidthRef","previewHeight","setPreviewHeight","headerRef","controlsRef","sliderFullWidth","setSliderFullWidth","footerRef","originalFormat","setOriginalFormat","processedFormat","setProcessedFormat","isIndexedPNG","setIsIndexedPNG","currentCameraId","setCurrentCameraId","integerScaling","setIntegerScaling","programmaticZoomChange","isAutoFitting","lastFitCallRef","shouldAutoFit","setShouldAutoFit","autoFitAllowed","expectingProcessedChange","isUserDraggingSlider","suppressAutoFitRef","suppressAutoFitTimeoutRef","userSetZoomRef","autoFitPermitRef","setCameraAspectRatio","cameraWidth","cameraHeight","aspectRatio","containerEl","startCameraPreview","timer","capturePhoto","dataUrl","info","isIndexed","isPNG8","localized","format","cw","ro","entries","entry","fitToWidth","force","now","lines","l","callerLine","match","callerLocation","err","currentImage","fitZoom","newZoom","displayHeight","calculatedHeight","handler","setZoomTo100","handleZoomChange","clampedZoom","roundedZoom","applied","controls","containerW","controlsW","needsWrap","handleImageLoaded","handleIntegerScalingChange","checked","timeoutId","currentZoom","imageHeight","drawImageIfReady","img","hasProcessedImage","zoomFactor","pixelSize","currentDisplayedImage","displayedWidth","displayedHeight","MoveHorizontal","Fragment","next","RefreshCcw","ExportImage","exportAtCurrentZoom","setExportAtCurrentZoom","exportWithGrids","setExportWithGrids","exportFormat","setExportFormat","hasAnyGridEnabled","createIndexedPNG","palette","createPNG8IndexedBlob","downloadPNG","scale","scaledWidth","scaledHeight","offscreenCanvas","offscreenCtx","x","y","dataURL","shouldUseIndexed","formatSuffix","link","zoomSuffix","gridSuffix","getImageDataURL","copyToClipboard","item","textarea","Download","FilePlus","Copy","LanguageSelector","hideLabel","currentLanguage","changeLanguage","languages","getLanguageName","sortedLanguages","Globe","lang","logoGif","Toolbar","activeTab","setActiveTab","resetEditor","loadFromClipboard","handleKeyDown","getButtonVariant","tabId","handleTabClick","Proportions","Grid3X3","getVersion","Footer","useImageProcessor","workerRef","requestIdRef","pendingRequests","progress","payload","request","maybeMsg","msg","workerSnapshot","pendingSnapshot","processImage","options","reject","processMegaDriveImage","originalPalette","onProgress","extractColors","quantizeColors","targetCount","applyPalette","cancelProcessing","usePerformanceMonitor","startTimeRef","maxMetrics","checkMemoryUsage","memory","usedMemory","totalMemory","memoryRatio","startMeasurement","operationType","endMeasurement","imageDimensions","processingTime","memoryUsage","newMetric","updatedMetrics","estimateProcessingTime","relevantMetrics","m","pixelCount","targetPixels","totalWeight","weightedTime","metric","metricPixels","weight","estimate","getOptimizationRecommendations","recommendations","recentMetrics","sum","shouldOptimizeProcessing","estimatedTime","cutoffTime","monitor","CanvasPool","suitable","inUse","before","removed","canvasPool","getPooledCanvas","returnPooledCanvas","useCanvasPool","LRUCache","maxSize","maxEntries","params","sorted","existing","lruKey","lruTime","totalRequests","ImageProcessingCache","originalImageHash","resolution","scaling","imageHash","colorsHash","hashImage","hashImageData","sampleSize","sample","ChangeGridSelector","setShowTileGrid","setTileWidth","setTileHeight","setTileGridColor","setTileLineThickness","setShowFrameGrid","setFrameWidth","setFrameHeight","setFrameGridColor","setFrameLineThickness","AlignmentIcon","position","label","getAlignment","vertical","horizontal","outerStyle","ResolutionSelector","onApplyResolution","onChangeScalingMode","selectedResolutionProp","selectedScalingModeProp","selectedResolution","setSelectedResolution","scalingMode","setScalingMode","resolutionOptions","scalingOptions","Expand","AlignLeft","alignmentOptions","isAlignmentMode","mode","Scaling","Icon","MAX_IMAGE_SIZE","MAX_CANVAS_SIZE","PROCESSING_DEBOUNCE_MS","RetroImageEditor","setCurrentZoom","setSelectedCameraId","setIsVerticalLayout","isLanguageDropdownOpen","setIsLanguageDropdownOpen","setOriginalImageSource","isOriginalPNG8Indexed","setIsOriginalPNG8Indexed","setOriginalImage","setProcessedImageData","setSelectedPalette","setAutoFitKey","ignoreNextCloseRef","isProcessing","setIsProcessing","processingProgress","setProcessingProgress","processingOperation","setProcessingOperation","history","setHistory","historyIndex","setHistoryIndex","imageProcessor","performanceMonitor","getCanvas","returnCanvas","handlePreviewZoomChange","checkOrientation","isLandscape","onOpenCameraSelectorRequest","handleClickOutside","isOutsideSection","isButton","measure","h","setHeaderHeight","saveToHistory","newHistory","loadImage","source","shouldOptimize","rasterCanvas","rasterCtx","rasterImageData","isCameraCapture","detectAndUnscaleImage","pixels","commonScales","allScales","scalingFactor","blocksX","blocksY","validBlocks","totalBlocks","blockY","blockX","startX","startY","colorCounts","maxCount","totalPixelsInBlock","srcWidth","srcHeight","targetWidth","targetHeight","parts","w","tempCanvas","sourceCanvas","sctx","tempCtx","sw","sh","srcRatio","dstRatio","dw","dh","dx","dy","tempImageData","paletteColorsArr","applyFixedPalette","canvasResult","processImageRef","minDistance","closestColor","paletteColor","distance","prevState","nextState","items","toolbarWidth","headerHeight","rightColumnRef","rightColumnWidth","setRightColumnWidth","el","mapped","cameraId","Index","NotFound","location","useLocation","shownPath","queryClient","QueryClient","App","QueryClientProvider","Sonner","HashRouter","Routes","Route","TranslationProvider","children","setLanguage","stored","browserLang","langMap","mainLang","langObj","v","baseV","names","_TranslationContext","rootEl","baseUrl","pathname","basePathname","newHash","search","createRoot"],"ignoreList":[],"sources":["../../src/hooks/use-toast.ts","../../src/lib/utils.ts","../../src/components/ui/toast.tsx","../../src/components/ui/toaster.tsx","../../src/components/ui/sonner.tsx","../../src/components/ui/tooltip.tsx","../../src/components/ui/buttonVariants.ts","../../src/components/ui/button.tsx","../../src/components/ui/input.tsx","../../src/components/ui/card.tsx","../../src/locales/translationsApp.csv?raw","../../src/locales/translationsChangeGrids.csv?raw","../../src/locales/translationsChangeLanguage.csv?raw","../../src/locales/translationsChangePalette.csv?raw","../../src/locales/translationsChangeResolution.csv?raw","../../src/locales/translationsExportImage.csv?raw","../../src/locales/translationsImagePreview.csv?raw","../../src/locales/translationsImportImage.csv?raw","../../src/locales/translationsPaletteViewer.csv?raw","../../src/locales/translationsToolbar.csv?raw","../../src/locales/texts_constant.csv?raw","../../src/contexts/translationHelpers.ts","../../src/components/ImageUpload.tsx","../../src/components/LoadImage.tsx","../../src/components/CameraSelector.tsx","../../src/components/ui/radio-group.tsx","../../src/components/ui/label.tsx","../../src/components/ColorPaletteSelector.tsx","../../src/components/ui/slider.tsx","../../src/components/ui/checkbox.tsx","../../src/components/PaletteViewer.tsx","../../src/components/ImagePreview.tsx","../../src/components/ExportImage.tsx","../../src/components/LanguageSelector.tsx","../../src/components/Toolbar.tsx","../../src/components/Footer.tsx","../../src/hooks/useImageProcessor.ts","../../src/hooks/usePerformanceMonitor.ts","../../src/utils/canvasPool.ts","../../src/utils/imageCache.ts","../../src/components/ChangeGridSelector.tsx","../../src/components/ResolutionSelector.tsx","../../src/components/RetroImageEditor.tsx","../../src/pages/Index.tsx","../../src/pages/NotFound.tsx","../../src/App.tsx","../../src/contexts/TranslationContext.tsx","../../src/main.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport type {\r\n  ToastActionElement,\r\n  ToastProps,\r\n} from \"@/components/ui/toast\"\r\n\r\nconst TOAST_LIMIT = 1\r\nconst TOAST_REMOVE_DELAY = 1000000\r\n\r\ntype ToasterToast = ToastProps & {\r\n  id: string\r\n  title?: React.ReactNode\r\n  description?: React.ReactNode\r\n  action?: ToastActionElement\r\n}\r\n\r\nconst actionTypes = {\r\n  ADD_TOAST: \"ADD_TOAST\",\r\n  UPDATE_TOAST: \"UPDATE_TOAST\",\r\n  DISMISS_TOAST: \"DISMISS_TOAST\",\r\n  REMOVE_TOAST: \"REMOVE_TOAST\",\r\n} as const\r\n\r\nlet count = 0\r\n\r\nfunction genId() {\r\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\r\n  return count.toString()\r\n}\r\n\r\ntype ActionType = typeof actionTypes\r\n\r\ntype Action =\r\n  | {\r\n      type: ActionType[\"ADD_TOAST\"]\r\n      toast: ToasterToast\r\n    }\r\n  | {\r\n      type: ActionType[\"UPDATE_TOAST\"]\r\n      toast: Partial<ToasterToast>\r\n    }\r\n  | {\r\n      type: ActionType[\"DISMISS_TOAST\"]\r\n      toastId?: ToasterToast[\"id\"]\r\n    }\r\n  | {\r\n      type: ActionType[\"REMOVE_TOAST\"]\r\n      toastId?: ToasterToast[\"id\"]\r\n    }\r\n\r\ninterface State {\r\n  toasts: ToasterToast[]\r\n}\r\n\r\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\r\n\r\nconst addToRemoveQueue = (toastId: string) => {\r\n  if (toastTimeouts.has(toastId)) {\r\n    return\r\n  }\r\n\r\n  const timeout = setTimeout(() => {\r\n    toastTimeouts.delete(toastId)\r\n    dispatch({\r\n      type: \"REMOVE_TOAST\",\r\n      toastId: toastId,\r\n    })\r\n  }, TOAST_REMOVE_DELAY)\r\n\r\n  toastTimeouts.set(toastId, timeout)\r\n}\r\n\r\nexport const reducer = (state: State, action: Action): State => {\r\n  switch (action.type) {\r\n    case \"ADD_TOAST\":\r\n      return {\r\n        ...state,\r\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\r\n      }\r\n\r\n    case \"UPDATE_TOAST\":\r\n      return {\r\n        ...state,\r\n        toasts: state.toasts.map((t) =>\r\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\r\n        ),\r\n      }\r\n\r\n    case \"DISMISS_TOAST\": {\r\n      const { toastId } = action\r\n\r\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\r\n      // but I'll keep it here for simplicity\r\n      if (toastId) {\r\n        addToRemoveQueue(toastId)\r\n      } else {\r\n        state.toasts.forEach((toast) => {\r\n          addToRemoveQueue(toast.id)\r\n        })\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        toasts: state.toasts.map((t) =>\r\n          t.id === toastId || toastId === undefined\r\n            ? {\r\n                ...t,\r\n                open: false,\r\n              }\r\n            : t\r\n        ),\r\n      }\r\n    }\r\n    case \"REMOVE_TOAST\":\r\n      if (action.toastId === undefined) {\r\n        return {\r\n          ...state,\r\n          toasts: [],\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\r\n      }\r\n  }\r\n}\r\n\r\nconst listeners: Array<(state: State) => void> = []\r\n\r\nlet memoryState: State = { toasts: [] }\r\n\r\nfunction dispatch(action: Action) {\r\n  memoryState = reducer(memoryState, action)\r\n  listeners.forEach((listener) => {\r\n    listener(memoryState)\r\n  })\r\n}\r\n\r\ntype Toast = Omit<ToasterToast, \"id\">\r\n\r\nfunction toast({ ...props }: Toast) {\r\n  const id = genId()\r\n\r\n  const update = (props: ToasterToast) =>\r\n    dispatch({\r\n      type: \"UPDATE_TOAST\",\r\n      toast: { ...props, id },\r\n    })\r\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\r\n\r\n  dispatch({\r\n    type: \"ADD_TOAST\",\r\n    toast: {\r\n      ...props,\r\n      id,\r\n      open: true,\r\n      onOpenChange: (open) => {\r\n        if (!open) dismiss()\r\n      },\r\n    },\r\n  })\r\n\r\n  return {\r\n    id: id,\r\n    dismiss,\r\n    update,\r\n  }\r\n}\r\n\r\nfunction useToast() {\r\n  const [state, setState] = React.useState<State>(memoryState)\r\n\r\n  React.useEffect(() => {\r\n    listeners.push(setState)\r\n    return () => {\r\n      const index = listeners.indexOf(setState)\r\n      if (index > -1) {\r\n        listeners.splice(index, 1)\r\n      }\r\n    }\r\n  }, [state])\r\n\r\n  return {\r\n    ...state,\r\n    toast,\r\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\r\n  }\r\n}\r\n\r\nexport { useToast, toast }\r\n","import { clsx, type ClassValue } from \"clsx\"\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n}\r\n","import * as React from \"react\"\r\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\nimport { X } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst ToastProvider = ToastPrimitives.Provider\r\n\r\nconst ToastViewport = React.forwardRef<\r\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\r\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\r\n>(({ className, ...props }, ref) => (\r\n  <ToastPrimitives.Viewport\r\n    ref={ref}\r\n    className={cn(\r\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\r\n\r\nconst toastVariants = cva(\r\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"border bg-background text-foreground\",\r\n        destructive:\r\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nconst Toast = React.forwardRef<\r\n  React.ElementRef<typeof ToastPrimitives.Root>,\r\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\r\n    VariantProps<typeof toastVariants>\r\n>(({ className, variant, ...props }, ref) => {\r\n  return (\r\n    <ToastPrimitives.Root\r\n      ref={ref}\r\n      className={cn(toastVariants({ variant }), className)}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\nToast.displayName = ToastPrimitives.Root.displayName\r\n\r\nconst ToastAction = React.forwardRef<\r\n  React.ElementRef<typeof ToastPrimitives.Action>,\r\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\r\n>(({ className, ...props }, ref) => (\r\n  <ToastPrimitives.Action\r\n    ref={ref}\r\n    className={cn(\r\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nToastAction.displayName = ToastPrimitives.Action.displayName\r\n\r\nconst ToastClose = React.forwardRef<\r\n  React.ElementRef<typeof ToastPrimitives.Close>,\r\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\r\n>(({ className, ...props }, ref) => (\r\n  <ToastPrimitives.Close\r\n    ref={ref}\r\n    className={cn(\r\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\r\n      className\r\n    )}\r\n    toast-close=\"\"\r\n    {...props}\r\n  >\r\n    <X className=\"h-4 w-4\" />\r\n  </ToastPrimitives.Close>\r\n))\r\nToastClose.displayName = ToastPrimitives.Close.displayName\r\n\r\nconst ToastTitle = React.forwardRef<\r\n  React.ElementRef<typeof ToastPrimitives.Title>,\r\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\r\n>(({ className, ...props }, ref) => (\r\n  <ToastPrimitives.Title\r\n    ref={ref}\r\n    className={cn(\"text-sm font-semibold\", className)}\r\n    {...props}\r\n  />\r\n))\r\nToastTitle.displayName = ToastPrimitives.Title.displayName\r\n\r\nconst ToastDescription = React.forwardRef<\r\n  React.ElementRef<typeof ToastPrimitives.Description>,\r\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\r\n>(({ className, ...props }, ref) => (\r\n  <ToastPrimitives.Description\r\n    ref={ref}\r\n    className={cn(\"text-sm opacity-90\", className)}\r\n    {...props}\r\n  />\r\n))\r\nToastDescription.displayName = ToastPrimitives.Description.displayName\r\n\r\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\r\n\r\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\r\n\r\nexport {\r\n  type ToastProps,\r\n  type ToastActionElement,\r\n  ToastProvider,\r\n  ToastViewport,\r\n  Toast,\r\n  ToastTitle,\r\n  ToastDescription,\r\n  ToastClose,\r\n  ToastAction,\r\n}\r\n","import { useToast } from \"@/hooks/use-toast\"\r\nimport {\r\n  Toast,\r\n  ToastClose,\r\n  ToastDescription,\r\n  ToastProvider,\r\n  ToastTitle,\r\n  ToastViewport,\r\n} from \"@/components/ui/toast\"\r\n\r\nexport function Toaster() {\r\n  const { toasts } = useToast()\r\n\r\n  return (\r\n    <ToastProvider>\r\n      {toasts.map(function ({ id, title, description, action, ...props }) {\r\n        return (\r\n          <Toast key={id} {...props}>\r\n            <div className=\"grid gap-1\">\r\n              {title && <ToastTitle>{title}</ToastTitle>}\r\n              {description && (\r\n                <ToastDescription>{description}</ToastDescription>\r\n              )}\r\n            </div>\r\n            {action}\r\n            <ToastClose />\r\n          </Toast>\r\n        )\r\n      })}\r\n      <ToastViewport />\r\n    </ToastProvider>\r\n  )\r\n}\r\n","import { useTheme } from \"next-themes\"\r\nimport { SonnerToaster, toast } from \"./sonnerHelpers\"\r\n\r\ntype ToasterProps = React.ComponentProps<typeof SonnerToaster>\r\n\r\nconst Toaster = ({ ...props }: ToasterProps) => {\r\n  const { theme = \"system\" } = useTheme()\r\n\r\n  return (\r\n    <SonnerToaster\r\n      theme={theme as ToasterProps[\"theme\"]}\r\n      className=\"toaster group\"\r\n      toastOptions={{\r\n        classNames: {\r\n          toast:\r\n            \"group toast group-[.toaster]:bg-background group-[.toaster]:text-foreground group-[.toaster]:border-border group-[.toaster]:shadow-lg\",\r\n          description: \"group-[.toast]:text-muted-foreground\",\r\n          actionButton:\r\n            \"group-[.toast]:bg-primary group-[.toast]:text-primary-foreground\",\r\n          cancelButton:\r\n            \"group-[.toast]:bg-muted group-[.toast]:text-muted-foreground\",\r\n        },\r\n      }}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Toaster }\r\n","import * as React from \"react\"\r\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst TooltipProvider = TooltipPrimitive.Provider\r\n\r\nconst Tooltip = TooltipPrimitive.Root\r\n\r\nconst TooltipTrigger = TooltipPrimitive.Trigger\r\n\r\nconst TooltipContent = React.forwardRef<\r\n  React.ElementRef<typeof TooltipPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\r\n>(({ className, sideOffset = 4, ...props }, ref) => (\r\n  <TooltipPrimitive.Content\r\n    ref={ref}\r\n    sideOffset={sideOffset}\r\n    className={cn(\r\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\r\n\r\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\r\n","import { cva } from \"class-variance-authority\";\r\n\r\nexport const buttonVariants = cva(\r\n  \"inline-flex items-center justify-center gap-2 rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 text-center leading-tight outline-none focus:outline-none\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\r\n        destructive:\r\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\r\n        outline:\r\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\r\n        secondary:\r\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n        highlighted: \"bg-retro-primary text-retro-primary-foreground hover:bg-retro-primary-hover border border-retro-primary hover:border-retro-primary-hover transition-colors duration-200 min-h-[2.5rem] px-3 py-1 whitespace-pre-wrap\",\r\n        blocked: \"bg-slate-700 text-slate-400 cursor-not-allowed opacity-60 border border-slate-600 min-h-[2.5rem] px-3 py-1\",\r\n        plum: \"bg-retro-primary text-retro-primary-foreground hover:bg-retro-primary-hover border border-retro-primary hover:border-retro-primary-hover transition-colors duration-200 min-h-[2.5rem] px-3 py-1 whitespace-pre-wrap\",\r\n        modern3d: \"bg-retro-primary text-retro-primary-foreground hover:bg-retro-primary-hover border border-retro-primary hover:border-retro-primary-hover transition-colors duration-200 min-h-[2.5rem] px-3 py-1 whitespace-pre-wrap\",\r\n        glass: \"bg-retro-primary text-retro-primary-foreground hover:bg-retro-primary-hover border border-retro-primary hover:border-retro-primary-hover transition-colors duration-200 min-h-[2.5rem] px-3 py-1 whitespace-pre-wrap\",\r\n      },\r\n      size: {\r\n        default: \"min-h-[2.5rem] px-4 py-2\",\r\n        sm: \"min-h-[2.25rem] rounded-md px-3 py-1\",\r\n        lg: \"min-h-[2.75rem] rounded-md px-8 py-2\",\r\n        icon: \"h-10 w-10 min-h-[2.5rem]\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n);\r\n","import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\nimport { buttonVariants } from \"./buttonVariants\"\r\n\r\nexport interface ButtonProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    VariantProps<typeof buttonVariants> {\r\n  asChild?: boolean\r\n}\r\n\r\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\r\n    const Comp = asChild ? Slot : \"button\"\r\n    return (\r\n      <Comp\r\n        className={cn(buttonVariants({ variant, size, className }))}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nButton.displayName = \"Button\"\r\n\r\nexport { Button, buttonVariants }\r\n","import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\r\n  ({ className, type, ...props }, ref) => {\r\n    return (\r\n      <input\r\n        type={type}\r\n        className={cn(\r\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nInput.displayName = \"Input\"\r\n\r\nexport { Input }\r\n","import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLHeadingElement>\r\n>(({ className, ...props }, ref) => (\r\n  <h3\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-2xl font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, ...props }, ref) => (\r\n  <p\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n))\r\nCardContent.displayName = \"CardContent\"\r\n\r\nconst CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex items-center p-6 pt-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardFooter.displayName = \"CardFooter\"\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\r\n","export default \"key,en,es-ES,es-LA,ca,zh-CN,zh-TW,ja,it,de,fr,pt-PT,ru,pt-BR,pl,tr,eu,oc,th,ko,cs\\r\\npageNotFound,Page Not Found,Página no encontrada,Página no encontrada,Pàgina no trobada,页面未找到,頁面未找到,ページが見つかりません,Pagina non trovata,Seite nicht gefunden,Page non trouvée,Página não encontrada,Страница не найдена,Página não encontrada,Strona nie znaleziona,Sayfa bulunamadı,Orria ez aurkitua,Pàgina no trobada,ไม่พบหน้า,페이지를 찾을 수 없습니다,Stránka nenalezena\\r\\nclose,Close,Cerrar,Cerrar,Tancar,关闭,關閉,閉じる,Chiudi,Schließen,Fermer,Fechar,Закрыть,Fechar,Zamknij,Kapat,Itxi,Tancar,ปิด,닫기,Zavřít\\r\\nundo,Undo,Deshacer,Deshacer,Desfer,撤销,復原,元に戻す,Annulla,Rückgängig,Annuler,Desfazer,Отменить,Desfazer,Cofnij,Geri al,Dil,Desfer,เลิกทำ,실행 취소,Zpět\\r\\nredo,Redo,Rehacer,Rehacer,Refer,重做,重做,やり直す,Ripristina,Wiederholen,Rétablir,Refazer,Повторить,Refazer,Ponów,Geri yap,Berregin,Refaire,ทำซ้ำ,다시 실행,Znovu\\r\\nreturnToHome,Return to Home,Volver al inicio,Volver al inicio,Tornar a l'inici,返回首页,返回首頁,ホームに戻る,Torna alla home,Zurück zur Startseite,Retour à l'accueil,Voltar ao início,Вернуться на главную,Voltar ao início,Powrót do strony głównej,Ana sayfaya dön,Hasierara itzuli,Tornar a l'inici,กลับหน้าหลัก,홈으로 돌아가기,Vrátit se domů\"","export default \"key,en,es-ES,es-LA,ca,zh-CN,zh-TW,ja,it,de,fr,pt-PT,ru,pt-BR,pl,tr,eu,oc,th,ko,cs\\r\\nchangeGrids,Change grids [G],Cambiar rejillas [G],Cambiar rejillas [G],Canviar quadrícules [G],更改网格 [G],更改網格 [G],グリッドを変更 [G],Cambia griglie [G],Raster ändern [G],Changer les grilles [G],Alterar grelhas [G],Изменить сетки [G],Alterar grades [G],Zmień siatki [G],Izgara değiştir [G],Saretiak aldatu [G],Cambiar grilhas [G],เปลี่ยนเส้นตาราง [G],그리드 변경 [G],Změnit mřížky [G]\\r\\nchangeGridsDesc,\\\"Configure tile and frame grid overlays using pixels of the original image for size and pixels of the rendered image for thickness\\\",\\\"Configurar superposiciones de cuadrícula de mosaicos y marcos utilizando píxeles de la imagen original para el tamaño y píxeles de la imagen renderizada para el grosor\\\",\\\"Configurar superposiciones de cuadrícula de mosaicos y marcos utilizando píxeles de la imagen original para el tamaño y píxeles de la imagen renderizada para el grosor\\\",\\\"Configura les superposicions de graella de rajoles i marcs utilitzant píxels de la imatge original per a la mida i píxels de la imatge renderitzada per al gruix\\\",\\\"配置瓦片和框架网格叠加，使用原始图像的像素进行大小调整，并使用渲染图像的像素进行厚度调整\\\",\\\"配置圖塊和框架網格疊加，使用原始圖像的像素進行大小設定，並使用渲染圖像的像素進行厚度設定\\\",\\\"タイルとフレームのグリッドオーバーレイを設定し、サイズには元の画像のピクセルを使用し、レンダリングされた画像のピクセルを厚さとして使用します\\\",\\\"Configura le sovrapposizioni della griglia di tessere e cornici utilizzando i pixel dell'immagine originale per la dimensione e i pixel dell'immagine renderizzata per lo spessore\\\",\\\"Konfigurieren Sie Kachel- und Rahmenrasterüberlagerungen unter Verwendung von Pixeln des Originalbilds für die Größe und Pixeln des gerenderten Bilds für die Dicke\\\",\\\"Configurer les superpositions de grille de tuiles et de cadres en utilisant les pixels de l'image originale pour la taille et les pixels de l'image rendue pour l'épaisseur\\\",\\\"Configure as sobreposições de grade de ladrilhos e quadros usando pixels da imagem original para o tamanho e pixels da imagem renderizada para a espessura\\\",\\\"Настройте наложения сетки плитки и рамки, используя пиксели исходного изображения для размера и пиксели отрисованного изображения для толщины\\\",\\\"Configure as sobreposições de grade de ladrilhos e quadros usando pixels da imagem original para o tamanho e pixels da imagem renderizada para a espessura\\\",\\\"Skonfiguruj nakładki siatki kafelków i ramek, używając pikseli oryginalnego obrazu do rozmiaru i pikseli wyrenderowanego obrazu do grubości\\\",\\\"Kiremit ve çerçeve ızgara örtülerini yapılandırın, boyut için orijinal görüntü piksellerini ve kalınlık için işlenmiş görüntü piksellerini kullanarak\\\",\\\"Konfiguratu mosaiko eta marko sareta gainjartzeak, jatorrizko irudiaren pixelak tamainarako eta errendatutako irudiaren pixelak lodierarako erabiliz\\\",\\\"Configurar las superposicions de reticle de tauleta e de quadre utilizant los pixèls de l'imatge originala per la talha e los pixèls de l'imatge renduda per l'espessor\\\",\\\"ตั้งค่าการซ้อนทับกริดกระเบื้องและเฟรมโดยใช้พิกเซลของภาพต้นฉบับสำหรับขนาดและพิกเซลของภาพที่เรนเดอร์สำหรับความหนา\\\",\\\"타일과 프레임 그리드 오버레이를 구성하며, 크기는 원본 이미지의 픽셀을 사용하고, 두께는 렌더링된 이미지의 픽셀을 사용합니다\\\",\\\"Nastavte překryvy mřížky dlaždic a rámů pomocí pixelů původního obrázku pro velikost a pixelů vykresleného obrázku pro tloušťku\\\"\\r\\nshowTileGrid,Show tile grid,Mostrar rejilla de tiles,Mostrar rejilla de tiles,Mostrar reixeta de tiles,显示瓦片网格,顯示圖塊網格,タイルグリッドを表示,Mostra griglia dei tile,Tile-Gitter anzeigen,Afficher la grille de tuiles,Mostrar grelha de tiles,Показать сетку тайлов,Mostrar grade de tiles,Pokaż siatkę kafelków,Tile ızgarasını göster,Tile sareta erakutsi,Mostrar reixeta de tiles,แสดงกริดไทล์,타일 그리드 표시,Zobrazit mřížku dlaždic\\r\\nshowFrameGrid,Show frame grid,Mostrar rejilla de fotogramas,Mostrar rejilla de fotogramas,Mostrar reixeta de fotogrames,显示帧网格,顯示幀網格,フレームグリッドを表示,Mostra griglia dei frame,Frame-Gitter anzeigen,Afficher la grille de cadres,Mostrar grelha de frames,Показать сетку кадров,Mostrar grade de quadros,Pokaż siatkę klatek,Kare ızgarasını göster,Frame sareta erakutsi,Mostrar reixeta de fotogrames,แสดงกริดเฟรม,프레임 그리드 표시,Zobrazit mřížku snímků\\r\\ntileWidth,Width,Ancho,Ancho,Amplada,宽度,寬度,幅,Larghezza,Breite,Largeur,Largura,Ширина,Largura,Szerokość,Genişlik,Zabalera,Amplada,ความกว้าง,너비,Šířka\\r\\ntileHeight,Height,Alto,Alto,Alçada,高度,高度,高さ,Altezza,Höhe,Hauteur,Altura,Высота,Altura,Wysokość,Yükseklik,Altuera,Alçada,ความสูง,높이,Výška\\r\\ntileLineThickness,Line thickness,Grosor de línea,Grosor de línea,Gruix de la línia,线条厚度,線條厚度,線の太さ,Spessore della linea,Linienstärke,Épaisseur de ligne,Espessura da linha,Толщина линии,Espessura da linha,Grubość linii,Çizgi kalınlığı,Lerroaren lodiera,Espessor de la linha,ความหนาของเส้น,선 두께,Tloušťka čáry\\r\\ntileGridColor,Tile grid color,Color de la rejilla de tiles,Color de la rejilla de tiles,Color de la reixeta de tiles,瓦片网格颜色,圖塊網格顏色,タイルグリッドの色,Colore griglia tile,Tile-Gitterfarbe,Couleur de la grille de tuiles,Cor da grelha de tiles,Цвет сетки тайлов,Cor da grade de tiles,Kolor siatki kafelków,Tile ızgara rengi,Tile sareta kolorea,Color de la reixeta de tiles,สีกริดไทล์,타일 그리드 색상,Barva mřížky dlaždic\\r\\nframeWidth,Width,Ancho,Ancho,Amplada,宽度,寬度,幅,Larghezza,Breite,Largeur,Largura,Ширина,Largura,Szerokość,Genişlik,Zabalera,Amplada,ความกว้าง,너비,Šířka\\r\\nframeHeight,Height,Alto,Alto,Alçada,高度,高度,高さ,Altezza,Höhe,Hauteur,Altura,Высота,Altura,Wysokość,Yükseklik,Altuera,Alçada,ความสูง,높이,Výška\\r\\nframeLineThickness,Line thickness,Grosor de línea,Grosor de línea,Gruix de la línia,线条厚度,線條厚度,線の太さ,Spessore della linea,Linienstärke,Épaisseur de ligne,Espessura da linha,Толщина линии,Espessura da linha,Grubość linii,Çizgi kalınlığı,Lerroaren lodiera,Espessor de la linha,ความหนาของเส้น,선 두께,Tloušťka čáry\\r\\nframeGridColor,Frame grid color,Color de la rejilla de fotogramas,Color de la rejilla de fotogramas,Color de la reixeta de fotogrames,帧网格颜色,幀網格顏色,フレームグリッドの色,Colore griglia frame,Frame-Gitterfarbe,Couleur de la grille de cadres,Cor da grelha de frames,Цвет сетки кадров,Cor da grade de quadros,Kolor siatki klatek,Kare ızgara rengi,Frame sareta kolorea,Color de la reixeta de fotogrames,สีกริดเฟรม,프레임 그리드 색상,Barva mřížky snímků\\r\\nwidth,Width,Ancho,Ancho,Amplada,宽度,寬度,幅,Larghezza,Breite,Largeur,Largura,Ширина,Largura,Szerokość,Genişlik,Zabalera,Amplada,ความกว้าง,너비,Šířka\\r\\nheight,Height,Alto,Alto,Alçada,高度,高度,高さ,Altezza,Höhe,Hauteur,Altura,Высота,Altura,Wysokość,Yükseklik,Altuera,Alçada,ความสูง,높이,Výška\"","export default \"key,en,es-ES,es-LA,ca,zh-CN,zh-TW,ja,it,de,fr,pt-PT,ru,pt-BR,pl,tr,eu,oc,th,ko,cs\\r\\nchangeLanguage,Change language [L],Cambiar idioma [L],Cambiar idioma [L],Canviar idioma [L],更改语言 [L],更改語言 [L],言語を変更 [L],Cambia lingua [L],Sprache ändern [L],Changer la langue [L],Alterar idioma [L],Изменить язык [L],Alterar idioma [L],Zmień język [L],Dili değiştir [L],Hizkuntza aldatu [L],Canviar llengua [L],เปลี่ยนภาษา [L],언어 변경 [L],Změnit jazyk [L]\\r\\nchangeLanguageDesc,Choose a new language that you want to use,Elige un nuevo idioma que quieras usar,Elige un nuevo idioma que quieras usar,Tria un nou idioma que vulguis utilitzar,选择您想要使用的新语言,選擇您想要使用的新語言,使用したい新しい言語を選択してください,Scegli una nuova lingua che desideri utilizzare,Wählen Sie eine neue Sprache aus, die Sie verwenden möchten,Choisissez une nouvelle langue que vous souhaitez utiliser,Escolha um novo idioma que deseja usar,Выберите новый язык, который вы хотите использовать,Escolha um novo idioma que você quer usar,Wybierz nowy język, który chcesz używać,Kullanmak istediğiniz yeni bir dil seçin,Aukeratu erabili nahi duzun hizkuntza berri bat,Causissètz una nòva lenga que volètz utilizar,เลือกภาษาใหม่ที่คุณต้องการใช้,사용하려는 새 언어를 선택하세요,Vyberte nový jazyk, který chcete používat\\r\\nlanguage,Language,Idioma,Idioma,Idioma,语言,語言,言語,Lingua,Sprache,Langue,Idioma,Язык,Idioma,Język,Dil, Hizkuntza,Idioma,ภาษา,언어,Jazyk\\r\\n\"","export default \"key,en,es-ES,es-LA,ca,zh-CN,zh-TW,ja,it,de,fr,pt-PT,ru,pt-BR,pl,tr,eu,oc,th,ko,cs\\r\\nchangePalette,Change Palette [P],Cambiar paleta [P],Cambiar paleta [P],Canviar paleta [P],更换调色板 [P],更換調色盤 [P],パレットを変更 [P],Cambia palette [P],Palette wechseln [P],Changer la palette [P],Alterar paleta [P],Изменить палитру [P],Alterar paleta [P],Zmień paletę [P],Paleti değiştir [P],Aldatu paleta [P],Cambiar paleta [P],เปลี่ยนพาเลท [P],팔레트 변경 [P],Změnit paletu [P]\\r\\nchangePaletteDesc,\\\"Select a retro platform color palette to apply\\\",\\\"Selecciona una paleta de colores retro para aplicar\\\",\\\"Selecciona una paleta de colores retro para aplicar\\\",\\\"Selecciona una paleta de colors de plataforma retro per aplicar\\\",\\\"选择要应用的复古平台调色板\\\",\\\"選擇要套用的復古平台調色盤\\\",\\\"適用するレトロ機種のカラーパレットを選択\\\",\\\"Seleziona una tavolozza di colori di piattaforme retrò da applicare\\\",\\\"Eine Retro‑Plattform‑Farbpalette zum Anwenden auswählen\\\",\\\"Sélectionner une palette de couleurs de plateforme rétro à appliquer\\\",\\\"Selecionar uma paleta de cores de plataforma retro para aplicar\\\",\\\"Выберите палитру цветов ретро‑платформы для применения\\\",\\\"Selecionar uma paleta de cores de plataforma retrô para aplicar\\\",\\\"Wybierz paletę kolorów retro‑platformy do zastosowania\\\",\\\"Uygulamak için retro platform renk paletini seçin\\\",\\\"Aplikatzeko plataforma retroetako kolore‑paleta bat aukeratu\\\",\\\"Seleccionar una paleta de colors de plataforma retro d’aplicar\\\",\\\"เลือกจานสีของแพลตฟอร์มยุคเก่าเพื่อใช้งาน\\\",\\\"적용할 레트로 플랫폼 색상 팔레트를 선택하세요\\\",\\\"Vyberte retro paletu barev platformy k použití\\\"\\r\\nselectPalette,Select Palette,Seleccionar paleta,Seleccionar paleta,Seleccionar paleta,选择调色板,選擇調色盤,パレットを選択,Seleziona palette,Palette auswählen,Sélectionner palette,Selecionar paleta,Выбрать палитру,Selecionar paleta,Wybierz paletę,Palet seç,Hautatu paleta,Seleccionar paleta,เลือกพาเลท,팔레트 선택,Vybrat paletu\\r\\noriginalPalette,Original,Original,Original,Original,原始,原始,オリジナル,Originale,Original,Original,Original,Оригинал,Original,Original,Orijinal,Jatorrizkoa,Original,ต้นฉบับ,원본,Původní\\r\\nunlimitedColors,Unlimited,Ilimitado,Ilimitado,Ilimitat,无限,無限,無制限,Illimitato,Unbegrenzt,Illimité,Ilimitado,Неограниченно,Ilimitado,Nielimitowane,Sınırsız,Mugagabea,Ilimitat,ไม่จำกัด,무제한,Neomezené\\r\\namstradCpcColors,27 colors,27 colores,27 colores,27 colors,27 色,27 色,27 色,27 colori,27 Farben,27 couleurs,27 cores,27 цветов,27 cores,27 kolorów,27 renk,27 kolore,27 colors,27 สี,27 색,27 barev\\r\\ncgaPalette0,CGA Palette 0,Paleta CGA 0,Paleta CGA 0,Paleta CGA 0,CGA 调色板 0,CGA 調色盤 0,CGA パレット 0,Palette CGA 0,CGA Palette 0,Palette CGA 0,Paleta CGA 0,Палетка CGA 0,Paleta CGA 0,Paleta CGA 0,CGA palet 0,CGA paleta 0,Paleta CGA 0,พาเลท CGA 0,CGA 팔레트 0,Paleta CGA 0\\r\\ncgaPalette1,CGA Palette 1,Paleta CGA 1,Paleta CGA 1,Paleta CGA 1,CGA 调色板 1,CGA 調色盤 1,CGA パレット 1,Palette CGA 1,CGA Palette 1,Palette CGA 1,Paleta CGA 1,Палетка CGA 1,Paleta CGA 1,Paleta CGA 1,CGA palet 1,CGA paleta 1,Paleta CGA 1,พาเลท CGA 1,CGA 팔레트 1,Paleta CGA 1\\r\\ncgaPalette2,CGA Palette 2,Paleta CGA 2,Paleta CGA 2,Paleta CGA 2,CGA 调色板 2,CGA 調色盤 2,CGA パレット 2,Palette CGA 2,CGA Palette 2,Palette CGA 2,Paleta CGA 2,Палетка CGA 2,Paleta CGA 2,Paleta CGA 2,CGA palet 2,CGA paleta 2,Paleta CGA 2,พาเลท CGA 2,CGA 팔레트 2,Paleta CGA 2\\r\\ncgaColors,4 colors (CGA),4 colores (CGA),4 colores (CGA),4 colors (CGA),4 色（CGA）,4 色（CGA）,4 色（CGA）,4 colori (CGA),4 Farben (CGA),4 couleurs (CGA),4 cores (CGA),4 цвета (CGA),4 cores (CGA),4 kolory (CGA),4 renk (CGA),4 kolore (CGA),4 colors (CGA),4 สี (CGA),4 색 (CGA),4 barvy (CGA)\\r\\ncommodore64Colors,16 colors,16 colores,16 colores,16 colors,16 色,16 色,16 色,16 colori,16 Farben,16 couleurs,16 cores,16 цветов,16 cores,16 kolorów,16 renk,16 kolore,16 colors,16 สี,16 색,16 barev\\r\\ngameBoy,Game Boy (GB Studio sprites),Game Boy (sprites GB Studio),Game Boy (sprites GB Studio),Game Boy (sprites GB Studio),Game Boy（GB Studio 精灵）,Game Boy（GB Studio 精靈）,ゲームボーイ（GB Studio スプライト）,Game Boy (sprite GB Studio),Game Boy (GB Studio Sprites),Game Boy (sprites GB Studio),Game Boy (sprites GB Studio),Game Boy (спрайты GB Studio),Game Boy (sprites GB Studio),Game Boy (sprite'y GB Studio),Game Boy (GB Studio sprite'ları),Game Boy (GB Studio sprites),Game Boy (sprites GB Studio),Game Boy (สไปรท์ GB Studio),Game Boy (GB Studio 스프라이트),Game Boy (sprity GB Studio)\\r\\ngameBoyBg,Game Boy (GB Studio backgrounds),Game Boy (fondos GB Studio),Game Boy (fondos GB Studio),Game Boy (fons GB Studio),Game Boy（GB Studio 背景）,Game Boy（GB Studio 背景）,ゲームボーイ（GB Studio 背景）,Game Boy (sfondi GB Studio),Game Boy (GB Studio Hintergründe),Game Boy (fonds GB Studio),Game Boy (fundos GB Studio),Game Boy (фоны GB Studio),Game Boy (fundos GB Studio),Game Boy (tła GB Studio),Game Boy (GB Studio arka planları),Game Boy (GB Studio atzealdeak),Game Boy (fons GB Studio),Game Boy (พื้นหลัง GB Studio),Game Boy (GB Studio 배경),Game Boy (pozadí GB Studio)\\r\\ngameBoyRealistic,Game Boy (realistic),Game Boy (realista),Game Boy (realista),Game Boy (realista),Game Boy（真实感）,Game Boy（真實風格）,ゲームボーイ（リアル）,Game Boy (realistico),Game Boy (realistisch),Game Boy (réaliste),Game Boy (realista),Game Boy (реалистичный),Game Boy (realista),Game Boy (realistyczne),Game Boy (gerçekçi),Game Boy (errealista),Game Boy (realista),Game Boy (สมจริง),Game Boy (리얼리스틱),Game Boy (realistické)\\r\\ngameBoyColors,4 colors (green),4 colores (verde),4 colores (verde),4 colors (verd),4 色（绿色）,4 色（綠色）,4 色（緑）,4 colori (verde),4 Farben (grün),4 couleurs (vert),4 cores (verde),4 цвета (зеленый),4 cores (verde),4 kolory (zielone),4 renk (yeşil),4 kolore (berdea),4 colors (verd),4 สี (เขียว),4 색 (녹색),4 barvy (zelené)\\r\\nmegaDrive16,Mega Drive (sprite sheet),Mega Drive (sprites),Mega Drive (sprites),Mega Drive (sprites),Mega Drive（精灵表）,Mega Drive（精靈表）,メガドライブ（スプライトシート）,Mega Drive (sprite),Mega Drive (Sprites),Mega Drive (sprites),Mega Drive (folha de sprites),Mega Drive (спрайт-лист),Mega Drive (folha de sprites),Mega Drive (arkusz sprite'ów),Mega Drive (sprite sayfası),Mega Drive (sprite orria),Mega Drive (sprites),Mega Drive (สไปรท์ชีต),Mega Drive (스프라이트 시트),Mega Drive (sprite sheet)\\r\\nmegaDrive16Colors,16 colors (RGB 3-3-3),16 colores (RGB 3-3-3),16 colores (RGB 3-3-3),16 colors (RGB 3-3-3),16 色（RGB 3-3-3）,16 色（RGB 3-3-3）,16 色（RGB 3-3-3）,16 colori (RGB 3-3-3),16 Farben (RGB 3-3-3),16 couleurs (RGB 3-3-3),16 cores (RGB 3-3-3),16 цветов (RGB 3-3-3),16 cores (RGB 3-3-3),16 kolorów (RGB 3-3-3),16 renk (RGB 3-3-3),16 kolore (RGB 3-3-3),16 colors (RGB 3-3-3),16 สี (RGB 3-3-3),16 색 (RGB 3-3-3),16 barev (RGB 3-3-3)\\r\\nnesColors,64 colors,64 colores,64 colores,64 colors,64 色,64 色,64 色,64 colori,64 Farben,64 couleurs,64 cores,64 цвета,64 cores,64 kolory,64 renk,64 kolore,64 colors,64 สี,64 색,64 barev\\r\\nzxSpectrum,ZX Spectrum (16 colors),ZX Spectrum (16 colores),ZX Spectrum (16 colores),ZX Spectrum (16 colors),ZX Spectrum（16 色）,ZX Spectrum（16 色）,ZX Spectrum（16色）,ZX Spectrum (16 colori),ZX Spectrum (16 Farben),ZX Spectrum (16 couleurs),ZX Spectrum (16 cores),ZX Spectrum (16 цветов),ZX Spectrum (16 cores),ZX Spectrum (16 kolorów),ZX Spectrum (16 renk),ZX Spectrum (16 kolore),ZX Spectrum (16 colors),ZX Spectrum (16 สี),ZX Spectrum (16색),ZX Spectrum (16 barev)\\r\\nzxSpectrumColors,16 colors (4-bit),16 colores (4-bit),16 colores (4-bit),16 colors (4-bit),16 色（4-bit）,16 色（4-bit）,16 色（4-bit）,16 colori (4-bit),16 Farben (4-bit),16 couleurs (4-bit),16 cores (4-bit),16 цветов (4-bit),16 cores (4-bit),16 kolory (4-bit),16 renk (4-bit),16 kolore (4-bit),16 colors (4-bit),16 สี (4-bit),16 색 (4-bit),16 barev (4-bit)\"","export default \"key,en,es-ES,es-LA,ca,zh-CN,zh-TW,ja,it,de,fr,pt-PT,ru,pt-BR,pl,tr,eu,oc,th,ko,cs\\r\\nchangeResolution,Change resolution [R],Cambiar resolución [R],Cambiar resolución [R],Canviar resolució [R],更改分辨率 [R],更改解析度 [R],解像度を変更 [R],Cambia risoluzione [R],Auflösung ändern [R],Changer la résolution [R],Alterar resolução [R],Изменить разрешение [R],Alterar resolução [R],Zmień rozdzielczość [R],Çözünürlüğü değiştir [R],Bereizmena aldatu [R],Cambiar resolucion [R],เปลี่ยนความละเอียด [R],해상도 변경 [R],Změnit rozlišení [R]\\r\\nchangeResolutionDesc,Choose target resolution and scaling mode,Elige la resolución objetivo y el modo de escalado,Elige la resolución objetivo y el modo de escalado,Tria la resolució objectiu i el mode d’escalat,选择目标分辨率和缩放模式,選擇目標解析度與縮放模式,目標解像度とスケーリング方式を選択,Scegli la risoluzione di destinazione e la modalità di scalatura,Zielauflösung und Skalierungsmodus wählen,Choisir la résolution cible et le mode d’échelle,Escolher a resolução-alvo e o modo de escala,Выберите целевое разрешение и режим масштабирования,Escolher a resolução alvo e o modo de escala,Wybierz docelową rozdzielczość i tryb skalowania,Hedef çözünürlüğü ve ölçekleme modunu seçin,Hautatu helburuko bereizmena eta eskalatze modua,Causir la resolucion cibla e lo mòde d’escala,เลือกความละเอียดเป้าหมายและโหมดการปรับสเกล,목표 해상도와 스케일링 모드를 선택하세요,Vyberte cílové rozlišení a režim škálování\\r\\nscalingMode,Scaling Mode,Modo de escalado,Modo de escalado,Mode d'escalat,缩放模式,縮放模式,スケーリングモード,Modalità di scalatura,Skalierungsmodus,Mode de mise à l'échelle,Modo de escala,Режим масштабирования,Modo de escala,Tryb skalowania,Ölçekleme modu,Eskalatze modua,Mode d’escalat,โหมดสเกล,스케일 모드,Režim škálování\\r\\nstretch,Stretch,Estirar,Estirar,Estirar,拉伸,拉伸,伸縮,Allunga,Strecken,Étirer,Esticar,Растянуть,Esticar,Rozciągnij,Esnet,Luzatu,Estirar,ยืด,늘리기,Natáhnout\\r\\nkeepAspectRatio,Keep aspect ratio,Mantener relación de aspecto,Mantener relación de aspecto,Mantenir la relació d'aspecte,保持宽高比,保持寬高比,アスペクト比を保持,Mantieni proporzioni,Seitenverhältnis beibehalten,Conserver les proportions,Manter proporção,Sохранять соотношение сторон,Manter proporção,Zachowaj proporcje,En-boy oranını koru,Aspektu-erlazioa mantendu,Gardar lo ràtio d'aspècte,รักษาอัตราส่วนกว้างยาว,종횡비 유지,Zachovat poměr stran\\r\\ndontScale,Don't scale,No escalar,No escalar,No escalar,不缩放,不縮放,スケールしない,Non scalare,Nicht skalieren,Ne pas mettre à l'échelle,Não escalar,Не масштабировать,Não escalar,Nie skaluj,Ölçeklendirme,Es skalatu,No escalar,ไม่ย่อ/ขยาย,스케일하지 않음,Není škálováno\\r\\nalignment,Alignment,Alineación,Alineación,Alineació,对齐,對齊,配置,Allineamento,Ausrichtung,Alignement,Alinhamento,Выравнивание,Alinhamento,Wyrównanie,Hizalama,Lerrokatzea,Alineacion,การจัดตำแหน่ง,정렬,Vyrovnání\\r\\nalignTopLeft,Top Left,Arriba izquierda,Arriba izquierda,A dalt a l'esquerra,左上,左上,左上,In alto a sinistra,Oben links,En haut à gauche,Cima esquerda,Верхний левый,Cima esquerda,Góra lewo,Üst sol,Goiko ezkerra,A dalt a l’esquerra,มุมบนซ้าย,좌상,Nahoru vlevo\\r\\nalignTopCenter,Top Center,Arriba centro,Arriba centro,A dalt al centre,上中,上中,上中央,In alto al centro,Oben Mitte,En haut au centre,Cima centro,Верхний центр,Cima centro,Góra środek,Üst orta,Goiko erdigunea,A dalt al centre,บนกลาง,상중,Nahoru střed\\r\\nalignTopRight,Top Right,Arriba derecha,Arriba derecha,A dalt a la dreta,右上,右上,右上,In alto a destra,Oben rechts,En haut à droite,Cima direita,Верхний правый,Cima direita,Góra prawo,Üst sağ,Goiko eskuina,A dalt a la dreta,มุมบนขวา,우상,Nahoru vpravo\\r\\nalignMiddleLeft,Middle Left,Centro izquierda,Centro izquierda,Al centre esquerra,中左,中左,中左,Centro sinistra,Mitte links,Milieu gauche,Meio esquerda,Средний левый,Meio esquerda,Środek lewo,Orta sol,Erdiko ezkerra,Al centre esquerra,กลางซ้าย,중좌,Střed vlevo\\r\\nalignMiddleCenter,Middle Center,Centro,Centro,Al centre,居中,置中,中央,Centro,Mitte,Milieu,Centro,Центр,Centro,Środek,Orta,Erdigunea,Al centre,กึ่งกลาง,중앙,Střed\\r\\nalignMiddleRight,Middle Right,Centro derecha,Centro derecha,Al centre dreta,中右,中右,中右,Centro destra,Mitte rechts,Milieu droit,Meio direita,Средний правый,Meio direita,Środek prawo,Orta sağ,Erdiko eskuina,Al centre dreta,กลางขวา,중우,Střed vpravo\\r\\nalignBottomLeft,Bottom Left,Abajo izquierda,Abajo izquierda,A baix a l'esquerra,左下,左下,左下,In basso a sinistra,Unten links,En bas à gauche,Baixo esquerda,Нижний левый,Baixo esquerda,Dół lewo,Alt sol,Beheko ezkerra,A baix a l’esquerra,มุมล่างซ้าย,좌하,Dole vlevo\\r\\nalignBottomCenter,Bottom Center,Abajo centro,Abajo centro,A baix al centre,下中,下中,下中央,In basso al centro,Unten Mitte,En bas au centre,Baixo centro,Нижний центр,Baixo centro,Dół środek,Alt orta,Beheko erdigunea,A baix al centre,ล่างกลาง,하중,Dole střed\\r\\nalignBottomRight,Bottom Right,Abajo derecha,Abajo derecha,A baix a la dreta,右下,右下,右下,In basso a destra,Unten rechts,En bas à droite,Baixo direita,Нижний правый,Baixo direita,Dół prawo,Alt sağ,Beheko eskuina,A baix a la dreta,มุมล่างขวา,우하,Dole vpravo\\r\\ntargetResolution,Target resolution,Resolución objetivo,Resolución objetivo,Resolució objectiu,目标分辨率,目標解析度,目標解像度,Risoluzione target,Zielauflösung,Résolution cible,Resolução alvo,Целевое разрешение,Resolução alvo,Docelowa rozdzielczość,Hedef çözünürlük,Helburuko bereizmena,Resolucion cibla,ความละเอียดเป้าหมาย,목표 해상도,Cílové rozlišení\\r\\noriginalSize,Original,Original,Original,Original,原始,原始,オリジナル,Originale,Original,Original,Original,Оригинал,Original,Oryginal,Orijinal,Jatorrizkoa,Original,ต้นฉบับ,원본,Původní\\r\\nkeepOriginalSize,Keep original size,Mantener tamaño original,Mantener tamaño original,Mantenir mida original,保留原始大小,保持原始大小,元のサイズを保持,Mantieni dimensione originale,Originalgröße beibehalten,Conserver la taille originale,Manter tamanho original,Сохранить исходный размер,Manter tamanho original,Zachowaj oryginalny rozmiar,Orijinal boyutu koru,Jatorrizko tamaina mantendu,Mantenir la mida original,เก็บขนาดต้นฉบับ,원본 크기 유지,Udržet původní velikost\\r\\nunscaledSize,Unscaled resolution,Resolución sin escalado,Resolución sin escalado,Resolució sense escalat,未缩放分辨率,未縮放解析度,非スケール解像度,Risoluzione non scalata,Unskalierte Auflösung,Résolution sans mise à l'échelle,Resolução não escalada,Немасштабированное разрешение,Resolução não escalada,Nieskalowana rozdzielczość,Ölçeklenmemiş çözünürlük,Eskalatu gabeko bereizmena,Resolucion sens escalat,ความละเอียดไม่สเกล,비확대 해상도,Neskalované rozlišení\\r\\nremoveScaling,Remove scaling from pixel art,Eliminar escalado del pixel art,Eliminar escalado del pixel art,Eliminar escalat del pixel art,移除像素艺术缩放,移除像素藝術縮放,ピクセルアートのスケーリングを除去,Rimuovi scaling dal pixel art,Skalierung vom Pixelart entfernen,Supprimer la mise à l'échelle du pixel art,Remover escala de pixel art,Удалить масштабирование из пиксель-арта,Remover escala de pixel art,Usuń skalowanie z pixel art,Piksel sanatından ölçeklendirmeyi kaldır,Pixel arteko eskalatzea kendu,Eliminar l’escalat del pixel art,นำการสเกลออกจาก pixel art,픽셀 아트 스케일 제거,Odstranit škálování z pixelového umění\\r\\namstradCpc0,\\\"Amstrad CPC mode 0, Commodore 64 Multicolor\\\",\\\"Modo Amstrad CPC 0, Commodore 64 multicolor\\\",\\\"Modo Amstrad CPC 0, Commodore 64 multicolor\\\",\\\"Mode Amstrad CPC 0, Commodore 64 multicolor\\\",Amstrad CPC 模式 0，Commodore 64 多色,Amstrad CPC 模式 0，Commodore 64 多色,Amstrad CPC モード 0、Commodore 64 マルチカラー,\\\"Modalità Amstrad CPC 0, Commodore 64 multicolor\\\",\\\"Amstrad CPC Modus 0, Commodore 64 Mehrfarben\\\",\\\"Mode Amstrad CPC 0, Commodore 64 multicolore\\\",\\\"Modo Amstrad CPC 0, Commodore 64 Multicolor\\\",\\\"Режим Amstrad CPC 0, Commodore 64 Многоцветный\\\",\\\"Modo Amstrad CPC 0, Commodore 64 Multicolor\\\",\\\"Tryb Amstrad CPC 0, Commodore 64 Wielokolorowy\\\",\\\"Amstrad CPC modu 0, Commodore 64 Çok Renkli\\\",\\\"Amstrad CPC mode 0, Commodore 64 Multikolore\\\",\\\"Mode Amstrad CPC 0, Commodore 64 multicolor\\\",\\\"โหมด Amstrad CPC 0, Commodore 64 หลายสี\\\",\\\"Amstrad CPC 모드 0, Commodore 64 멀티컬러\\\",\\\"Režim Amstrad CPC 0, Commodore 64 Vícebarevný\\\"\\r\\namstradCpc1,\\\"Amstrad CPC mode 1, Commodore 64 High-Res, Commodore Amiga Low Res NTSC\\\",\\\"Modo Amstrad CPC 1, Commodore 64 High-Res, Amiga Low Res NTSC\\\",\\\"Modo Amstrad CPC 1, Commodore 64 High-Res, Amiga Low Res NTSC\\\",\\\"Mode Amstrad CPC 1, Commodore 64 High-Res, Amiga Low Res NTSC\\\",Amstrad CPC 模式 1、Commodore 64 高分辨率、Amiga 低分辨率 NTSC,Amstrad CPC 模式 1、Commodore 64 高解析度、Amiga 低解析度 NTSC,Amstrad CPC モード 1、Commodore 64 High-Res、Amiga Low Res NTSC,\\\"Modalità Amstrad CPC 1, Commodore 64 High-Res, Amiga Low Res NTSC\\\",\\\"Amstrad CPC Modus 1, Commodore 64 High-Res, Amiga Low Res NTSC\\\",\\\"Mode Amstrad CPC 1, Commodore 64 High-Res, Amiga Low Res NTSC\\\",\\\"Modo Amstrad CPC 1, Commodore 64 High-Res, Commodore Amiga Low Res NTSC\\\",\\\"Режим Amstrad CPC 1, Commodore 64 High-Res, Commodore Amiga Low Res NTSC\\\",\\\"Modo Amstrad CPC 1, Commodore 64 High-Res, Commodore Amiga Low Res NTSC\\\",\\\"Tryb Amstrad CPC 1, Commodore 64 High-Res, Commodore Amiga Low Res NTSC\\\",\\\"Amstrad CPC modu 1, Commodore 64 Yüksek Çözünürlük, Commodore Amiga Düşük Çözünürlük NTSC\\\",\\\"Amstrad CPC mode 1, Commodore 64 High-Res, Commodore Amiga Low Res NTSC\\\",\\\"Mode Amstrad CPC 1, Commodore 64 High-Res, Amiga Low Res NTSC\\\",\\\"โหมด Amstrad CPC 1, Commodore 64 ความละเอียดสูง, Amiga ความละเอียดต่ำ NTSC\\\",\\\"Amstrad CPC 모드 1, Commodore 64 고해상도, Amiga 저해상도 NTSC\\\",\\\"Režim Amstrad CPC 1, Commodore 64 Vysoké rozlišení, Commodore Amiga Nízké rozlišení NTSC\\\"\\r\\namstradCpc2,\\\"Amstrad CPC mode 2, Commodore Amiga Hi-Res NTSC\\\",\\\"Modo Amstrad CPC 2, Commodore Amiga Hi-Res NTSC\\\",\\\"Modo Amstrad CPC 2, Commodore Amiga Hi-Res NTSC\\\",\\\"Mode Amstrad CPC 2, Commodore Amiga Hi-Res NTSC\\\",Amstrad CPC 模式 2、Commodore Amiga 高分辨率 NTSC,Amstrad CPC 模式 2、Commodore Amiga 高解析度 NTSC,Amstrad CPC モード 2、Commodore Amiga Hi-Res NTSC,\\\"Modalità Amstrad CPC 2, Commodore Amiga Hi-Res NTSC\\\",\\\"Amstrad CPC Modus 2, Commodore Amiga Hi-Res NTSC\\\",\\\"Mode Amstrad CPC 2, Commodore Amiga Hi-Res NTSC\\\",\\\"Modo Amstrad CPC 2, Commodore Amiga Hi-Res NTSC\\\",\\\"Режим Amstrad CPC 2, Commodore Amiga Hi-Res NTSC\\\",\\\"Modo Amstrad CPC 2, Commodore Amiga Hi-Res NTSC\\\",\\\"Tryb Amstrad CPC 2, Commodore Amiga Hi-Res NTSC\\\",\\\"Amstrad CPC modu 2, Commodore Amiga Yüksek Çözünürlük NTSC\\\",\\\"Amstrad CPC mode 2, Commodore Amiga Hi-Res NTSC\\\",\\\"Mode Amstrad CPC 2, Commodore Amiga Hi-Res NTSC\\\",\\\"โหมด Amstrad CPC 2, Commodore Amiga Hi-Res NTSC\\\",\\\"Amstrad CPC 모드 2, Commodore Amiga Hi-Res NTSC\\\",\\\"Režim Amstrad CPC 2, Commodore Amiga Vysoké rozlišení NTSC\\\"\\r\\ncanvasNotSupported,Canvas not supported,Canvas no soportado,Canvas no soportado,Canvas no compatible,浏览器不支持 Canvas,瀏覽器不支援 Canvas,Canvas がサポートされていません,Canvas non supportato,Canvas wird nicht unterstützt,Canvas non pris en charge,Lona não suportada,Canvas не поддерживается,Lona não suportada,Płótno nieobsługiwane,Canvas desteklenmiyor,Kanbasa ez da onartzen,Canvas no compatible,เบราว์เซอร์ไม่รองรับ Canvas,브라우저가 Canvas를 지원하지 않습니다,Plátno není podporováno\\r\\ntargetResolutionTooLarge,Target resolution too large! Maximum is 4096px,¡Resolución objetivo demasiado grande! El máximo es 4096px,¡Resolución objetivo demasiado grande! El máximo es 4096px,Resolució objectiu massa gran! El màxim és 4096px,目标分辨率过大！最大为 4096px,目標解析度過大！最大為 4096px,目標解像度が大きすぎます！最大は 4096px,Risoluzione target troppo alta! Il massimo è 4096px,Zielauflösung zu groß! Maximum ist 4096px,Résolution cible trop élevée ! Le maximum est 4096px,Resolução alvo muito grande! O máximo é 4096px,Целевое разрешение слишком велико! Максимум 4096px,Resolução alvo muito grande! O máximo é 4096px,Docelowa rozdzielczość za duża! Maksimum to 4096px,Hedef çözünürlük çok büyük! Maksimum 4096px,Helburuko bereizmena handiegia da! Gehienez 4096px,Resolucion cibla tròp nauta ! Lo maximum es 4096px,ความละเอียดเป้าหมายใหญ่เกินไป! สูงสุดคือ 4096px,목표 해상도가 너무 큽니다! 최대: 4096px,Cílové rozlišení je příliš velké! Maximum je 4096px\\r\\nimageTooLargeToProcess,Image too large to process. Try a smaller image or resolution.,Imagen demasiado grande para procesar. Prueba con una imagen o resolución menor.,Imagen demasiado grande para procesar. Prueba con una imagen o resolución menor.,Imatge massa gran per processar. Prova amb una imatge o resolució menor.,图片太大无法处理。请尝试更小的图片或分辨率。,圖片太大無法處理。請嘗試較小的圖片或解析度。,処理するには画像が大きすぎます。小さい画像や解像度を試してください。,Immagine troppo grande per essere processata. Prova con un'immagine o una risoluzione più piccola.,Bild zu groß zum Verarbeiten. Versuche ein kleineres Bild oder eine geringere Auflösung.,Image trop grande pour être traitée. Essayez une image ou une résolution plus petite.,Imagem muito grande para processar. Tente uma imagem ou resolução menor.,Изображение слишком большое для обработки. Попробуйте изображение или разрешение меньшего размера.,Imagem muito grande para processar. Tente uma imagem ou resolução menor.,Obraz za duży do przetworzenia. Spróbuj mniejszy obraz lub rozdzielczość.,Görüntü işlemek için çok büyük. Daha küçük bir görüntü veya çözünürlük deneyin.,Irudia prozesatzeko handiegia da. Probatu irudi edo bereizmen txikiago batekin.,Imatge tròp granda per processar. Ensaja amb una imatge o resolucion menor.,รูปใหญ่เกินกว่าจะประมวลผล ลองใช้รูปที่เล็กลงหรือความละเอียดต่ำลง,이미지를 처리할 수 없습니다. 작은 이미지나 낮은 해상도로 시도하세요.,Obrázek je příliš velký na zpracování. Zkuste menší obrázek nebo rozlišení.\\r\\nerrorProcessingImage,Error processing image,Error al procesar la imagen,Error al procesar la imagen,Error en processar la imatge,处理图片时出错,處理圖片時發生錯誤,画像の処理中にエラーが発生しました,Errore durante l'elaborazione dell'immagine,Fehler beim Verarbeiten des Bildes,Erreur lors du traitement de l'image,Erro ao processar imagem,Ошибка при обработке изображения,Erro ao processar imagem,Błąd przetwarzania obrazu,Görüntü işlenirken hata oluştu,Irudia prozesatzean errorea,Error en processar l’imatge,เกิดข้อผิดพลาดขณะประมวลผลรูป,이미지 처리 중 오류 발생,Chyba při zpracování obrázku\\r\\n\"","export default \"key,en,es-ES,es-LA,ca,zh-CN,zh-TW,ja,it,de,fr,pt-PT,ru,pt-BR,pl,tr,eu,oc,th,ko,cs\\r\\nexportImage,Export image [E],Exportar imagen [E],Exportar imagen [E],Exportar imatge [E],导出图像 [E],匯出圖像 [E],画像をエクスポート [E],Esporta immagine [E],Bild exportieren [E],Exporter l’image [E],Exportar Imagem [E],Экспорт изображения [E],Exportar Imagem [E],Eksportuj obraz [E],Görüntüyü dışa aktar [E],Irudia esportatu [E],Exportar la imatge [E],ส่งออกรูปภาพ [E],이미지 내보내기 [E],Exportovat obrázek [E]\\r\\nexportImageDesc,Download or share your processed image,Descarga o comparte tu imagen procesada,Descarga o comparte tu imagen procesada,Descarrega o comparteix la teva imatge processada,下载或分享已处理的图像,下載或分享已處理的圖像,処理済みの画像をダウンロードまたは共有,Scarica o condividi l’immagine elaborata,Laden oder teilen Sie Ihr verarbeitetes Bild,Téléchargez ou partagez votre image traitée,Transfira ou partilhe a sua imagem processada,Скачайте или поделитесь обработанным изображением,Baixe ou compartilhe sua imagem processada,Pobierz lub udostępnij przetworzony obraz,İşlenmiş görseli indirin veya paylaşın,Deskargatu edo partekatu prozesatutako irudia,Telecargar o partejar vòstra imatge tractada,ดาวน์โหลดหรือแชร์รูปภาพที่ได้รับการประมวลผลแล้ว,처리된 이미지를 다운로드하거나 공유하세요,Stáhněte nebo sdílejte zpracovaný obrázek\\r\\ndownloadPng,Download PNG,Descargar PNG,Descargar PNG,Descarregar PNG,下载 PNG,下載 PNG,PNG をダウンロード,Scarica PNG,PNG herunterladen,Télécharger PNG,Descarregar PNG,Скачать PNG,Baixar PNG,Pobierz PNG,PNG indir,PNG deskargatu,Telecarregar PNG,ดาวน์โหลด PNG,PNG 다운로드,Stáhnout PNG\\r\\ncopyToClipboard,Copy to clipboard,Copiar al portapapeles,Copiar al portapapeles,Copiar al porta-retalls,复制到剪贴板,複製到剪貼簿,クリップボードにコピー,Copia negli appunti,In die Zwischenablage kopieren,Copier dans le presse-papiers,Copiar para a área de transferência,Скопировать в буфер обмена,Copiar para a área de transferência,Kopiuj do schowka,Panoya kopyala,Kopiatu taulara,Copiar al premsapapièrs,คัดลอกไปยังคลิปบอร์ด,클립보드에 복사,Kopírovat do schránky\\r\\nimageCopiedToClipboard,Image copied to clipboard!,¡Imagen copiada al portapapeles!,¡Imagen copiada al portapapeles!,Imatge copiada al porta-retalls!,图片已复制到剪贴板！,圖片已複製到剪貼簿！,画像がクリップボードにコピーされました！,Immagine copiata negli appunti!,Bild in die Zwischenablage kopiert!,Image copiée dans le presse-papiers !,Imagem copiada para a área de transferência!,Изображение скопировано в буфер обмена!,Imagem copiada para a área de transferência!,Obraz skopiowany do schowka!,Görüntü panoya kopyalandı!,Irudia taulara kopiatu da!,Imatge copiada al premsapapièrs!,คัดลอกรูปภาพไปยังคลิปบอร์ดแล้ว!,이미지가 클립보드에 복사되었습니다!,Obrázek zkopírován do schránky!\\r\\nshareOnTwitter,Share on Twitter,Compartir en Twitter,Compartir en Twitter,Compartir a Twitter,分享到 Twitter,分享到 Twitter,Twitterで共有,Condividi su Twitter,Bei Twitter teilen,Partager sur Twitter,Partilhar no Twitter,Поделиться в Twitter,Compartilhar no Twitter,Udostępnij na Twitterze,Twitter'da paylaş,Partekatu Twitter-en,Partejar sus Twitter,แชร์บน Twitter,Twitter에 공유,Sdílet na Twitteru\\r\\nexportAtCurrentZoom,Export scaled at current zoom,Exportar escalado al zoom actual,Exportar escalado al zoom actual,Exportar escalat al zoom actual,按当前缩放比例导出,按當前縮放比例匯出,現在のズームスケールでエクスポート,Esporta scalato allo zoom corrente,Skaliert beim aktuellen Zoom exportieren,Exporter mis à l'échelle au zoom actuel,Exportar dimensionado ao zoom atual,Экспортировать с текущим масштабом,Exportar dimensionado ao zoom atual,Eksportuj przeskalowany przy bieżącym powiększeniu,Mevcut zoom ölçeğinde dışa aktar,Uneko zoom-ean eskalatuta esportatu,Exportar escalat al zoom actual,ส่งออกโดยปรับขนาดตามระดับซูมปัจจุบัน,현재 줌 스케일로 내보내기,Exportovat škálované při aktuálním zoomu\\r\\nexportWithGrids,Export with grids,Exportar con rejillas,Exportar con rejillas,Exportar amb reixetes,导出包含网格,匯出包含網格,グリッド付きでエクスポート,Esporta con griglie,Mit Gittern exportieren,Exporter avec grilles,Exportar com grelhas,Экспорт с сетками,Exportar com grades,Eksportuj z siatkami,Izgaralarla dışa aktar,Sareekin esportatu,Exportar amb grilhas,ส่งออกพร้อมกริด,그리드 포함 내보내기,Exportovat se mřížkami\\r\\nexportFormat,Export format,Formato de exportación,Formato de exportación,Format d'exportació,导出格式,匯出格式,エクスポート形式,Formato di esportazione,Exportformat,Format d'export,Formato de exportação,Формат экспорта,Formato de exportação,Format eksportu,Dışa aktarma formatı,Esportazio formatua,Format d'exportacion,รูปแบบการส่งออก,내보내기 형식,Formát exportu\\r\\nexportTypes,Export Types,Tipos de exportación,Tipos de exportación,Tipus d'exportació,导出类型,匯出類型,エクスポートタイプ,Tipi di esportazione,Exporttypen,Types d'export,Tipos de exportação,Типы экспорта,Tipos de exportação,Typy eksportu,Dışa Aktarma Türleri,Esportazio Motak,Tipes d'exportacion,ประเภทการส่งออก,내보내기 유형,Typy exportu\\r\\n\"","export default \"key,en,es-ES,es-LA,ca,zh-CN,zh-TW,ja,it,de,fr,pt-PT,ru,pt-BR,pl,tr,eu,oc,th,ko,cs\\r\\npreview,Preview,Vista previa,Vista previa,Vista prèvia,预览,預覽,プレビュー,Anteprima,Vorschau,Aperçu,Pré-visualização,Предпросмотр,Visualizar,Podgląd,Önizleme,Aurrebista,Vista prèvia,ดูตัวอย่าง,미리보기,Náhled\\r\\npaletteWithCount,{count} colors palette,Paleta de {count} colores,Paleta de {count} colores,Paleta de {count} colors,{count} 色调色板,{count} 色調色板,{count} 色パレット,Tavolozza di {count} colori,Palette mit {count} Farben,Palette de {count} couleurs,Paleta de {count} cores,Палитра из {count} цветов,Paleta de {count} cores,Paleta {count} kolorów,{count} renk paleti,{count} kolore paleta,Paleta de {count} colors,พาเลท {count} สี,{count} 색 팔레트,Paleta {count} barev\\r\\noriginal,Original,Original,Original,Original,原始,原始,オリジナル,Originale,Original,Original,Original,Оригинал,Original,Oryginał,Orijinal,Jatorrizkoa,Original,ต้นฉบับ,원본,Originál\\r\\noriginalLabel,Original:,Original:,Original:,Original:,原始：,原始：,オリジナル:,Originale:,Original:,Original:,Original:,Оригинал:,Original:,Oryginał:,Orijinal:,Jatorrizkoa:,Original:,ต้นฉบับ:,원본:,Originál:\\r\\nprocessedLabel,Processed:,Procesada:,Procesada:,Processada:,已处理：,已處理：,処理済み:,Procesada:,Verarbeitet:,Traitée:,Processado:,Обработано:,Processado:,Przetworzono:,İşlenmiş:,Prozesatua:,Processat:,ประมวลผลแล้ว:,처리됨:,Zpracováno:\\r\\nprocessed,Processed,Procesada,Procesada,Processada,已处理,已處理,処理済み,Procesada,Verifiziert,Traitée,Processado,Обработано,Processado,Przetworzony,İşlenmiş,Prozesatua,Processat,ประมวลผลแล้ว,처리됨,Zpracováno\\r\\nfitToWidth,Fit to width,Ajustar al ancho,Ajustar al ancho,Ajustar a l'amplada,适应宽度,調整寬度,幅に合わせる,Adatta alla larghezza,An Breite anpassen,Ajuster à la largeur,Ajustar à largura,Подогнать по ширине,Ajustar à largura,Dopasuj do szerokości,Genişliğe sığdır,Egoneraren zabalerara egokitu,Ajustar a l'amplada,ปรับให้พอดีกับความกว้าง,너비에 맞춤,Přizpůsobit šířce\\r\\nnoImageLoaded,No image loaded,No hay imagen cargada,No hay imagen cargada,No hi ha cap imatge carregada,未加载图片,尚未載入圖片,画像が読み込まれていません,Nessuna immagine caricata,Kein Bild geladen,Aucune image chargée,Nenhuma imagem carregada,Изображение не загружено,Nenhuma imagem carregada,Nie załadowano obrazu,Resim yüklenmedi,Ez dago irudirik kargatua,Cap d'imatge carregat,ไม่ได้โหลดภาพ,이미지가 로드되지 않았습니다,Obrázek nebyl načten\\r\\nzoom,Zoom,Zoom,Zoom,Zoom,缩放,縮放,ズーム,Zoom,Zoom,Zoom,Zoom,Масштаб,Zoom,Zoom,Powiększenie,Yakınlaştırma,Zoom,ซูม,확대/축소,Zvětšení\\r\\nstretchToFit,Stretch to fit,Estirar para ajustar,Estirar para ajustar,Estirar per ajustar,拉伸以适应,延伸以適應,引き伸ばして合わせる,Allunga per adattare,An Breite anpassen,Étirer pour adapter,Esticar para ajustar,Растянуть для подгонки,Esticar para ajustar,Rozciągnij, aby dopasować,Sığdırmak için ger,Neurrira luzatu,Estirar per ajustar,ยืดให้พอดี,늘려서 맞춤,Roztažení pro přizpůsobení\\r\\nintegerScaling,Integer scaling,Escala entera,Escala entera,Escalat enter,整数缩放,整數縮放,整数スケーリング,Scala intera,Ganzzahlige Skalierung,Mise à l'échelle entière,Escala inteira,Целочисленное масштабирование,Escala inteira,Skalowanie całkowite,Tam sayı ölçeklemesi,Eskala osoa,Escala entèra,สเกลเป็นจำนวนเต็ม,정수 배율,Celočíselné škálování\\r\\nzoomedDimensions,({width}×{height} zoomed),({width}×{height} ampliado),({width}×{height} ampliado),({width}×{height} ampliat),({width}×{height} 缩放),({width}×{height} 縮放),({width}×{height} ズーム),({width}×{height} ingrandito),({width}×{height} vergrößert),({width}×{height} zoomé),({width}×{height} ampliado),({width}×{height} увеличено),({width}×{height} ampliado),({width}×{height} powiększony),({width}×{height} büyütüldü),({width}×{height} handitu),({width}×{height} ampliat),({width}×{height} ถูกขยาย),({width}×{height} 확대),({width}×{height} zvětšeno)\\r\\nswitchPreview,Switch between original and processed image,Cambiar entre imagen original y procesada,Cambiar entre imagen original y procesada,Canviar entre imatge original i processada,在原始图像和处理图像之间切换,在原始圖像和處理圖像之間切換,元の画像と処理された画像を切り替える,Passa tra immagine originale e elaborata,Wechseln zwischen Original- und bearbeitetem Bild,Passer entre l'image originale et l'image traitée,Alternar entre imagem original e processada,Переключаться между исходным и обработанным изображением,Alternar entre imagem original e processada,Przełączaj między oryginalnym a przetworzonym obrazem,Orijinal ve işlenmiş görüntü arasında geçiş yap,Iturburu eta prozesatutako irudiaren artean aldatu,Passar entre imatge originala e tractada,สลับระหว่างภาพต้นฉบับและภาพที่ประมวลผลแล้ว,원본 이미지와 처리된 이미지 간 전환,Přepínat mezi původním a zpracovaným obrázkem\\r\\npng8IndexedFormat,PNG-8 Indexed - {count} colors palette,PNG-8 indexada - {count} colores,PNG-8 indexada - {count} colores,PNG-8 Indexada - {count} colors,PNG-8 索引 - {count} 色调色板,PNG-8 索引 - {count} 色調色板,PNG-8 インデックス - {count} 色パレット,PNG-8 Indicizzato - palette di {count} colori,PNG-8 Indiziert - {count} Farben,PNG-8 Indexé - palette de {count} couleurs,PNG-8 Indexado - paleta de {count} cores,PNG-8 Индексированное - {count} цветов,PNG-8 Indexado - paleta de {count} cores,PNG-8 Indeksowane - {count} kolorów,PNG-8 İндexlenmiş - {count} renkler,PNG-8 Indizeatua - {count} koloreak,PNG-8 Indexat - {count} colors,PNG-8 ดัชนี - {count} พาเลทสี,PNG-8 인덱스 - {count} 색 팔레트,PNG-8 indexovaný - {count} barev\\r\\npng24IndexedFormat,PNG-24 Indexed - {count} colors palette,PNG-24 indexada - {count} colores,PNG-24 indexada - {count} colores,PNG-24 Indexada - {count} colors,PNG-24 索引 - {count} 色调色板,PNG-24 索引 - {count} 色調色板,PNG-24 インデックス - {count} 色パレット,PNG-24 Indicizzato - palette di {count} colori,PNG-24 Indiziert - {count} Farben,PNG-24 Indexé - palette de {count} couleurs,PNG-24 Indexado - paleta de {count} cores,PNG-24 Индексированное - {count} цветов,PNG-24 Indexado - paleta de {count} cores,PNG-24 Indeksowane - {count} kolorów,PNG-24 İндexленmiş - {count} renkler,PNG-24 Indizeatua - {count} koloreak,PNG-24 Indexat - {count} colors,PNG-24 ดัชนี - {count} พาเลทสี,PNG-24 인덱스 - {count} 색 팔레트,PNG-24 indexovaný - {count} barev\\r\\npng24RgbFormat,PNG-24 RGB,PNG-24 RGB,PNG-24 RGB,PNG-24 RGB,PNG-24 RGB,PNG-24 RGB,PNG-24 RGB,PNG-24 RGB,PNG-24 RGB,PNG-24 RGB,PNG-24 RGB,PNG-24 RGB,PNG-24 RGB,PNG-24 RGB,PNG-24 RGB,PNG-24 RGB,PNG-24 RGB,PNG-24 RGB,PNG-24 RGB\\r\\n\"","export default \"key,en,es-ES,es-LA,ca,zh-CN,zh-TW,ja,it,de,fr,pt-PT,ru,pt-BR,pl,tr,eu,oc,th,ko,cs\\r\\nloadImage,Import image [I],Importar imagen [I],Importar imagen [I],Importar imatge [I],导入图像 [I],導入圖像 [I],画像をインポート [I],Importa immagine [I],Bild importieren [I],Importer une image [I],Importar imagem [I],Импорт изображения [I],Importar imagem [I],Importuj obraz [I],Resim içe aktar [I],Irudia inportatu [I],Importar imatge [I],นำเข้ารูปภาพ [I],이미지 가져오기 [I],Naimportovat obrázek [I]\\r\\nloadImageDesc,\\\"Load, drag and drop, or paste an image\\\",\\\"Carga, arrastra o pega aquí una imagen\\\",\\\"Carga, arrastra o pega aquí una imagen\\\",\\\"Carrega, arrossega i deixa anar o enganxa una imatge\\\",\\\"加载、拖放或粘贴图片\\\",\\\"載入、拖放或貼上圖片\\\",\\\"画像を読み込む、ドラッグ＆ドロップ、または貼り付け\\\",\\\"Carica, trascina e rilascia o incolla un'immagine\\\",\\\"Bild laden, per Drag & Drop ablegen oder einfügen\\\",\\\"Charger une image, la glisser-déposer ou la coller\\\",\\\"Carregar, arrastar e largar ou colar uma imagem\\\",\\\"Загрузите изображение, перетащите его или вставьте\\\",\\\"Carregar, arrastar e soltar ou colar uma imagem\\\",\\\"Wczytaj obraz, przeciągnij i upuść lub wklej\\\",\\\"Bir görüntü yükleyin, sürükle-bırak veya yapıştır\\\",\\\"Irudi bat kargatu, arrastatu eta askatu edo itsatsi\\\",\\\"Carregatz una imatge, arrastatz e daissatz anar o colatz\\\",\\\"โหลด ลากและวาง หรือวางรูปภาพจากคลิปบอร์ด\\\",\\\"이미지를 불러오거나 드래그 앤 드롭하거나 붙여넣기\\\",\\\"Načtěte obrázek, přetáhněte a pusťte nebo jej vložte\\\"\\r\\nloadImageToStart,Import an image to start editing,Importa una imagen para comenzar a editar,Importa una imagen para comenzar a editar,Importa una imatge per començar a editar,导入图片开始编辑,匯入圖片開始編輯,編集を始めるには画像をインポートしてください,Importa un'immagine per iniziare a modificare,\\\"Importiere ein Bild, um mit der Bearbeitung zu beginnen\\\",Importez une image pour commencer à éditer,Importar uma imagem para começar a editar,Импортируйте изображение чтобы начать редактирование,Importar uma imagem para começar a editar,Importuj obraz aby rozpocząć edycję,Düzenlemeye başlamak için bir resim içe aktarın,Irudia inportatu editatzen hasteko,Importar una imatge per començar a editar,นำเข้ารูปภาพเพื่อเริ่มแก้ไข,편집을 시작하려면 이미지를 가져오세요,Importujte obrázek pro úpravy\\r\\nuploadImage,Load from local drive,Cargar desde unidad local,Cargar desde unidad local,Carregar des de la unitat local,从本地驱动器加载,從本地磁碟載入,ローカルドライブから読み込む,Carica dal disco locale,Von lokalem Laufwerk laden,Charger depuis le disque local,Carregar do disco local,Загрузить с локального диска,Carregar do disco local,Załaduj z dysku lokalnego,Yerel sürücüden yükle,Kargatu unitate lokalatik,Cargar dempuèi l'unitat locala,โหลดจากไดรฟ์ท้องถิ่น,로컬 드라이브에서 로드,Načíst z místní jednotky\\r\\ndragDropText,\\\"Load, drag and drop or paste an image\\\",\\\"Cargar, arrastra, suelta o pega una imagen\\\",\\\"Cargar, arrastra, suelta o pega una imagen\\\",\\\"Carrega, arrossega, deixa anar o enganxa una imatge\\\",\\\"加载、拖放或粘贴一张图片\\\",\\\"載入、拖放或貼上圖片\\\",\\\"画像を読み込む、ドラッグ＆ドロップ、または貼り付け\\\",\\\"Carica, trascina e rilascia o incolla un'immagine\\\",\\\"Bild laden, per Drag-and-drop ablegen oder einfügen\\\",\\\"Charger, glisser-déposer ou coller une image\\\",\\\"Carregar, arrastar e largar ou colar uma imagem\\\",\\\"Загрузите, перетащите или вставьте изображение\\\",\\\"Carregar, arrastar e soltar ou colar uma imagem\\\",\\\"Wczytaj, przeciągnij i upuść lub wklej obraz\\\",\\\"Bir görsel yükleyin, sürükleyip bırakın veya yapıştırın\\\",\\\"Kargatu, arrastatu eta jaregin edo itsatsi irudia\\\",\\\"Carregatz, arrastatz, daissatz anar o colatz una imatge\\\",\\\"โหลด ลากและวาง หรือวางรูปภาพจากคลิปบอร์ด\\\",\\\"이미지 불러오기 — 드래그 앤 드롭하거나 붙여넣기\\\",\\\"Nahrajte, přetáhněte nebo vložte obrázek\\\"\\r\\nloadFromClipboard,Load from clipboard,Cargar desde portapapeles,Cargar desde portapapeles,Carregar des del porta-retalls,从剪贴板加载,從剪貼簿載入,クリップボードから読み込む,Carica dagli appunti,Aus der Zwischenablage laden,Charger depuis le presse-papiers,Carregar do clipboard,Загрузить из буфера обмена,Carregar do clipboard,Załaduj ze schowka,Yükle panodan,Kargatu arbeletik,Carregar des del porta-retalls,โหลดจากคลิปบอร์ด,클립보드에서 불러오기,Načíst ze schránky\\r\\npasteFromClipboard,Paste from clipboard,Pegar desde el portapapeles,Pegar desde el portapapeles,Enganxar des del porta-retalls,从剪贴板粘贴,從剪貼簿貼上,クリップボードから貼り付ける,Incollare dagli appunti,Aus der Zwischenablage einfügen,Coller depuis le presse-papiers,Colar da área de transferência,Вставить из буфера обмена,Colar da área de transferência,Wkleić ze schowka,Pano yapıştırmak,Arbelatik itsastea,Enganchar dempuèi lo pòrta-retalhs,วางจากคลิปบอร์ด,클립보드에서 붙여넣기,Vložit ze schránky\\r\\nfromUrl,Load from URL,Cargar desde URL,Cargar desde URL,Carregar des de l'URL,从 URL 加载,從 URL 載入,URL から読み込む,Carica da URL,Von URL laden,Charger depuis l'URL,Carregar do URL,Загрузить из URL,Carregar do URL,Załaduj z URL,URL'den yükle,URLtik kargatu,Cargar dempuèi l'URL,โหลดจาก URL,URL에서 로드,Načíst z URL\\r\\ncamera,Take a photo,Hacer una foto,Hacer una foto,Fer una foto,拍照,拍照,写真を撮る,Scattare una foto,Foto aufnehmen,Prendre une photo,Tirar uma foto,Сделать фото,Tirar uma foto,Zrobić zdjęcie,Fotoğraf çekmek,Argazki bat ateratzea,Far una foto,ถ่ายรูป,사진 찍기,Pořídit fotku\\r\\ncapture,Capture,Capturar,Capturar,Capturar,拍摄,擷取,キャプチャ,Cattura,Aufnehmen,Capturer,Capturar,Захватить,Capturar,Przechwyć,Yakala,Harrapatu,Capturar,จับภาพ,캡처,Pořídit snímek\\r\\nswitchCamera,Switch camera,Cambiar cámara,Cambiar cámara,Canviar càmera,切换相机,切換相機,カメラを切替,Cambia fotocamera,Kamera wechseln,Changer la caméra,Mudar câmara,Переключить камеру,Mudar câmara,Przełącz aparat,Kamerayı değiştir,Kamera aldatu,Canviar càmera,สลับกล้อง,카메라 전환,Přepnout kameru\\r\\nimageLoaded,Image loaded successfully!,¡Imagen cargada correctamente!,¡Imagen cargada correctamente!,Imatge carregada correctament!,图片加载成功！,圖片載入成功！,画像を読み込みました！,Immagine caricata con successo!,Bild erfolgreich geladen!,Image chargée avec succès !,Imagem carregada com sucesso!,Изображение загружено успешно!,Imagem carregada com sucesso!,Obraz załadowany pomyślnie!,Görüntü başarıyla yüklendi!,Irudia ondo kargatu da!,Imatge carregada correctament!,โหลดรูปภาพสำเร็จ!,이미지 로드 완료!,Obrázek byl úspěšně načten!\\r\\nimageLoadError,Failed to load image,Error al cargar la imagen,Error al cargar la imagen,Error en carregar la imatge,加载图片失败,載入圖片失敗,画像の読み込みに失敗しました,Errore nel caricamento dell'immagine,Fehler beim Laden des Bildes,Échec du chargement de l'image,Falha ao carregar imagem,Не удалось загрузить изображение,Falha ao carregar imagem,Błąd ładowania obrazu,Yükleme başarısız,Errorea irudia kargatzean,Error en carregar la imatge,โหลดรูปภาพไม่สำเร็จ,이미지 로드 실패,Nepodařilo se načíst obrázek\\r\\nimageDownloaded,Image downloaded!,¡Imagen descargada!,¡Imagen descargada!,Imatge descarregada!,图片已下载！,圖片已下載！,画像をダウンロードしました！,Immagine scaricata!,Bild heruntergeladen!,Image téléchargée !,Imagem baixada!,Изображение скачано!,Imagem baixada!,Obraz pobrany!,Görüntü indirildi!,Irudia deskargatua!,Imatge descarregada!,ดาวน์โหลดรูปภาพแล้ว!,이미지 다운로드 완료!,Obrázek stažen!\\r\\nimageTooLarge,Image too large! Maximum size is 4096x4096px,¡Imagen demasiado grande! El tamaño máximo es 4096×4096px,¡Imagen demasiado grande! El tamaño máximo es 4096×4096px,Imatge massa gran! La mida màxima és 4096×4096px,图片过大！最大尺寸为 4096×4096px,圖片過大！最大尺寸為 4096×4096px,画像が大きすぎます！最大サイズは 4096×4096px,Immagine troppo grande! La dimensione massima è 4096×4096px,Bild zu groß! Maximale Größe ist 4096×4096px,Image trop grande ! La taille maximale est 4096×4096px,Imagem muito grande! Tamanho máximo é 4096x4096px,Изображение слишком большое! Максимальный размер 4096x4096px,Imagem muito grande! Tamanho máximo é 4096x4096px,Obraz zbyt duży! Maksymalny rozmiar to 4096x4096px,Görüntü çok büyük! Maksimum boyut 4096x4096px,Irudia handiegia! Gehienezko tamaina 4096x4096px da,Imatge massa gran! La mida màxima és 4096×4096px,รูปภาพมีขนาดใหญ่เกินไป! ขนาดสูงสุดคือ 4096×4096px,이미지가 너무 큽니다! 최대 크기: 4096×4096px,Obrázek je příliš velký! Maximální velikost je 4096×4096 px\\r\\nchooseFile,Choose File,Elegir archivo,Elegir archivo,Escollir fitxer,选择文件,選擇檔案,ファイルを選択,Scegli file,Datei wählen,Choisir un fichier,Escolher arquivo,Выберите файл,Escolher arquivo,Wybierz plik,Dosya seç,Dosya aukeratu,Escollir fitxer,เลือกไฟล์,파일 선택,Vybrat soubor\\r\\nnoFileChosen,No file chosen,Ningún archivo seleccionado,Ningún archivo seleccionado,Cap fitxer seleccionat,未选择文件,尚未選擇檔案,ファイルが選択されていません,Nessun file selezionato,Keine Datei ausgewählt,Aucun fichier choisi,Nenhum arquivo escolhido,Файл не выбран,Nenhum arquivo escolhido,Brak wybranego pliku,Dosya seçilmedi,Fitxategirik ez aukeratua,Cap fitxer seleccionat,ยังไม่ได้เลือกไฟล์,선택된 파일 없음,Žádný soubor nebyl vybrán\\r\\noopsPageNotFound,Oops! Page not found,¡Vaya! Página no encontrada,¡Vaya! Página no encontrada,Ups! Pàgina no trobada,页面未找到,找不到頁面,おっと！ページが見つかりません,Ops! Pagina non trovata,Ups! Seite nicht gefunden,Oups ! Page non trouvée,Ops! Página não encontrada,Упс! Страница не найдена,Ops! Página não encontrada,Ups! Strona nie znaleziona,Ay! Sayfa bulunamadı,Ondo! Orria ez da aurkitu,Ups! Pàgina no trobada,โอ๊ะ! ไม่พบหน้า,앗! 페이지를 찾을 수 없습니다,Jejda! Stránka nebyla nalezena\\r\\ncameraError,Camera Error,Error de cámara,Error de cámara,Error de càmera,相机错误,相機錯誤,カメラエラー,Errore fotocamera,Kamera Fehler,Erreur de caméra,Erro de câmara,Ошибка камеры,Erro de câmara,Błąd aparatu,Kamera Hatası,Kamera errorea,Error de càmera,ข้อผิดพลาดกล้อง,카메라 오류,Chyba kamery\\r\\ncameraNotAvailable,Camera not available or access denied,Cámara no disponible o acceso denegado,Cámara no disponible o acceso denegado,Càmera no disponible o accés denegat,相机不可用或访问被拒绝,相機不可用或拒絕存取,カメラが利用できないかアクセスが拒否されました,Fotocamera non disponibile o accesso negato,Kamera nicht verfügbar oder Zugriff verweigert,Caméra non disponible ou accès refusé,Câmara não disponível ou acesso negado,Камера недоступна или доступ запрещен,Câmara não disponível ou acesso negado,Aparat niedostępny lub odmowa dostępu,Kamera kullanılamıyor veya erişim reddedildi,Kamera ez dago eskuragarri edo sarbidea ukatua,Càmera no disponible o accés denegat,ไม่พบกล้อง หรือปฏิเสธการเข้าถึง,카메라를 사용할 수 없거나 접근이 거부되었습니다,Kamera není dostupná nebo přístup byl odepřen\\r\\ncameraTimeout,Camera timeout - please try again,Tiempo de espera de la cámara — inténtalo de nuevo,Tiempo de espera de la cámara — inténtalo de nuevo,Temps d'espera de la càmera — torna-ho a provar,相机超时 — 请重试,相機逾時 — 請重試,カメラのタイムアウト — もう一度試してください,Timeout fotocamera — riprova,Kamera Timeout — bitte erneut versuchen,Timeout de la caméra — veuillez réessayer,Timeout da câmara - tente novamente,Тайм-аут камеры - попробуйте еще раз,Timeout da câmara - tente novamente,Przekroczono limit czasu aparatu - spróbuj ponownie,Kamera zaman aşımı - lütfen tekrar dene,Kameraren denbora-muga - saiatu berriro,Temps d'espera de la càmera — torna-ho a provar,การเชื่อมต่อกล้องหมดเวลา — โปรดลองอีกครั้ง,카메라 타임아웃 — 다시 시도하세요,Vypršel časový limit kamery — prosím zkuste to znovu\\r\\ncameraNotReadable,Could not start camera - please check permissions,No se pudo iniciar la cámara — revisa permisos,No se pudo iniciar la cámara — revisa permisos,No s'ha pogut iniciar la càmera — comprova permisos,无法启动相机 — 请检查权限,無法啟動相機 — 請檢查權限,カメラを開始できません — 権限を確認してください,Impossibile avviare la fotocamera — controlla i permessi,Kamera konnte nicht gestartet werden — überprüfe Berechtigungen,Impossible de démarrer la caméra — vérifiez les permissions,Não foi possível iniciar a câmara - verifique as permissões,Не удалось запустить камеру - проверьте разрешения,Não foi possível iniciar a câmara - verifique as permissões,Nie udało się uruchomić aparatu - sprawdź uprawnienia,Kamera başlatılamadı - lütfen izinleri kontrol edin,Ezin izan da kamera abiarazi - egiaztatu baimenak,No s'ha pogut iniciar la càmera — comprova permisos,ไม่สามารถเริ่มกล้อง — ตรวจสอบสิทธิ์,카메라를 시작할 수 없습니다 — 권한을 확인하세요,Nelze spustit kameru — zkontrolujte oprávnění\\r\\nnoImageFoundInClipboard,No image found in clipboard,No se encontró imagen en el portapapeles,No se encontró imagen en el portapapeles,No s'ha trobat cap imatge al porta-retalls,剪贴板中未找到图片,剪貼簿中未找到圖片,クリップボードに画像が見つかりませんでした,Nessuna immagine trovata negli appunti,Kein Bild in der Zwischenablage gefunden,Aucune image trouvée dans le presse-papiers,Nenhuma imagem encontrada na área de transferência,Изображение не найдено в буфере обмена,Nenhuma imagem encontrada na área de transferência,Brak obrazu w schowku,Panoda görüntü bulunamadı,Arbelean ez da irudirik aurkitu,No s'ha trobat cap imatge al porta-retalls,ไม่พบรูปภาพในคลิปบอร์ด,클립보드에서 이미지를 찾을 수 없습니다,Ve schránce nebyl nalezen žádný obrázek\\r\\nfailedToReadClipboard,Failed to read clipboard. Please make sure you have an image copied.,No se pudo leer el portapapeles. Asegúrate de tener una imagen copiada.,No se pudo leer el portapapeles. Asegúrate de tener una imagen copiada.,No s'ha pogut llegir el porta-retalls. Assegura't de tenir una imatge copiada.,无法读取剪贴板。请确保已复制图片。,無法讀取剪貼簿。請確保已複製圖片。,クリップボードの読み取りに失敗しました。画像がコピーされていることを確認してください。,Impossibile leggere gli appunti. Assicurati di avere un'immagine copiata.,\\\"Konnte die Zwischenablage nicht lesen. Stelle sicher, dass ein Bild kopiert wurde.\\\",Impossible de lire le presse-papiers. Assurez-vous qu'une image est copiée.,Falha ao ler a área de transferência. Certifique-se de ter uma imagem copiada.,Не удалось прочитать буфер обмена. Убедитесь, что изображение скопировано.,Falha ao ler a área de transferência. Certifique-se de ter uma imagem copiada.,Nie udało się odczytać schowka. Upewnij się, że skopiowano obraz.,Panoyu okuma başarısız. Lütfen bir görüntünün kopyalandığından emin olun.,Ezin izan da arbelea irakurri. Ziurtatu irudi bat kopiatu duzula.,No s'ha pogut llegir el porta-retalls. Assegura't de tenir una imatge copiada.,ไม่สามารถอ่านคลิปบอร์ดได้ โปรดตรวจสอบว่ามีรูปภาพถูกคัดลอกไว้,클립보드를 읽을 수 없습니다. 이미지가 복사되었는지 확인하세요.,Nepodařilo se přečíst schránku. Ujistěte se, že máte zkopírovaný obrázek.\\r\\npleaseDropImageFile,Please drop an image file,\\\"Por favor, suelta un archivo de imagen\\\",\\\"Por favor, suelta un archivo de imagen\\\",\\\"Si us plau, deixa un fitxer d'imatge\\\",请放下一个图片文件,請放下圖片檔案,画像ファイルをドロップしてください,\\\"Per favore, rilascia un file immagine\\\",Bitte lass eine Bilddatei fallen,Veuillez déposer un fichier image,\\\"Por favor, solte um arquivo de imagem\\\",\\\"Пожалуйста, перетащите файл изображения\\\",\\\"Por favor, solte um arquivo de imagem\\\",\\\"Proszę upuść plik obrazu\\\",Lütfen bir görüntü dosyası bırakın,\\\"Mesedez, askatu irudi fitxategi bat\\\",\\\"Si us plau, deixa un fitxer d'imatge\\\",โปรดปล่อยไฟล์รูปภาพ,이미지 파일을 드롭하세요,Prosím přetáhněte soubor s obrázkem sem\\r\\ncopyImageError,Failed to copy image to clipboard,Error al copiar la imagen al portapapeles,Error al copiar la imagen al portapapeles,Error en copiar la imatge al porta-retalls,复制图片到剪贴板失败,複製圖片到剪貼簿失敗,画像をクリップボードにコピーできませんでした,Errore nel copiare l'immagine negli appunti,Fehler beim Kopieren des Bildes in die Zwischenablage,Échec de la copie de l'image dans le presse-papiers,Falha ao copiar imagem para a área de transferência,Не удалось скопировать изображение в буфер обмена,Falha ao copiar imagem para a área de transferência,Błąd kopiowania obrazu do schowka,Kopyalama başarısız panoya,Errorea irudia arbelean kopiatzean,Error en copiar la imatge al porta-retalls,คัดลอกรูปภาพไปยังคลิปบอร์ดไม่สำเร็จ,이미지를 클립보드에 복사하지 못했습니다,Nepodařilo se zkopírovat obrázek do schránky\\r\\ndropboxComingSoon,Dropbox integration coming soon!,¡Integración con Dropbox próximamente!,¡Integración con Dropbox próximamente!,Integració amb Dropbox pròximament!,Dropbox 集成即将推出！,Dropbox 整合即將推出！,Dropbox 統合は近日対応予定！,Integrazione con Dropbox in arrivo!,Dropbox-Integration kommt bald!,Intégration Dropbox bientôt disponible !,Integração com Dropbox em breve!,Интеграция с Dropbox скоро!,Integração com Dropbox em breve!,Integracja z Dropbox wkrótce!,Dropbox entegrasyonu yakında!,Dropbox integrazioa laster!,Integració amb Dropbox pròximament!,การผสานรวม Dropbox เร็ว ๆ นี้!,Dropbox 통합 준비 중입니다!,Integrace Dropbox brzy k dispozici!\\r\\ngoogleDriveComingSoon,Google Drive integration coming soon!,¡Integración con Google Drive próximamente!,¡Integración con Google Drive próximamente!,Integració amb Google Drive pròximament!,Google Drive 集成即将推出！,Google Drive 整合即將推出！,Google Drive 統合は近日対応予定！,Integrazione con Google Drive in arrivo!,Google Drive-Integration kommt bald!,Intégration Google Drive bientôt disponible !,Integração com Google Drive em breve!,Интеграция с Google Drive скоро!,Integração com Google Drive em breve!,Integracja z Google Drive wkrótce!,Google Drive entegrasyonu yakında!,Google Drive integrazioa laster!,Integració amb Google Drive pròximament!,การผสานรวม Google Drive เร็ว ๆ นี้!,Google Drive 통합 준비 중입니다!,Integrace Google Drive brzy k dispozici!\\r\\nselectCamera,Select camera,Seleccionar cámara,Seleccionar cámara,Seleccionar càmera,选择相机,選擇相機,カメラを選択,Seleziona fotocamera,Kamera auswählen,Sélectionner caméra,Selecionar câmara,Выберите камеру,Selecionar câmara,Wybierz aparat,Kamera seç,Aukeratu kamera,Seleccionar càmera,เลือกกล้อง,카메라 선택,Vyberte kameru\\r\\nnoCamerasDetected,\\\"No cameras detected, please close and try again after connecting, activating and enabling a camera\\\",\\\"No se detectaron cámaras. Cierra la aplicación y vuelve a intentarlo después de conectar y activar la cámara\\\",\\\"No se detectaron cámaras. Cierra la aplicación y vuelve a intentarlo después de conectar y activar la cámara\\\",No s'han detectat càmeres; tanca i torna a provar després de connectar i activar una càmera,未检测到相机；连接并启用相机后重试,未偵測到相機；連接並啟用相機後重試,カメラが検出されませんでした; 接続して有効にしてから再試行してください,Nessuna fotocamera rilevata; chiudi e riprova dopo aver connesso e attivato una fotocamera,\\\"Keine Kameras erkannt; schließe und versuche es erneut, nachdem du eine Kamera angeschlossen und aktiviert hast\\\",Aucune caméra détectée ; reconnectez et activez une caméra puis réessayez,\\\"Nenhuma câmara detectada, feche e tente novamente após conectar, ativar e habilitar uma câmara\\\",\\\"Камеры не обнаружены, пожалуйста, закройте и попробуйте снова после подключения, активации и включения камеры\\\",\\\"Nenhuma câmara detectada, feche e tente novamente após conectar, ativar e habilitar uma câmara\\\",\\\"Nie wykryto aparatów, zamknij i spróbuj ponownie po podłączeniu, aktywacji i włączeniu aparatu\\\",\\\"Kamera algılanmadı, lütfen bağlayıp etkinleştirdikten sonra kapatın ve tekrar deneyin\\\",\\\"Ez da kamerarik detektatu, itxi eta saiatu berriro kamera konektatu, aktibatu eta gaitu ondoren\\\",No s'han detectat càmeres; tanca i torna a provar després de connectar i activar una càmera,ไม่พบกล้อง โปรดเชื่อมต่อ เปิดใช้งาน และลองอีกครั้ง,카메라가 감지되지 않았습니다. 카메라를 연결하고 활성화한 후 다시 시도하세요,Z žádných kamer nebylo zjištěno; připojte a povolte kameru a zkuste to znovu\\r\\ncamera1,Camera 1,Cámara 1,Cámara 1,Càmera 1,相机 1,相機 1,カメラ 1,Fotocamera 1,Kamera 1,Caméra 1,Câmara 1,Камера 1,Câmara 1,Aparat 1,Kamera 1,Kamera 1,Càmera 1,กล้อง 1,카메라 1,Kamera 1\\r\\ncamera2,Camera 2,Cámara 2,Cámara 2,Càmera 2,相机 2,相機 2,カメラ 2,Fotocamera 2,Kamera 2,Caméra 2,Câmara 2,Камера 2,Câmara 2,Aparat 2,Kamera 2,Kamera 2,Càmera 2,กล้อง 2,카메라 2,Kamera 2\\r\\ncamera3,Camera 3,Cámara 3,Cámara 3,Càmera 3,相机 3,相機 3,カメラ 3,Fotocamera 3,Kamera 3,Caméra 3,Câmara 3,Камера 3,Câmara 3,Aparat 3,Kamera 3,Kamera 3,Càmera 3,กล้อง 3,카메라 3,Kamera 3\"","export default \"key,en,es-ES,es-LA,ca,zh-CN,zh-TW,ja,it,de,fr,pt-PT,ru,pt-BR,pl,tr,eu,oc,th,ko,cs\\r\\npaletteColors,Palette colors,Colores de la paleta,Colores de la paleta,Colors de la paleta,调色板颜色,調色盤顏色,パレットの色,Colori della palette,Palettenfarben,Couleurs de la palette,Cores da paleta,Цвета палитры,Cores da paleta,Kolory palety,Palet renkleri,Paleta koloreak,Colors de la paleta,สีในพาเลท,팔레트 색상,Barvy palety\\r\\nextractColors,Extract colors,Extraer colores,Extraer colores,Extreure colors,提取颜色,提取顏色,色を抽出,Estrai colori,Farben extrahieren,Extraire les couleurs,Extrair cores,Извлечь цвета,Extrair cores,Wyodrębnij kolory,Renkleri çıkar,Koloreak atera,Extreure colors,ดึงสี,색상 추출,Extrahovat barvy\\r\\nclickToChangeColor,\\\"Click in a color to edit it or drag it to change its position within the palette\\\",\\\"Haz clic en un color para editarlo o arrástralo para cambiar su posición en la paleta\\\",\\\"Haz clic en un color para editarlo o arrástralo para cambiar su posición en la paleta\\\",\\\"Fes clic en un color per editar-lo o arrossega'l per canviar la seva posició a la paleta\\\",\\\"点击颜色进行编辑，或拖动以改变其在调色板中的位置\\\",\\\"點選顏色進行編輯，或拖曳改變其在調色盤中的位置\\\",\\\"色をクリックして編集するか、ドラッグしてパレット内の位置を変更してください\\\",\\\"Clicca un colore per modificarlo o trascinalo per cambiare la sua posizione nella palette\\\",\\\"Klicke auf eine Farbe, um sie zu bearbeiten, oder ziehe sie, um ihre Position in der Palette zu ändern\\\",\\\"Cliquez sur une couleur pour la modifier ou faites-la glisser pour changer sa position dans la palette\\\",\\\"Clique numa cor para editar ou arraste-a para alterar a sua posição na paleta\\\",\\\"Нажмите на цвет, чтобы изменить его, или перетащите его, чтобы изменить его позицию в палитре\\\",\\\"Clique numa cor para editar ou arraste-a para alterar a sua posição na paleta\\\",\\\"Kliknij kolor, aby go edytować, lub przeciągnij go, aby zmienić jego pozycję w palecie\\\",\\\"Bir renge tıklayarak düzenleyin veya palet içindeki konumunu değiştirmek için sürükleyin\\\",\\\"Klikatu kolore bat editatu edo arrastatu bere posizioa aldatzeko paletan\\\",\\\"Clicatz sus una color per l’editar o la tiratz per cambiar sa posicion dins la paleta\\\",\\\"คลิกสีเพื่อแก้ไข หรือลากเพื่อเปลี่ยนตำแหน่งในพาเลท\\\",\\\"색상을 클릭하여 편집하거나 드래그하여 팔레트 내 위치를 변경하세요\\\",\\\"Klikněte na barvu pro úpravu nebo ji přetáhněte pro změnu její pozice v paletě\\\"\\r\\npng8Indexed,PNG-8 Indexed,PNG-8 indexada,PNG-8 indexada,PNG-8 indexat,PNG-8 索引,PNG-8 索引,PNG-8 インデックス,PNG-8 indicizzato,PNG-8 indiziert,PNG-8 indexé,PNG-8 indexado,PNG-8 индексированный,PNG-8 indexado,PNG-8 indeksowany,PNG-8 indeksli,PNG-8 indexatua,PNG-8 indexat,PNG-8 ดัชนี,PNG-8 인덱스,PNG-8 indexované\"","export default \"key,en,es-ES,es-LA,ca,zh-CN,zh-TW,ja,it,de,fr,pt-PT,ru,pt-BR,pl,tr,eu,oc,th,ko,cs\\r\\nsettings,Settings,Ajustes,Ajustes,Configuració,设置,設定,設定,Impostazioni,Einstellungen,Paramètres,Definições,Настройки,Configurações,Ustawienia,Ayarlar,Ezarpenak,Configuracion,การตั้งค่า,설정,Nastavení\"","export default \"key,value\\r\\nappTitle,Deliaxe Paint\\r\\ncopyright,© 2025\\r\\ncompany,Anarkade\\r\\nlanguageNames.en,English\\r\\nlanguageNames.es-ES,Español (España)\\r\\nlanguageNames.es-LA,Español (Latinoamérica)\\r\\nlanguageNames.ca,Català\\r\\nlanguageNames.zh-CN,简体中文\\r\\nlanguageNames.zh-TW,繁體中文\\r\\nlanguageNames.ja,日本語\\r\\nlanguageNames.it,Italiano\\r\\nlanguageNames.de,Deutsch\\r\\nlanguageNames.fr,Français\\r\\nlanguageNames.pt-PT,Português (Portugal)\\r\\nlanguageNames.ru,Русский\\r\\nlanguageNames.pt-BR,Português (Brasil)\\r\\nlanguageNames.pl,Polski\\r\\nlanguageNames.tr,Türkçe\\r\\nlanguageNames.eu,Euskera\\r\\nlanguageNames.oc,Aranés\\r\\nlanguageNames.th,ไทย\\r\\nlanguageNames.ko,한국어\\r\\nlanguageNames.cs,Čeština\\r\\nmegaDrivePalH40,Mega Drive PAL H40\\r\\nmsxPlatform,MSX\\r\\npspPlatform,PSP\\r\\nmsxHiRes,MSX 2\\r\\ngameBoyAdvance,Game Boy Advance\\r\\namstradCpc,Amstrad CPC\\r\\nnesPalette,NES\\r\\ncommodore64,Commodore 64\\r\\nzxSpectrumPalette,ZX Spectrum\\r\\nnokia3510ires,Nokia 1100, Nokia 3510i\\r\\npico8res,Nokia 3100, Pico-8\\r\\nsonyEricssonRes,Sony Ericsson W200, Vitel TSM30\\r\\natari2600res,Atari 2600 (NTSC)\\r\\ngameBoyRes,Game Boy, Game Gear\\r\\nmegaDriveNtscH32,Master System, Mega Drive NTSC H32, NES PAL, SNES\\r\\nmegaDrivePalH32,Master System PAL, Mega Drive PAL H32, NES NTSC, Master System PAL\\r\\nneoGeoCd,Neo·Geo CD\\r\\nmegaDriveNtscH40,Mega Drive NTSC H40, Neo·Geo\\r\\namigaLowResPal,Commodore Amiga Low Res PAL\\r\\namigaHiResPal,Commodore Amiga Hi-Res PAL\\r\\nmsxZxSpectrum,MSX, Master System, ZX Spectrum\\r\\ncpsArcade,CPS1, CPS2, CPS3\\r\\nvgaAmiga,VGA, Commodore Amiga ECS\\r\\n\"","/**\r\n * Translation System Architecture\r\n *\r\n * This file implements a two-tier translation system:\r\n *\r\n * 1. Constants (texts_constant.csv):\r\n *    - Values that don't change across languages (appTitle, company, copyright, languageNames)\r\n *    - Stored in simple key,value format\r\n *    - Loaded once at startup\r\n *\r\n * 2. Translations (translations.csv):\r\n *    - Multi-language content that gets translated (loadImage, settings, etc.)\r\n *    - Stored in CSV format with columns for each language\r\n *    - Loaded per language as needed\r\n *\r\n * Architecture Benefits:\r\n * - Better performance: Constants loaded once, translations loaded per language\r\n * - Cleaner separation: Constants vs translatable content\r\n * - Easier maintenance: Different files for different types of content\r\n * - Backward compatibility: Existing translation system preserved\r\n */\r\n\r\nimport React from 'react'\r\nimport translationsAppCsv from '../locales/translationsApp.csv?raw'\r\nimport translationsChangeGridsCsv from '../locales/translationsChangeGrids.csv?raw'\r\nimport translationsChangeLanguageCsv from '../locales/translationsChangeLanguage.csv?raw'\r\nimport translationsChangePaletteCsv from '../locales/translationsChangePalette.csv?raw'\r\nimport translationsChangeResolutionCsv from '../locales/translationsChangeResolution.csv?raw'\r\nimport translationsExportImageCsv from '../locales/translationsExportImage.csv?raw'\r\nimport translationsImagePreviewCsv from '../locales/translationsImagePreview.csv?raw'\r\nimport translationsImportImageCsv from '../locales/translationsImportImage.csv?raw'\r\nimport translationsPaletteViewerCsv from '../locales/translationsPaletteViewer.csv?raw'\r\nimport translationsToolbarCsv from '../locales/translationsToolbar.csv?raw'\r\nimport constantsCsv from '../locales/texts_constant.csv?raw'\r\n\r\nexport type Language =\r\n  | 'en' | 'es-ES' | 'es-LA' | 'ca' | 'zh-CN' | 'zh-TW'\r\n  | 'ja' | 'it' | 'de' | 'fr' | 'pt-PT' | 'ru' | 'pt-BR'\r\n  | 'pl' | 'tr' | 'eu' | 'oc' | 'th' | 'ko' | 'cs'\r\n\r\nexport interface Translation {\r\n  [k: string]: unknown\r\n}\r\n\r\n// Simple CSV parser used by the app. Keep stable and local to avoid depending\r\n// on runtime CSV libraries in the client bundle.\r\nfunction parseTranslationsCsv(raw: string): Record<string, Record<string, string>> {\r\n  const rows: string[][] = []\r\n  let cur: string[] = ['']\r\n  let inQuotes = false\r\n  let i = 0\r\n  const pushChar = (ch: string) => {\r\n    cur[cur.length - 1] += ch\r\n  }\r\n\r\n  while (i < raw.length) {\r\n    const ch = raw[i]\r\n    if (ch === '\"') {\r\n      if (inQuotes && raw[i + 1] === '\"') {\r\n        pushChar('\"')\r\n        i += 2\r\n        continue\r\n      }\r\n      inQuotes = !inQuotes\r\n      i += 1\r\n      continue\r\n    }\r\n\r\n    if (!inQuotes && ch === ',') {\r\n      cur.push('')\r\n      i += 1\r\n      continue\r\n    }\r\n\r\n    if (!inQuotes && (ch === '\\n' || ch === '\\r')) {\r\n      if (ch === '\\r' && raw[i + 1] === '\\n') i += 1\r\n      rows.push(cur.map(c => c.trim()))\r\n      cur = ['']\r\n      i += 1\r\n      continue\r\n    }\r\n\r\n    pushChar(ch)\r\n    i += 1\r\n  }\r\n\r\n  if (cur.length > 1 || (cur.length === 1 && cur[0].trim() !== '')) rows.push(cur.map(c => c.trim()))\r\n\r\n  const header = rows.shift() || []\r\n  const result: Record<string, Record<string, string>> = {}\r\n  for (const r of rows) {\r\n    const key = r[0]\r\n    if (!key) continue\r\n    result[key] = {}\r\n    for (let ci = 1; ci < header.length; ci++) {\r\n      const colName = header[ci]\r\n      result[key][colName] = r[ci] ?? ''\r\n    }\r\n  }\r\n  return result\r\n}\r\n\r\n// Simple parser for constants CSV (key,value format)\r\nfunction parseConstantsCsv(raw: string): Record<string, string> {\r\n  const result: Record<string, string> = {}\r\n  const rows = raw.trim().split('\\n')\r\n  \r\n  // Skip header row\r\n  for (let i = 1; i < rows.length; i++) {\r\n    const row = rows[i].trim()\r\n    if (!row) continue\r\n    \r\n    const commaIndex = row.indexOf(',')\r\n    if (commaIndex === -1) continue\r\n    \r\n    const key = row.substring(0, commaIndex).trim()\r\n    const value = row.substring(commaIndex + 1).trim()\r\n    \r\n    if (key) {\r\n      result[key] = value\r\n    }\r\n  }\r\n  \r\n  return result\r\n}\r\n\r\n// Parse and merge multiple per-area translations CSV files.\r\nfunction mergeParsedCsvObjects(list: Array<Record<string, Record<string, string>>>): Record<string, Record<string, string>> {\r\n  const result: Record<string, Record<string, string>> = {}\r\n  for (const obj of list) {\r\n    for (const key of Object.keys(obj)) {\r\n      if (!result[key]) result[key] = {}\r\n      const cols = obj[key]\r\n      for (const colName of Object.keys(cols)) {\r\n        // later files override earlier ones for the same key/column\r\n        result[key][colName] = cols[colName]\r\n      }\r\n    }\r\n  }\r\n  return result\r\n}\r\n\r\nconst csvData = mergeParsedCsvObjects([\r\n  parseTranslationsCsv(translationsAppCsv),\r\n  parseTranslationsCsv(translationsChangeGridsCsv),\r\n  parseTranslationsCsv(translationsChangeLanguageCsv),\r\n  parseTranslationsCsv(translationsChangePaletteCsv),\r\n  parseTranslationsCsv(translationsChangeResolutionCsv),\r\n  parseTranslationsCsv(translationsExportImageCsv),\r\n  parseTranslationsCsv(translationsImagePreviewCsv),\r\n  parseTranslationsCsv(translationsImportImageCsv),\r\n  parseTranslationsCsv(translationsPaletteViewerCsv),\r\n  parseTranslationsCsv(translationsToolbarCsv),\r\n])\r\nconst constantsData = parseConstantsCsv(constantsCsv)\r\n\r\n// Build translation object for a specific language from CSV data\r\n// Extracts translations for a given language from the multi-language CSV structure\r\nfunction buildTranslationForLanguage(language: Language): Record<string, string> {\r\n  const translation: Record<string, string> = {}\r\n  \r\n  // Extract translations for the specified language from csvData\r\n  Object.keys(csvData).forEach(key => {\r\n    if (csvData[key] && csvData[key][language]) {\r\n      translation[key] = csvData[key][language]\r\n    }\r\n  })\r\n  \r\n  return translation\r\n}\r\n\r\n// Build baseTranslation combining constants + English translations\r\nconst buildBaseTranslation = (): Record<string, unknown> => {\r\n  const base: Record<string, unknown> = {}\r\n  \r\n  // Load all constants from constantsData\r\n  Object.keys(constantsData).forEach(key => {\r\n    if (!key.startsWith('languageNames.')) {\r\n      base[key] = constantsData[key]\r\n    }\r\n  })\r\n  \r\n  // Load all English translations from CSV\r\n  Object.keys(csvData).forEach(key => {\r\n    if (csvData[key] && csvData[key]['en']) {\r\n      base[key] = csvData[key]['en']\r\n    }\r\n  })\r\n  \r\n  // Build languageNames object from constants\r\n  const languageNames: Record<string, string> = {}\r\n  Object.keys(constantsData).forEach(key => {\r\n    if (key.startsWith('languageNames.')) {\r\n      const langCode = key.substring('languageNames.'.length)\r\n      languageNames[langCode] = constantsData[key]\r\n    }\r\n  })\r\n  base.languageNames = languageNames\r\n  \r\n  // Fallbacks for essential keys if not found\r\n  if (!base.loadImage) base.loadImage = 'Import Image [I]'\r\n  if (!base.appTitle) base.appTitle = 'Vintage Palette Studio'\r\n  \r\n  return base\r\n}\r\n\r\n// Base translation object containing constants + English translations\r\n// This serves as the foundation for all language translations\r\nexport const baseTranslation: Record<string, unknown> = buildBaseTranslation()\r\n\r\n// Complete translations map for all supported languages\r\n// Each language inherits from baseTranslation and adds its specific translations\r\nexport const translations: Record<Language, Partial<Record<string, unknown>>> = {\r\n  en: baseTranslation,\r\n  'es-ES': { ...baseTranslation, ...buildTranslationForLanguage('es-ES') },\r\n  'es-LA': { ...baseTranslation, ...buildTranslationForLanguage('es-LA') },\r\n  ca: { ...baseTranslation, ...buildTranslationForLanguage('ca') },\r\n  'zh-CN': { ...baseTranslation, ...buildTranslationForLanguage('zh-CN') },\r\n  'zh-TW': { ...baseTranslation, ...buildTranslationForLanguage('zh-TW') },\r\n  ja: { ...baseTranslation, ...buildTranslationForLanguage('ja') },\r\n  it: { ...baseTranslation, ...buildTranslationForLanguage('it') },\r\n  de: { ...baseTranslation, ...buildTranslationForLanguage('de') },\r\n  fr: { ...baseTranslation, ...buildTranslationForLanguage('fr') },\r\n  'pt-PT': { ...baseTranslation, ...buildTranslationForLanguage('pt-PT') },\r\n  ru: { ...baseTranslation, ...buildTranslationForLanguage('ru') },\r\n  'pt-BR': { ...baseTranslation, ...buildTranslationForLanguage('pt-BR') },\r\n  pl: { ...baseTranslation, ...buildTranslationForLanguage('pl') },\r\n  tr: { ...baseTranslation, ...buildTranslationForLanguage('tr') },\r\n  eu: { ...baseTranslation, ...buildTranslationForLanguage('eu') },\r\n  oc: { ...baseTranslation, ...buildTranslationForLanguage('oc') },\r\n  th: { ...baseTranslation, ...buildTranslationForLanguage('th') },\r\n  ko: { ...baseTranslation, ...buildTranslationForLanguage('ko') },\r\n  cs: { ...baseTranslation, ...buildTranslationForLanguage('cs') },\r\n}\r\n\r\nexport type TranslationContextType = {\r\n  language: Language\r\n  currentLanguage: Language\r\n  t: (key: string) => string\r\n  changeLanguage: (lang: Language) => void\r\n  availableLanguages: Language[]\r\n  languages: Language[]\r\n  getLanguageName: (lang: Language) => string\r\n}\r\n\r\nexport const TranslationContext = React.createContext<TranslationContextType | undefined>(undefined)\r\n\r\nexport const useTranslation = (): TranslationContextType => {\r\n  const context = React.useContext(TranslationContext)\r\n  if (!context) throw new Error('useTranslation must be used within a TranslationProvider')\r\n  return context\r\n}\r\n","import { useCallback, useRef, useState, useEffect } from 'react';\r\nimport { Upload, Camera, Link, Eye, X, Clipboard, RotateCcw, HardDriveUpload, ClipboardPaste } from 'lucide-react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Card } from '@/components/ui/card';\r\nimport { useTranslation } from '@/hooks/useTranslation';\r\n\r\n// Performance constants for camera handling\r\nconst CAMERA_SWITCH_DELAY = 100; // Delay between camera switches to prevent conflicts\r\n\r\n// Small helper to extract common error fields from unknown errors\r\nconst getErrorInfo = (error: unknown) => {\r\n  if (typeof error === 'object' && error !== null) {\r\n    const e = error as { name?: string; message?: string };\r\n    return { name: e.name ?? '', message: e.message ?? '' };\r\n  }\r\n  return { name: '', message: String(error) };\r\n};\r\n\r\ninterface ImageUploadProps {\r\n  onImageLoad: (file: File | string) => void;\r\n  onCameraPreviewRequest?: () => void;\r\n  hideSection?: boolean;\r\n  onLoadFromClipboard?: () => void;\r\n}\r\n\r\nexport const ImageUpload = ({ onImageLoad, onCameraPreviewRequest, hideSection, onLoadFromClipboard }: ImageUploadProps) => {\r\n  const { t } = useTranslation();\r\n  const videoRef = useRef<HTMLVideoElement>(null);\r\n  const streamRef = useRef<MediaStream | null>(null);\r\n  const [showCameraPreview, setShowCameraPreview] = useState(false);\r\n  const [availableCameras, setAvailableCameras] = useState<MediaDeviceInfo[]>([]);\r\n  const [currentCameraIndex, setCurrentCameraIndex] = useState(0);\r\n  const [cameraError, setCameraError] = useState<string>('');\r\n  const [isDragOver, setIsDragOver] = useState(false);\r\n  const [showCameraSelector, setShowCameraSelector] = useState(false);\r\n\r\n  const handleFileUpload = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = event.target.files?.[0];\r\n    if (file) {\r\n      onImageLoad(file);\r\n    }\r\n  }, [onImageLoad]);\r\n\r\n  const handleUrlUpload = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const url = event.target.value.trim();\r\n    if (url) {\r\n      onImageLoad(url);\r\n    }\r\n  }, [onImageLoad]);\r\n\r\n  // Clipboard loading is now delegated via prop\r\n\r\n  const getAvailableCameras = useCallback(async () => {\r\n    try {\r\n      const devices = await navigator.mediaDevices.enumerateDevices();\r\n      const cameras = devices.filter(device => device.kind === 'videoinput');\r\n      setAvailableCameras(cameras);\r\n    } catch (error) {\r\n      console.error('Failed to get cameras:', error);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getAvailableCameras();\r\n  }, [getAvailableCameras]);\r\n\r\n  const startCameraPreview = useCallback(async () => {\r\n    setCameraError(''); // Clear any previous errors\r\n    try {\r\n      const constraints: MediaStreamConstraints = {\r\n        video: availableCameras.length > 0 ? {\r\n          deviceId: availableCameras[currentCameraIndex]?.deviceId\r\n        } : true\r\n      };\r\n      const stream = await navigator.mediaDevices.getUserMedia(constraints);\r\n      streamRef.current = stream;\r\n      \r\n      if (videoRef.current) {\r\n        videoRef.current.srcObject = stream;\r\n        videoRef.current.play();\r\n        setShowCameraPreview(true);\r\n      }\r\n    } catch (error: unknown) {\r\n      console.error('Camera access denied:', error);\r\n      const { name, message } = getErrorInfo(error);\r\n      let errorMessage = t('cameraError');\r\n      \r\n      if (name === 'NotAllowedError' || name === 'PermissionDeniedError') {\r\n        errorMessage = t('cameraNotAvailable');\r\n      } else if (name === 'AbortError' || message.includes('Timeout')) {\r\n        errorMessage = t('cameraTimeout');\r\n      } else if (name === 'NotReadableError' || message.includes('Could not start')) {\r\n        errorMessage = t('cameraNotReadable');\r\n      }\r\n      \r\n      setCameraError(errorMessage);\r\n      setShowCameraPreview(true); // Still show the preview area to display the error\r\n    }\r\n  }, [availableCameras, currentCameraIndex, t]);\r\n\r\n  const stopCameraPreview = useCallback(() => {\r\n    if (streamRef.current) {\r\n      streamRef.current.getTracks().forEach(track => track.stop());\r\n      streamRef.current = null;\r\n    }\r\n    setShowCameraPreview(false);\r\n    setCameraError(''); // Clear error when closing\r\n  }, []);\r\n\r\n  // Optimized camera switching with proper stream management\r\n  const switchCamera = useCallback(async () => {\r\n    if (availableCameras.length <= 1) return;\r\n    \r\n    const nextIndex = (currentCameraIndex + 1) % availableCameras.length;\r\n    setCurrentCameraIndex(nextIndex);\r\n    setCameraError(''); // Clear previous errors\r\n    \r\n    if (showCameraPreview && streamRef.current) {\r\n      // Clean shutdown of current stream\r\n      streamRef.current.getTracks().forEach(track => track.stop());\r\n      streamRef.current = null;\r\n      \r\n      // Brief delay to ensure clean camera release\r\n      await new Promise(resolve => setTimeout(resolve, CAMERA_SWITCH_DELAY));\r\n      \r\n      // Initialize new camera stream\r\n      try {\r\n        const constraints: MediaStreamConstraints = {\r\n          video: {\r\n            deviceId: availableCameras[nextIndex]?.deviceId\r\n          }\r\n        };\r\n        const stream = await navigator.mediaDevices.getUserMedia(constraints);\r\n        streamRef.current = stream;\r\n        \r\n        if (videoRef.current) {\r\n          videoRef.current.srcObject = stream;\r\n          videoRef.current.play();\r\n        }\r\n      } catch (error: unknown) {\r\n        console.error('Camera switch error:', error);\r\n        \r\n        // Provide specific error messages for better UX\r\n        const { name, message } = getErrorInfo(error);\r\n        let errorMessage = t('cameraError');\r\n        \r\n        if (name === 'NotAllowedError' || name === 'PermissionDeniedError') {\r\n          errorMessage = t('cameraNotAvailable');\r\n        } else if (name === 'AbortError' || message.includes('Timeout')) {\r\n          errorMessage = t('cameraTimeout');\r\n        } else if (name === 'NotReadableError' || message.includes('Could not start')) {\r\n          errorMessage = t('cameraNotReadable');\r\n        }\r\n        \r\n        setCameraError(errorMessage);\r\n      }\r\n    }\r\n  }, [availableCameras, currentCameraIndex, showCameraPreview, t]);\r\n\r\n  // Optimized camera capture with proper memory management\r\n  const handleCameraCapture = useCallback(async () => {\r\n    if (!videoRef.current || !streamRef.current) {\r\n      // Quick capture mode: Start camera and capture immediately\r\n      try {\r\n        const stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n        const video = document.createElement('video');\r\n        video.srcObject = stream;\r\n        video.play();\r\n        \r\n        video.addEventListener('loadedmetadata', () => {\r\n          const canvas = document.createElement('canvas');\r\n          canvas.width = video.videoWidth;\r\n          canvas.height = video.videoHeight;\r\n          const ctx = canvas.getContext('2d');\r\n          ctx?.drawImage(video, 0, 0);\r\n          \r\n          // Generate high-quality PNG with proper compression\r\n          canvas.toBlob((blob) => {\r\n            if (blob) {\r\n              const file = new File([blob], 'camera-capture.png', { type: 'image/png' });\r\n              // Add delay for camera captures to ensure proper height calculation\r\n              setTimeout(() => {\r\n                onImageLoad(file);\r\n              }, 50);\r\n            }\r\n          }, 'image/png', 0.95); // High quality PNG\r\n          \r\n          // Clean up stream immediately\r\n          stream.getTracks().forEach(track => track.stop());\r\n        });\r\n      } catch (error) {\r\n        console.error('Camera access denied:', error);\r\n      }\r\n      return;\r\n    }\r\n\r\n    // Capture from active preview with full resolution\r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = videoRef.current.videoWidth;\r\n    canvas.height = videoRef.current.videoHeight;\r\n    const ctx = canvas.getContext('2d');\r\n    ctx?.drawImage(videoRef.current, 0, 0);\r\n    \r\n    // Generate high-quality capture\r\n    canvas.toBlob((blob) => {\r\n      if (blob) {\r\n        const file = new File([blob], 'camera-capture.png', { type: 'image/png' });\r\n        // Add delay for camera captures to ensure proper height calculation\r\n        setTimeout(() => {\r\n          onImageLoad(file);\r\n          stopCameraPreview();\r\n        }, 50);\r\n      }\r\n    }, 'image/png', 0.95); // High quality PNG\r\n  }, [onImageLoad, stopCameraPreview]);\r\n\r\n  const getCameraDisplayName = useCallback((camera: MediaDeviceInfo, index: number) => {\r\n    if (camera.label) {\r\n      return camera.label;\r\n    }\r\n    // Fallback names for mobile/unnamed cameras using translations\r\n    const cameraNames = [t('camera1'), t('camera2'), t('camera3')];\r\n    return cameraNames[index] || `${t('camera1').replace('1', String(index + 1))}`;\r\n  }, [t]);\r\n\r\n  const handleCameraPreviewRequest = useCallback(async () => {\r\n    // Get available cameras first\r\n    await getAvailableCameras();\r\n    setShowCameraSelector(true);\r\n  }, [getAvailableCameras]);\r\n\r\n  const handleCameraSelection = useCallback(async (cameraIndex: number) => {\r\n    setCurrentCameraIndex(cameraIndex);\r\n    setShowCameraSelector(false);\r\n    setCameraError(''); // Clear any previous errors\r\n    \r\n    try {\r\n      const constraints: MediaStreamConstraints = {\r\n        video: availableCameras.length > 0 ? {\r\n          deviceId: availableCameras[cameraIndex]?.deviceId\r\n        } : true\r\n      };\r\n      const stream = await navigator.mediaDevices.getUserMedia(constraints);\r\n      streamRef.current = stream;\r\n      \r\n      if (videoRef.current) {\r\n        videoRef.current.srcObject = stream;\r\n        videoRef.current.play();\r\n        setShowCameraPreview(true);\r\n      }\r\n    } catch (error: unknown) {\r\n      console.error('Camera access denied:', error);\r\n      const { name, message } = getErrorInfo(error);\r\n      let errorMessage = t('cameraError');\r\n      \r\n      if (name === 'NotAllowedError' || name === 'PermissionDeniedError') {\r\n        errorMessage = t('cameraNotAvailable');\r\n      } else if (name === 'AbortError' || message.includes('Timeout')) {\r\n        errorMessage = t('cameraTimeout');\r\n      } else if (name === 'NotReadableError' || message.includes('Could not start')) {\r\n        errorMessage = t('cameraNotReadable');\r\n      }\r\n      \r\n      setCameraError(errorMessage);\r\n      setShowCameraPreview(true); // Still show the preview area to display the error\r\n    }\r\n  }, [availableCameras, t]);\r\n\r\n  const closeCameraSelector = useCallback(() => {\r\n    setShowCameraSelector(false);\r\n  }, []);\r\n\r\n  // Drag and drop handlers\r\n  const handleDragEnter = useCallback((e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setIsDragOver(true);\r\n  }, []);\r\n\r\n  const handleDragLeave = useCallback((e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    // Only set drag over to false if we're leaving the drop zone entirely\r\n    if (!e.currentTarget.contains(e.relatedTarget as Node)) {\r\n      setIsDragOver(false);\r\n    }\r\n  }, []);\r\n\r\n  const handleDragOver = useCallback((e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n  }, []);\r\n\r\n  const handleDrop = useCallback((e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setIsDragOver(false);\r\n\r\n    const files = Array.from(e.dataTransfer.files);\r\n    if (files.length > 0) {\r\n      const file = files[0];\r\n      if (file.type.startsWith('image/')) {\r\n        onImageLoad(file);\r\n      } else {\r\n        alert(t('pleaseDropImageFile'));\r\n      }\r\n    }\r\n  }, [onImageLoad, t]);\r\n\r\n  if (hideSection) {\r\n    return null;\r\n  }\r\n\r\n  // Show camera selector dialog\r\n  if (showCameraSelector) {\r\n    return (\r\n  <Card className=\"absolute z-50 left-0 right-0 p-7 bg-card border-elegant-border rounded-xl\">\r\n        <div className=\"relative\">\r\n          {/* Close button */}\r\n          <Button\r\n            variant=\"ghost\"\r\n            size=\"sm\"\r\n            onClick={closeCameraSelector}\r\n            className=\"absolute top-0 right-0 h-8 w-8 p-0 hover:bg-destructive hover:text-destructive-foreground\"\r\n          >\r\n            <X className=\"h-4 w-4\" />\r\n          </Button>\r\n          \r\n          <div className=\"space-y-4\">\r\n            <div>\r\n              <h3 className=\"text-xl font-bold flex items-center\" style={{ color: '#7d1b2d' }}>\r\n                <Camera className=\"mr-2 h-6 w-6\" style={{ color: '#7d1b2d' }} />\r\n                {t('selectCamera')}\r\n              </h3>\r\n            </div>\r\n            \r\n            {availableCameras.length === 0 ? (\r\n              <div className=\"text-center py-8\">\r\n                <Camera className=\"h-12 w-12 mx-auto mb-4 text-muted-foreground\" />\r\n                <p className=\"text-sm text-muted-foreground max-w-sm mx-auto leading-relaxed\">\r\n                  {t('noCamerasDetected')}\r\n                </p>\r\n              </div>\r\n            ) : (\r\n              <div className=\"space-y-3\">\r\n                {availableCameras.map((camera, index) => (\r\n                  <Button\r\n                    key={camera.deviceId || index}\r\n                    onClick={() => handleCameraSelection(index)}\r\n                    variant=\"highlighted\"\r\n                    className=\"w-full justify-start text-left\"\r\n                  >\r\n                    <Camera className=\"mr-2 h-4 w-4\" />\r\n                    {getCameraDisplayName(camera, index)}\r\n                  </Button>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Card \r\n      className={`absolute z-50 left-0 right-0 p-7 bg-card border-elegant-border rounded-xl ${\r\n        isDragOver ? 'border-primary bg-primary/5' : ''\r\n      }`}\r\n      onDragEnter={handleDragEnter}\r\n      onDragLeave={handleDragLeave}\r\n      onDragOver={handleDragOver}\r\n      onDrop={handleDrop}\r\n    >\r\n      <div className=\"space-y-5\">\r\n        {/* Drag and drop overlay */}\r\n        {isDragOver && (\r\n          <div className=\"absolute inset-0 bg-primary/10 border-2 border-dashed border-primary rounded-lg flex items-center justify-center z-20\">\r\n            <div className=\"text-center\">\r\n              <Upload className=\"h-12 w-12 mx-auto mb-2 text-primary\" />\r\n              <p className=\"text-lg font-medium text-primary\">{t('dragDropText')}</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        <div>\r\n          <h3 className=\"text-xl font-bold flex items-center\" style={{ color: '#7d1b2d' }}>\r\n            <Upload className=\"mr-2 h-6 w-6\" style={{ color: '#7d1b2d' }} />\r\n            {t('loadImage')}\r\n          </h3>\r\n            <p className=\"text-sm text-muted-foreground pt-2 pb-2 text-left\">{t('loadImageDesc')}</p>\r\n        </div>\r\n        <div className=\"border-t border-elegant-border my-4\" />\r\n        {/* Compact grid layout for primary upload options */}\r\n        <div className=\"grid grid-cols-2 gap-3\">\r\n          <div className=\"space-y-2\">\r\n            <label className=\"block text-xs font-medium text-foreground\">\r\n              <Upload className=\"inline mr-2 h-3 w-3\" />\r\n              {t('uploadImage')}\r\n            </label>\r\n            <div className=\"relative\">\r\n              <input\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={handleFileUpload}\r\n                className=\"absolute inset-0 w-full h-full opacity-0 cursor-pointer z-10\"\r\n                title={t('noFileChosen')}\r\n              />\r\n              <Button variant=\"highlighted\" size=\"sm\" className=\"w-full text-xs whitespace-pre-wrap leading-tight\">\r\n                <HardDriveUpload className=\"mr-1 h-3 w-3\" />\r\n                {t('chooseFile')}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"space-y-2 border-l border-elegant-border pl-3\">\r\n            <label className=\"block text-xs font-medium text-foreground\">\r\n              <Clipboard className=\"inline mr-1 h-3 w-3\" />\r\n              {t('loadFromClipboard')}\r\n            </label>\r\n            <Button \r\n              onClick={onLoadFromClipboard}\r\n              variant=\"highlighted\"\r\n              size=\"sm\"\r\n              className=\"w-full text-xs whitespace-pre-wrap leading-tight\"\r\n            >\r\n              <ClipboardPaste className=\"mr-1 h-3 w-3\" />\r\n              {t('pasteFromClipboard')}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Bottom row: URL input (left) and Camera (right) placed side-by-side */}\r\n        <div className=\"grid grid-cols-2 gap-3 border-t border-elegant-border pt-4\">\r\n          <div className=\"space-y-2\">\r\n            <label className=\"block text-xs font-medium text-foreground\">\r\n              <Link className=\"inline mr-1 h-3 w-3\" />\r\n              {t('fromUrl')}\r\n            </label>\r\n            <Input\r\n              type=\"url\"\r\n              placeholder=\"https://...\"\r\n              onChange={handleUrlUpload}\r\n              className=\"bg-console-bg border-pixel-grid h-9 text-sm\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"space-y-2 border-l border-elegant-border pl-3\">\r\n            <label className=\"block text-xs font-medium text-foreground\">\r\n              <Camera className=\"inline mr-1 h-3 w-3\" />\r\n              {t('camera')}\r\n            </label>\r\n\r\n            {showCameraPreview && (\r\n              <div \r\n                className=\"relative bg-black rounded-md w-full min-h-[200px] flex items-center justify-center\"\r\n                style={{ maxHeight: 'calc(100vh - 120px)' }}\r\n              >\r\n                {!cameraError ? (\r\n                  <video\r\n                    ref={videoRef}\r\n                    className=\"absolute inset-0 w-full h-full object-contain\"\r\n                    autoPlay\r\n                    muted\r\n                    playsInline\r\n                  />\r\n                ) : (\r\n                  <div className=\"absolute inset-0 w-full h-full bg-black flex items-center justify-center\">\r\n                    <div className=\"text-center text-white p-4\">\r\n                      <Camera className=\"h-8 w-8 mx-auto mb-2 text-gray-400\" />\r\n                      <p className=\"text-xs\">{cameraError}</p>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {/* Camera controls positioned at top center */}\r\n                <div className=\"absolute top-4 left-1/2 transform -translate-x-1/2 flex gap-2 z-10 pt-safe\">\r\n                  {!cameraError && (\r\n                    <Button\r\n                      onClick={handleCameraCapture}\r\n                      variant=\"highlighted\"\r\n                      size=\"sm\"\r\n                      className=\"bg-white/90 text-black hover:bg-white border-2 border-white shadow-lg backdrop-blur-sm h-8 w-8 p-0\"\r\n                    >\r\n                      <Camera className=\"h-4 w-4\" />\r\n                    </Button>\r\n                  )}\r\n\r\n                  {availableCameras.length > 1 && (\r\n                    <Button\r\n                      onClick={switchCamera}\r\n                      variant=\"highlighted\"\r\n                      size=\"sm\"\r\n                      className=\"bg-white/90 text-black hover:bg-white border-2 border-white shadow-lg backdrop-blur-sm h-8 w-8 p-0\"\r\n                      title={getCameraDisplayName(availableCameras[currentCameraIndex], currentCameraIndex)}\r\n                    >\r\n                      <RotateCcw className=\"h-3 w-3\" />\r\n                    </Button>\r\n                  )}\r\n\r\n                  <Button\r\n                    onClick={stopCameraPreview}\r\n                    variant=\"highlighted\"\r\n                    size=\"sm\"\r\n                    className=\"bg-white/90 text-black hover:bg-white border-2 border-white shadow-lg backdrop-blur-sm h-8 w-8 p-0\"\r\n                  >\r\n                    <X className=\"h-3 w-3\" />\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {!showCameraPreview && (\r\n              <Button \r\n                onClick={onCameraPreviewRequest || handleCameraPreviewRequest}\r\n                variant=\"highlighted\"\r\n                size=\"sm\"\r\n                className=\"w-full text-xs whitespace-pre-wrap leading-tight\"\r\n              >\r\n                <Eye className=\"mr-1 h-3 w-3\" />\r\n                {t('preview')}\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  );\r\n};","import { useCallback } from 'react';\r\nimport { ImageUpload } from './ImageUpload';\r\nimport { Card } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { useTranslation } from '@/hooks/useTranslation';\r\nimport { Cloud, Upload, X } from 'lucide-react';\r\nimport { toast } from 'sonner';\r\n\r\ninterface LoadImageProps {\r\n  onImageLoad: (source: File | string) => void;\r\n  onCameraPreviewRequest?: () => void;\r\n  onClose?: () => void;\r\n  onLoadFromClipboard?: () => void;\r\n}\r\n\r\nexport const LoadImage = ({ onImageLoad, onCameraPreviewRequest, onClose, onLoadFromClipboard }: LoadImageProps) => {\r\n  const { t } = useTranslation();\r\n\r\n  const loadFromDropbox = useCallback(() => {\r\n    toast.info('Dropbox integration coming soon!');\r\n  }, []);\r\n\r\n  const loadFromGoogleDrive = useCallback(() => {\r\n    toast.info('Google Drive integration coming soon!');\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"relative\">\r\n      {onClose && (\r\n        <Button\r\n          variant=\"ghost\"\r\n          size=\"sm\"\r\n          onClick={onClose}\r\n          className=\"absolute top-2 right-2 z-10 h-8 w-8 p-0 hover:bg-destructive hover:text-destructive-foreground\"\r\n        >\r\n          <X className=\"h-4 w-4\" />\r\n        </Button>\r\n      )}\r\n      <ImageUpload \r\n        onImageLoad={onImageLoad}\r\n        onCameraPreviewRequest={onCameraPreviewRequest}\r\n        onLoadFromClipboard={onLoadFromClipboard}\r\n      />\r\n    </div>\r\n  );\r\n};","import { useEffect, useState, useCallback } from 'react';\r\nimport { Card } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { useTranslation } from '@/hooks/useTranslation';\r\nimport { Camera, X } from 'lucide-react';\r\n\r\n// Simple component for camera selection with minimal overhead\r\n\r\ninterface CameraSelectorProps {\r\n  onSelect: (deviceId: string) => void;\r\n  onClose: () => void;\r\n}\r\n\r\nexport const CameraSelector = ({ onSelect, onClose }: CameraSelectorProps) => {\r\n  const { t } = useTranslation();\r\n  const [availableCameras, setAvailableCameras] = useState<MediaDeviceInfo[]>([]);\r\n  const [resolutions, setResolutions] = useState<Record<string, string>>({});\r\n\r\n  // Efficiently enumerate available cameras with error handling\r\n  const getAvailableCameras = useCallback(async () => {\r\n    try {\r\n      const devices = await navigator.mediaDevices.enumerateDevices();\r\n      const cameras = devices.filter((d) => d.kind === 'videoinput');\r\n      setAvailableCameras(cameras);\r\n    } catch (e) {\r\n      // Graceful fallback for permission issues\r\n      setAvailableCameras([]);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getAvailableCameras();\r\n  }, [getAvailableCameras]);\r\n\r\n  // Probe each camera to obtain a resolution string like \"640x480\".\r\n  // We probe only once per device and store the result in `resolutions`.\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const probe = async (deviceId: string) => {\r\n      if (resolutions[deviceId]) return; // already probed\r\n      try {\r\n        const stream = await navigator.mediaDevices.getUserMedia({ video: { deviceId: { exact: deviceId } } });\r\n        try {\r\n          // Prefer track settings if available\r\n          const track = stream.getVideoTracks()[0];\r\n          const settings = track.getSettings?.();\r\n          let width = settings?.width;\r\n          let height = settings?.height;\r\n\r\n          // Fallback to video element metadata if settings not available\r\n          if (!width || !height) {\r\n            const video = document.createElement('video');\r\n            video.style.position = 'fixed';\r\n            video.style.left = '-9999px';\r\n            video.style.width = '1px';\r\n            video.style.height = '1px';\r\n            video.autoplay = true;\r\n            video.playsInline = true;\r\n            video.muted = true;\r\n            video.srcObject = stream;\r\n            document.body.appendChild(video);\r\n            await new Promise<void>((resolve) => {\r\n              const onLoaded = () => {\r\n                width = video.videoWidth || width;\r\n                height = video.videoHeight || height;\r\n                video.removeEventListener('loadedmetadata', onLoaded);\r\n                resolve();\r\n              };\r\n              video.addEventListener('loadedmetadata', onLoaded);\r\n              // safety timeout\r\n              setTimeout(() => resolve(), 500);\r\n            });\r\n            try { document.body.removeChild(video); } catch {}\r\n          }\r\n\r\n          if (mounted) {\r\n            if (width && height) {\r\n              setResolutions(prev => ({ ...prev, [deviceId]: `${Math.round(width)}x${Math.round(height)}` }));\r\n            } else {\r\n              setResolutions(prev => ({ ...prev, [deviceId]: '' }));\r\n            }\r\n          }\r\n        } finally {\r\n          // stop tracks\r\n          stream.getTracks().forEach(t => t.stop());\r\n        }\r\n      } catch (err) {\r\n        // Permission denied or other error; store empty to avoid retry storms\r\n        if (mounted) setResolutions(prev => ({ ...prev, [deviceId]: '' }));\r\n      }\r\n    };\r\n\r\n    for (const cam of availableCameras) {\r\n      if (!resolutions[cam.deviceId]) probe(cam.deviceId);\r\n    }\r\n\r\n    return () => { mounted = false; };\r\n  }, [availableCameras, resolutions]);\r\n\r\n  // Generate user-friendly camera names with fallback for unnamed devices\r\n  const getCameraDisplayName = (camera: MediaDeviceInfo, index: number) => {\r\n    if (camera.label) return camera.label;\r\n    const names = [t('camera1'), t('camera2'), t('camera3')];\r\n    return names[index] || `${t('camera1').replace('1', String(index + 1))}`;\r\n  };\r\n\r\n  return (\r\n  <Card className=\"absolute z-50 left-0 right-0 p-7 bg-card border-elegant-border rounded-xl\">\r\n      <Button\r\n        variant=\"ghost\"\r\n        size=\"sm\"\r\n        onClick={onClose}\r\n        className=\"absolute top-2 right-2 h-8 w-8 p-0 hover:bg-destructive hover:text-destructive-foreground\"\r\n        aria-label={t('close')}\r\n      >\r\n        <X className=\"h-4 w-4\" />\r\n      </Button>\r\n\r\n      <div className=\"space-y-4\">\r\n        <div>\r\n          <h3 className=\"text-xl font-bold flex items-center\" style={{ color: '#7d1b2d' }}>\r\n            <Camera className=\"mr-2 h-6 w-6\" style={{ color: '#7d1b2d' }} />\r\n            {t('selectCamera')}\r\n          </h3>\r\n        </div>\r\n  \r\n        {availableCameras.length === 0 ? (\r\n          <div className=\"text-center py-8\">\r\n            <Camera className=\"h-12 w-12 mx-auto mb-4 text-muted-foreground\" />\r\n            <p className=\"text-sm text-muted-foreground max-w-sm mx-auto leading-relaxed\">\r\n              {t('noCamerasDetected')}\r\n            </p>\r\n          </div>\r\n        ) : (\r\n          <div className=\"space-y-3\">\r\n            {availableCameras.map((camera, index) => (\r\n              <Button\r\n                key={camera.deviceId || index}\r\n                onClick={() => onSelect(camera.deviceId)}\r\n                variant=\"highlighted\"\r\n                className=\"w-full justify-start text-left\"\r\n              >\r\n                <Camera className=\"mr-2 h-4 w-4\" />\r\n                {getCameraDisplayName(camera, index)}{resolutions[camera.deviceId] ? ` (${resolutions[camera.deviceId]})` : ''}\r\n              </Button>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Card>\r\n  );\r\n};","import * as React from \"react\"\r\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\r\nimport { Circle } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst RadioGroup = React.forwardRef<\r\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\r\n>(({ className, ...props }, ref) => {\r\n  return (\r\n    <RadioGroupPrimitive.Root\r\n      className={cn(\"gap-2\", className)}\r\n      {...props}\r\n      ref={ref}\r\n    />\r\n  )\r\n})\r\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\r\n\r\nconst RadioGroupItem = React.forwardRef<\r\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\r\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\r\n>(({ className, ...props }, ref) => {\r\n  return (\r\n    <RadioGroupPrimitive.Item\r\n      ref={ref}\r\n      className={cn(\r\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\r\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\r\n      </RadioGroupPrimitive.Indicator>\r\n    </RadioGroupPrimitive.Item>\r\n  )\r\n})\r\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\r\n\r\nexport { RadioGroup, RadioGroupItem }\r\n","import * as React from \"react\"\r\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst labelVariants = cva(\r\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\r\n)\r\n\r\nconst Label = React.forwardRef<\r\n  React.ElementRef<typeof LabelPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\r\n    VariantProps<typeof labelVariants>\r\n>(({ className, ...props }, ref) => (\r\n  <LabelPrimitive.Root\r\n    ref={ref}\r\n    className={cn(labelVariants(), className)}\r\n    {...props}\r\n  />\r\n))\r\nLabel.displayName = LabelPrimitive.Root.displayName\r\n\r\nexport { Label }\r\n","import { Card } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Palette, RotateCcw, RotateCw, X } from 'lucide-react';\r\nimport { useTranslation } from '@/hooks/useTranslation';\r\nimport { useState, useEffect } from 'react';\r\nimport { extractColorsFromImageData } from '@/lib/colorQuantization';\r\n\r\nexport type PaletteType = string;\r\n\r\ninterface ColorPaletteSelectorProps {\r\n  selectedPalette: string;\r\n  onPaletteChange: (palette: string) => void;\r\n  onClose?: () => void;\r\n}\r\n\r\nexport const ColorPaletteSelector = ({\r\n  selectedPalette,\r\n  onPaletteChange,\r\n  onClose\r\n}: ColorPaletteSelectorProps) => {\r\n  const { t } = useTranslation();\r\n  const [originalPaletteColors, setOriginalPaletteColors] = useState<string[]>([]);\r\n\r\n  const paletteOptions = [\r\n    { value: 'original', labelKey: 'originalPalette', colorsKey: 'unlimitedColors' },\r\n    { value: 'amstradCpc', labelKey: 'amstradCpc', colorsKey: 'amstradCpcColors' },\r\n    { value: 'cga0', labelKey: 'cgaPalette0', colorsKey: 'cgaColors' },\r\n    { value: 'cga1', labelKey: 'cgaPalette1', colorsKey: 'cgaColors' },\r\n    { value: 'cga2', labelKey: 'cgaPalette2', colorsKey: 'cgaColors' },\r\n    { value: 'commodore64', labelKey: 'commodore64', colorsKey: 'commodore64Colors' },\r\n    { value: 'gameboy', labelKey: 'gameBoy', colorsKey: 'gameBoyColors' },\r\n    { value: 'gameboyBg', labelKey: 'gameBoyBg', colorsKey: 'gameBoyColors' },\r\n    { value: 'gameboyRealistic', labelKey: 'gameBoyRealistic', colorsKey: 'gameBoyColors' },\r\n    { value: 'megadrive', labelKey: 'megaDrive16', colorsKey: 'megaDrive16Colors' },\r\n    { value: 'nes', labelKey: 'nesPalette', colorsKey: 'nesColors' },\r\n    { value: 'zxSpectrum', labelKey: 'zxSpectrumPalette', colorsKey: 'zxSpectrumColors' },\r\n  ];\r\n\r\n  // Example: extract colors from image data (replace with actual image data source)\r\n  useEffect(() => {\r\n    // Dummy imageData for demonstration\r\n    // Replace with actual imageData from props/context\r\n    // const imageData = ...;\r\n    // if (imageData) {\r\n    //   const colors = extractColorsFromImageData(imageData);\r\n    //   setOriginalPaletteColors(colors);\r\n    // }\r\n  }, []);\r\n\r\n  return (\r\n  <Card className=\"absolute z-50 left-0 right-0 p-7 bg-card border-elegant-border rounded-xl\">\r\n      {onClose && (\r\n        <Button\r\n          variant=\"ghost\"\r\n          size=\"sm\"\r\n          onClick={onClose}\r\n          className=\"absolute top-2 right-2 h-8 w-8 p-0 hover:bg-destructive hover:text-destructive-foreground\"\r\n        >\r\n          <X className=\"h-4 w-4\" />\r\n        </Button>\r\n      )}\r\n      <div className=\"space-y-4\">\r\n        <div>\r\n          <h3 className=\"text-xl font-bold flex items-center\" style={{ color: '#7d1b2d' }}>\r\n            <Palette className=\"mr-2 h-6 w-6\" style={{ color: '#7d1b2d' }} />\r\n            {t('changePalette')}\r\n          </h3>\r\n          <p className=\"text-sm text-muted-foreground pt-2 pb-2 text-left\">{t('changePaletteDesc')}</p>\r\n        </div>\r\n        <div className=\"border-t border-elegant-border my-4\" />        \r\n        <RadioGroup value={selectedPalette} onValueChange={onPaletteChange} className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-x-4 gap-y-3 pt-5\">\r\n          {paletteOptions.map((option) => (\r\n            <div key={option.value} className=\"flex space-x-1 min-h-[2.5rem]\">\r\n              <RadioGroupItem value={option.value} id={`palette-${option.value}`} className=\"h-3 w-3 mt-1 flex-shrink-0\" />\r\n              <Label htmlFor={`palette-${option.value}`} className=\"flex flex-col cursor-pointer text-left\">\r\n                <span className=\"font-medium text-xs leading-tight break-words text-left\">{t(option.labelKey)}</span>\r\n                <span className=\"text-xs text-muted-foreground leading-tight break-words text-left\">{t(option.colorsKey)}</span>\r\n              </Label>\r\n            </div>\r\n          ))}\r\n        </RadioGroup>\r\n      </div>\r\n    </Card>\r\n  );\r\n};","import * as React from \"react\"\r\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Slider = React.forwardRef<\r\n  React.ElementRef<typeof SliderPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\r\n>(({ className, ...props }, ref) => (\r\n  <SliderPrimitive.Root\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex w-full touch-none select-none items-center\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\r\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\r\n    </SliderPrimitive.Track>\r\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\r\n  </SliderPrimitive.Root>\r\n))\r\nSlider.displayName = SliderPrimitive.Root.displayName\r\n\r\nexport { Slider }\r\n","import * as React from \"react\"\r\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\r\nimport { Check } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Checkbox = React.forwardRef<\r\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\r\n>(({ className, ...props }, ref) => (\r\n  <CheckboxPrimitive.Root\r\n    ref={ref}\r\n    className={cn(\r\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <CheckboxPrimitive.Indicator\r\n      className={cn(\"flex items-center justify-center text-current\")}\r\n    >\r\n      <Check className=\"h-4 w-4\" />\r\n    </CheckboxPrimitive.Indicator>\r\n  </CheckboxPrimitive.Root>\r\n))\r\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\r\n\r\nexport { Checkbox }\r\n","import { useState, useCallback, useEffect } from 'react';\r\nimport { Card } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { PaletteType } from './ColorPaletteSelector';\r\nimport { useTranslation } from '@/hooks/useTranslation';\r\nimport { Eye, Palette, GripVertical } from 'lucide-react';\r\n// pngAnalyzer functions are imported dynamically where needed to keep bundle size small\r\n\r\ninterface PaletteColor {\r\n  r: number;\r\n  g: number;\r\n  b: number;\r\n  transparent?: boolean;\r\n}\r\n\r\ninterface PaletteViewerProps {\r\n  selectedPalette: PaletteType;\r\n  imageData: ImageData | null;\r\n  onPaletteUpdate?: (colors: PaletteColor[]) => void;\r\n  originalImageSource?: File | string | null;\r\n  externalPalette?: PaletteColor[] | null;\r\n  onImageUpdate?: () => void;\r\n}\r\n\r\nconst getDefaultPalette = (paletteType: PaletteType): PaletteColor[] => {\r\n  switch (paletteType) {\r\n    case 'gameboy':\r\n      return [\r\n        { r: 15, g: 56, b: 15 },    // Darkest green\r\n        { r: 48, g: 98, b: 48 },    // Dark green  \r\n        { r: 139, g: 172, b: 15 },  // Light green\r\n        { r: 155, g: 188, b: 15 }   // Lightest green\r\n      ];\r\n    case 'megadrive':\r\n      return [\r\n        { r: 0, g: 0, b: 0 },       // Black\r\n        { r: 0, g: 0, b: 146 },     // Dark Blue\r\n        { r: 0, g: 146, b: 0 },     // Dark Green\r\n        { r: 0, g: 146, b: 146 },   // Dark Cyan\r\n        { r: 146, g: 0, b: 0 },     // Dark Red\r\n        { r: 146, g: 0, b: 146 },   // Dark Magenta\r\n        { r: 146, g: 73, b: 0 },    // Brown\r\n        { r: 182, g: 182, b: 182 }, // Light Gray\r\n        { r: 73, g: 73, b: 73 },    // Dark Gray\r\n        { r: 73, g: 73, b: 255 },   // Blue\r\n        { r: 73, g: 255, b: 73 },   // Green\r\n        { r: 73, g: 255, b: 255 },  // Cyan\r\n        { r: 255, g: 73, b: 73 },   // Red\r\n        { r: 255, g: 73, b: 255 },  // Magenta\r\n        { r: 255, g: 255, b: 73 },  // Yellow\r\n        { r: 255, g: 255, b: 255 }  // White\r\n      ];\r\n    default:\r\n      return [];\r\n  }\r\n};\r\n\r\nexport const PaletteViewer = ({ selectedPalette, imageData, onPaletteUpdate, originalImageSource, externalPalette, onImageUpdate }: PaletteViewerProps) => {\r\n  const { t } = useTranslation();\r\n  const [paletteColors, setPaletteColors] = useState<PaletteColor[]>(() => \r\n    getDefaultPalette(selectedPalette)\r\n  );\r\n  const [draggedIndex, setDraggedIndex] = useState<number | null>(null);\r\n  const [isOriginalPNG, setIsOriginalPNG] = useState<boolean>(false);\r\n\r\n  const handleDragStart = useCallback((index: number) => {\r\n    setDraggedIndex(index);\r\n  }, []);\r\n\r\n  const handleDragOver = useCallback((e: React.DragEvent) => {\r\n    e.preventDefault();\r\n  }, []);\r\n\r\n  const handleDrop = useCallback((targetIndex: number) => {\r\n    if (draggedIndex === null) return;\r\n    \r\n    const newColors = [...paletteColors];\r\n    const [draggedColor] = newColors.splice(draggedIndex, 1);\r\n    newColors.splice(targetIndex, 0, draggedColor);\r\n    \r\n    setPaletteColors(newColors);\r\n    onPaletteUpdate?.(newColors);\r\n    setDraggedIndex(null);\r\n  }, [draggedIndex, paletteColors, onPaletteUpdate]);\r\n\r\n  const selectNewColor = useCallback((index: number, currentPalette: PaletteType) => {\r\n    // Create a color input element for both desktop and mobile\r\n    const input = document.createElement('input');\r\n    input.type = 'color';\r\n    input.value = `#${paletteColors[index].r.toString(16).padStart(2, '0')}${paletteColors[index].g.toString(16).padStart(2, '0')}${paletteColors[index].b.toString(16).padStart(2, '0')}`.toUpperCase();\r\n\r\n    // Mobile-safe placement: keep it on-screen but invisible so iOS/Android open the picker\r\n    input.style.position = 'fixed';\r\n    input.style.top = '0px';\r\n    input.style.left = '0px';\r\n    input.style.width = '1px';\r\n    input.style.height = '1px';\r\n    input.style.opacity = '0';\r\n    input.style.pointerEvents = 'none';\r\n    input.setAttribute('aria-hidden', 'true');\r\n    input.tabIndex = -1;\r\n\r\n    document.body.appendChild(input);\r\n\r\n    const applyColor = (hex: string) => {\r\n      let r = parseInt(hex.substr(1, 2), 16);\r\n      let g = parseInt(hex.substr(3, 2), 16);\r\n      let b = parseInt(hex.substr(5, 2), 16);\r\n\r\n      // For Mega Drive palette, restrict to RGB333 equivalent colors\r\n      if (currentPalette === 'megadrive') {\r\n        const rgb333 = toRGB333(r, g, b);\r\n        r = rgb333.r;\r\n        g = rgb333.g;\r\n        b = rgb333.b;\r\n      }\r\n\r\n      const newColors = [...paletteColors];\r\n      newColors[index] = { ...newColors[index], r, g, b };\r\n      setPaletteColors(newColors);\r\n      onPaletteUpdate?.(newColors);\r\n\r\n      // Trigger image reprocessing with the new palette immediately\r\n      setTimeout(() => {\r\n        onImageUpdate?.();\r\n      }, 10);\r\n    };\r\n\r\n    const cleanup = () => {\r\n      if (document.body.contains(input)) {\r\n        document.body.removeChild(input);\r\n      }\r\n    };\r\n\r\n    const handleChange = (e: Event) => {\r\n      const target = e.target as HTMLInputElement;\r\n      if (!target || !target.value) {\r\n        cleanup();\r\n        return;\r\n      }\r\n      applyColor(target.value);\r\n      cleanup();\r\n    };\r\n\r\n    input.addEventListener('change', handleChange, { once: true });\r\n    input.addEventListener('input', handleChange, { once: true });\r\n    input.addEventListener('blur', cleanup, { once: true });\r\n\r\n    // Open the native color picker (must be within user gesture)\r\n    try {\r\n      input.click();\r\n    } catch {\r\n      // Fallback: focus then dispatch a click\r\n      input.focus();\r\n      const event = new MouseEvent('click', { bubbles: true, cancelable: true, view: window });\r\n      input.dispatchEvent(event);\r\n    }\r\n  }, [paletteColors, onPaletteUpdate, onImageUpdate]);\r\n\r\n  // RGB333 conversion helper\r\n  const toRGB333 = (r: number, g: number, b: number) => {\r\n    const r3 = Math.round((r / 255) * 7);\r\n    const g3 = Math.round((g / 255) * 7);\r\n    const b3 = Math.round((b / 255) * 7);\r\n    \r\n    return {\r\n      r: Math.round((r3 / 7) * 255),\r\n      g: Math.round((g3 / 7) * 255),\r\n      b: Math.round((b3 / 7) * 255)\r\n    };\r\n  };\r\n\r\n  const extractColorsFromImage = useCallback(async () => {\r\n    if (!imageData && !originalImageSource) return;\r\n    \r\n    // First try to extract from PNG PLTE chunk if it's an indexed PNG\r\n    if (originalImageSource) {\r\n      try {\r\n        const module = await import('@/lib/pngAnalyzer');\r\n        const pngPalette = await module.extractPNGPalette(originalImageSource as File | string);\r\n        if (pngPalette && pngPalette.length > 0) {\r\n          const colors = pngPalette.slice(0, paletteColors.length || 256);\r\n          setPaletteColors(colors);\r\n          onPaletteUpdate?.(colors);\r\n          return;\r\n        }\r\n      } catch (error) {\r\n        console.log('Could not extract PNG palette, falling back to image analysis');\r\n      }\r\n    }\r\n    \r\n    // Fallback to analyzing processed image data\r\n    if (!imageData) return;\r\n    \r\n    // Extract actual colors from the processed image\r\n    const colors = new Map<string, number>();\r\n    const data = imageData.data;\r\n    \r\n    for (let i = 0; i < data.length; i += 4) {\r\n      const r = data[i];\r\n      const g = data[i + 1];\r\n      const b = data[i + 2];\r\n      const colorKey = `${r},${g},${b}`;\r\n      colors.set(colorKey, (colors.get(colorKey) || 0) + 1);\r\n    }\r\n    \r\n    // Sort by frequency and take the most common colors\r\n    const sortedColors = Array.from(colors.entries())\r\n      .sort((a, b) => b[1] - a[1])\r\n      .slice(0, paletteColors.length)\r\n      .map(([color]) => {\r\n        const [r, g, b] = color.split(',').map(Number);\r\n        return { r, g, b };\r\n      });\r\n    \r\n    // Fill remaining slots with black if needed\r\n    while (sortedColors.length < paletteColors.length) {\r\n      sortedColors.push({ r: 0, g: 0, b: 0 });\r\n    }\r\n    \r\n    setPaletteColors(sortedColors);\r\n    onPaletteUpdate?.(sortedColors);\r\n  }, [imageData, originalImageSource, paletteColors.length, onPaletteUpdate]);\r\n\r\n  // Extract unique colors from the current image data and update when it changes\r\n  useEffect(() => {\r\n    const extractColors = async () => {\r\n      // If external palette is provided (from processing), use it\r\n      if (externalPalette && externalPalette.length > 0) {\r\n        setPaletteColors(externalPalette);\r\n        onPaletteUpdate?.(externalPalette);\r\n        return;\r\n      }\r\n\r\n      // First try to extract from PNG PLTE chunk if it's an indexed PNG\r\n      if (originalImageSource && selectedPalette === 'original') {\r\n        try {\r\n          const module = await import('@/lib/pngAnalyzer');\r\n          const pngPalette = await module.extractPNGPalette(originalImageSource as File | string);\r\n          if (pngPalette && pngPalette.length > 0) {\r\n            setIsOriginalPNG(true);\r\n            setPaletteColors(pngPalette); // Keep original order\r\n            onPaletteUpdate?.(pngPalette);\r\n            return;\r\n          }\r\n        } catch (error) {\r\n          console.log('Could not extract PNG palette, falling back to image analysis');\r\n        }\r\n      }\r\n      \r\n      setIsOriginalPNG(false);\r\n\r\n      // For retro palettes, use the default or processed palette\r\n      if (selectedPalette !== 'original') {\r\n        const defaultPalette = getDefaultPalette(selectedPalette);\r\n        setPaletteColors(defaultPalette);\r\n        onPaletteUpdate?.(defaultPalette);\r\n        return;\r\n      }\r\n\r\n      // Priority 1: Handle 'original' palette - only extract from indexed images\r\n      if (selectedPalette === 'original') {\r\n        if (originalImageSource) {\r\n          try {\r\n            const module = await import('@/lib/pngAnalyzer');\r\n            const formatInfo = await module.analyzePNGFile(originalImageSource as File | string);\r\n            if (formatInfo.isIndexed) {\r\n              // Try to extract palette from PNG PLTE chunk\r\n              const extractedPalette = await module.extractPNGPalette(originalImageSource as File | string);\r\n              if (extractedPalette && extractedPalette.length > 0) {\r\n                setPaletteColors(extractedPalette);\r\n                onPaletteUpdate?.(extractedPalette);\r\n                return;\r\n              }\r\n            } else {\r\n              // Non-indexed image - clear palette\r\n              setPaletteColors([]);\r\n              onPaletteUpdate?.([]);\r\n              return;\r\n            }\r\n          } catch (error) {\r\n            // If analysis fails, assume non-indexed and clear palette\r\n            setPaletteColors([]);\r\n            onPaletteUpdate?.([]);\r\n            return;\r\n          }\r\n        }\r\n        \r\n        // If no original image source or extraction failed, clear palette for 'original' mode\r\n        setPaletteColors([]);\r\n        onPaletteUpdate?.([]);\r\n        return;\r\n      }\r\n\r\n      // Priority 2: Use external palette for non-original selections\r\n      if (externalPalette && externalPalette.length > 0) {\r\n        setPaletteColors(externalPalette);\r\n        onPaletteUpdate?.(externalPalette);\r\n        return;\r\n      }\r\n\r\n      // Priority 3: Use default retro palettes\r\n      const defaultPalette = getDefaultPalette(selectedPalette);\r\n      setPaletteColors(defaultPalette);\r\n      onPaletteUpdate?.(defaultPalette);\r\n    };\r\n\r\n    extractColors();\r\n  }, [imageData, selectedPalette, originalImageSource, onPaletteUpdate, externalPalette]);\r\n\r\n  if (selectedPalette === 'original' && !isOriginalPNG) {\r\n    // If an external palette is provided (e.g., after processing), allow showing the viewer\r\n    if (!externalPalette || externalPalette.length === 0) return null;\r\n  }\r\n\r\n  // Always show for retro palettes\r\n  if (selectedPalette !== 'original' && paletteColors.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-4 p-4 border border-elegant-border bg-card/50 rounded-lg\">\r\n      <div className=\"space-y-4\">\r\n        <h3 className=\"text-lg font-bold text-neon-cyan flex items-center\">\r\n          <Palette className=\"mr-2 h-5 w-5\" />\r\n          {paletteColors.length > 0 ? t('paletteWithCount').replace('{count}', paletteColors.length.toString()) : t('extractColors')}\r\n        </h3>\r\n      </div>\r\n      \r\n      <div className=\"space-y-4\">\r\n          <div className=\"text-xs text-muted-foreground\">\r\n            <p>{t('clickToChangeColor')}</p>\r\n          </div>\r\n          \r\n          <div className=\"grid gap-4 w-full\" style={{ \r\n            gridTemplateColumns: `repeat(${Math.min(4, Math.ceil(Math.sqrt(paletteColors.length)))}, minmax(0, 1fr))` \r\n          }}>\r\n            {paletteColors.map((color, index) => {\r\n              const hexColor = `#${color.r.toString(16).padStart(2, '0')}${color.g.toString(16).padStart(2, '0')}${color.b.toString(16).padStart(2, '0')}`.toUpperCase();\r\n              const alpha = color.transparent ? 0 : 100;\r\n              \r\n              return (\r\n                <div\r\n                  key={index}\r\n                  draggable\r\n                  onDragStart={(e) => {\r\n                    handleDragStart(index);\r\n                    // Improve mobile drag support\r\n                    if (e.dataTransfer) {\r\n                      e.dataTransfer.effectAllowed = 'move';\r\n                      e.dataTransfer.setData('text/plain', index.toString());\r\n                    }\r\n                  }}\r\n                  onDragOver={handleDragOver}\r\n                  onDrop={(e) => {\r\n                    e.preventDefault();\r\n                    handleDrop(index);\r\n                  }}\r\n                  onTouchStart={() => handleDragStart(index)}\r\n                  onTouchMove={(e) => {\r\n                    e.preventDefault();\r\n                    // Handle touch drag for mobile\r\n                  }}\r\n                  onTouchEnd={(e) => {\r\n                    // Handle touch drop for mobile\r\n                    const touch = e.changedTouches[0];\r\n                    const elementBelow = document.elementFromPoint(touch.clientX, touch.clientY);\r\n                    const targetElement = elementBelow?.closest('[data-palette-index]');\r\n                    if (targetElement) {\r\n                      const targetIndex = parseInt(targetElement.getAttribute('data-palette-index') || '0');\r\n                      handleDrop(targetIndex);\r\n                    }\r\n                    setDraggedIndex(null);\r\n                  }}\r\n                  data-palette-index={index}\r\n                  className=\"relative group cursor-move bg-card border border-elegant-border rounded-lg p-3 hover:shadow-lg transition-all touch-manipulation\"\r\n                >\r\n                  <div className=\"space-y-2\">\r\n                    <div className=\"relative\">\r\n                      <div\r\n                        className=\"w-full h-12 border border-elegant-border rounded cursor-pointer transition-all hover:scale-105\"\r\n                        style={{\r\n                          backgroundColor: `rgb(${color.r}, ${color.g}, ${color.b})`,\r\n                          opacity: color.transparent ? 0.5 : 1\r\n                        }}\r\n                        onClick={() => selectNewColor(index, selectedPalette)}\r\n                        title={t('clickToChangeColor')}\r\n                      >\r\n                        {color.transparent && (\r\n                          <div className=\"absolute inset-0 flex items-center justify-center\">\r\n                            <div className=\"w-3 h-3 bg-white rounded-full opacity-75\" />\r\n                          </div>\r\n                        )}\r\n                        <span className=\"absolute top-1 right-1 text-xs font-mono bg-black/70 text-white px-1 rounded\">\r\n                          {index}\r\n                        </span>\r\n                      </div>\r\n                      <GripVertical className=\"absolute -top-1 -right-1 h-3 w-3 text-muted-foreground opacity-0 group-hover:opacity-100 transition-opacity\" />\r\n                    </div>\r\n                    \r\n                    <div className=\"text-xs font-mono space-y-0.5 text-muted-foreground\">\r\n                      <div className=\"font-semibold text-foreground\">{hexColor}</div>\r\n                      <div>Red: {color.r}</div>\r\n                      <div>Green: {color.g}</div>\r\n                      <div>Blue: {color.b}</div>\r\n                      <div>Alpha: {alpha}%</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n    </div>\r\n  );\r\n};","import { useRef, useEffect, useState, useCallback, useMemo } from 'react';\r\nimport { Card } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Slider } from '@/components/ui/slider';\r\nimport { Checkbox } from '@/components/ui/checkbox';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\r\nimport { Download, Eye, RefreshCcw, ZoomIn, Camera, X, Maximize2, MoveHorizontal } from 'lucide-react';\r\nimport { useTranslation } from '@/hooks/useTranslation';\r\nimport type { ImageFormatInfo } from '@/lib/pngAnalyzer';\r\nimport { PaletteViewer } from './PaletteViewer';\r\nimport { PaletteType } from './ColorPaletteSelector';\r\nimport { Color } from '@/lib/colorQuantization';\r\n\r\n// Performance constants for image analysis and rendering\r\nconst COLOR_SAMPLE_INTERVAL = 16; // Sample every 4th pixel for performance\r\nconst RESIZE_DEBOUNCE_MS = 100; // Debounce resize calculations\r\nconst FIT_DEBOUNCE_MS = 250; // Minimum interval between fitToWidth executions\r\nconst ZOOM_BOUNDS = { min: 10, max: 2000 }; // Zoom limits for performance\r\n\r\n// Performance-optimized image format analysis with pixel sampling\r\nconst analyzeImageFormat = (image: HTMLImageElement, t: (key: string) => string): Promise<string> => {\r\n  return new Promise((resolve) => {\r\n    const canvas = document.createElement('canvas');\r\n    const ctx = canvas.getContext('2d');\r\n    \r\n    if (!ctx) {\r\n      resolve('Unknown');\r\n      return;\r\n    }\r\n    \r\n    canvas.width = image.width;\r\n    canvas.height = image.height;\r\n    ctx.drawImage(image, 0, 0);\r\n    \r\n    const imageData = ctx.getImageData(0, 0, image.width, image.height);\r\n    const data = imageData.data;\r\n    \r\n    // Detect format from source URL/data\r\n    const src = image.src.toLowerCase();\r\n    let baseFormat = 'Unknown';\r\n    \r\n    if (src.includes('data:image/')) {\r\n      const mimeMatch = src.match(/data:image\\/([^;]+)/);\r\n      if (mimeMatch) {\r\n        const mime = mimeMatch[1];\r\n        if (mime === 'jpeg' || mime === 'jpg') baseFormat = 'JPG';\r\n        else if (mime === 'png') baseFormat = 'PNG';\r\n        else if (mime === 'bmp') baseFormat = 'BMP';\r\n        else if (mime === 'gif') baseFormat = 'GIF';\r\n        else baseFormat = mime.toUpperCase();\r\n      }\r\n    } else {\r\n      // Extract from file extension\r\n      if (src.includes('.jpg') || src.includes('.jpeg')) baseFormat = 'JPG';\r\n      else if (src.includes('.png')) baseFormat = 'PNG';\r\n      else if (src.includes('.bmp')) baseFormat = 'BMP';\r\n      else if (src.includes('.gif')) baseFormat = 'GIF';\r\n    }\r\n    \r\n    // For non-PNG formats, return basic format info\r\n    if (baseFormat !== 'PNG') {\r\n      resolve(baseFormat);\r\n      return;\r\n    }\r\n    \r\n    // For PNG: Analyze color properties with optimized sampling\r\n    const uniqueColors = new Set<string>();\r\n    let hasAlpha = false;\r\n    \r\n    // Performance optimization: Sample pixels at intervals for large images\r\n    for (let i = 0; i < data.length; i += COLOR_SAMPLE_INTERVAL) {\r\n      const r = data[i];\r\n      const g = data[i + 1];\r\n      const b = data[i + 2];\r\n      const a = data[i + 3];\r\n      \r\n      if (a < 255) hasAlpha = true;\r\n      \r\n      const colorKey = `${r},${g},${b}`;\r\n      uniqueColors.add(colorKey);\r\n      \r\n      // Early exit for large color counts (performance optimization)\r\n      if (uniqueColors.size > 256) {\r\n        resolve(t('png24RgbFormat'));\r\n        return;\r\n      }\r\n    }\r\n    \r\n    // Classify PNG subtype based on color count\r\n    const colorCount = uniqueColors.size;\r\n    \r\n    if (colorCount <= 256) {\r\n      if (colorCount <= 2) resolve(t('png8IndexedFormat').replace('{count}', colorCount.toString()));\r\n      else if (colorCount <= 16) resolve(t('png8IndexedFormat').replace('{count}', colorCount.toString()));\r\n      else if (colorCount <= 256) resolve(t('png8IndexedFormat').replace('{count}', colorCount.toString()));\r\n      else resolve(t('png24RgbFormat'));\r\n    } else {\r\n      resolve(t('png24RgbFormat'));\r\n    }\r\n  });\r\n};\r\n\r\nconst analyzeImageDataFormat = (imageData: ImageData, t: (key: string) => string): string => {\r\n  // For processed ImageData, we'll assume it's PNG-24 RGB since that's typical for canvas output\r\n  return t('png24RgbFormat');\r\n};\r\n\r\ninterface ImagePreviewProps {\r\n  originalImage: HTMLImageElement | null;\r\n  processedImageData: ImageData | null;\r\n  onDownload?: () => void;\r\n  onLoadImageClick?: (source: File | string) => void;\r\n  originalImageSource?: File | string; // Add source for PNG analysis\r\n  selectedPalette?: PaletteType;\r\n  onPaletteUpdate?: (colors: Color[]) => void;\r\n  showCameraPreview?: boolean;\r\n  onCameraPreviewChange?: (show: boolean) => void;\r\n  selectedCameraId?: string;\r\n  currentPaletteColors?: Color[];\r\n  onSectionOpen?: () => void; // New callback for section opening\r\n  onRequestOpenCameraSelector?: () => void;\r\n  showTileGrid?: boolean;\r\n  showFrameGrid?: boolean;\r\n  tileWidth?: number;\r\n  tileHeight?: number;\r\n  frameWidth?: number;\r\n  frameHeight?: number;\r\n  tileGridColor?: string;\r\n  frameGridColor?: string;\r\n  tileLineThickness?: number;\r\n  frameLineThickness?: number;\r\n  autoFitKey?: string;\r\n  onZoomChange?: (zoom: number) => void;\r\n  isVerticalLayout?: boolean; // Layout state for responsive handling\r\n  // Optional: allow parent to force container styles (height/width constraints)\r\n  containerStyle?: React.CSSProperties;\r\n}\r\n\r\nexport const ImagePreview = ({ \r\n  originalImage, \r\n  processedImageData, \r\n  onDownload, \r\n  onLoadImageClick, \r\n  originalImageSource, \r\n  selectedPalette = 'original', \r\n  onPaletteUpdate, \r\n  showCameraPreview, \r\n  onCameraPreviewChange, \r\n  selectedCameraId,\r\n  currentPaletteColors, \r\n  onSectionOpen, \r\n  onRequestOpenCameraSelector,\r\n  showTileGrid = false, \r\n  showFrameGrid = false, \r\n  tileWidth = 8, \r\n  tileHeight = 8, \r\n  frameWidth = 16, \r\n  frameHeight = 16, \r\n  tileGridColor = '#808080', \r\n  frameGridColor = '#96629d', \r\n  tileLineThickness = 1,\r\n  frameLineThickness = 3,\r\n  autoFitKey, \r\n  onZoomChange,\r\n  isVerticalLayout,\r\n  containerStyle\r\n}: ImagePreviewProps) => {\r\n  const { t } = useTranslation();\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n  const videoRef = useRef<HTMLVideoElement>(null);\r\n  const streamRef = useRef<MediaStream | null>(null);\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const [showOriginal, setShowOriginal] = useState(false);\r\n  const [zoom, setZoom] = useState([100]);\r\n  const [sliderValue, setSliderValue] = useState<number[]>([100]);\r\n  const [containerWidth, setContainerWidth] = useState(0);\r\n  const containerWidthRef = useRef<number>(0);\r\n  const [previewHeight, setPreviewHeight] = useState(400);\r\n  const headerRef = useRef<HTMLDivElement>(null);\r\n  const controlsRef = useRef<HTMLDivElement>(null);\r\n  const [sliderFullWidth, setSliderFullWidth] = useState(false);\r\n  const footerRef = useRef<HTMLDivElement>(null);\r\n  const [originalFormat, setOriginalFormat] = useState<string>('');\r\n  const [processedFormat, setProcessedFormat] = useState<string>('');\r\n  const [isIndexedPNG, setIsIndexedPNG] = useState<boolean>(false);\r\n  const [availableCameras, setAvailableCameras] = useState<MediaDeviceInfo[]>([]);\r\n  const [currentCameraId, setCurrentCameraId] = useState<string>('');\r\n  const [integerScaling, setIntegerScaling] = useState(false);\r\n  // Note: Grid dimensions now come from props\r\n  const programmaticZoomChange = useRef(false);\r\n  const isAutoFitting = useRef(false);\r\n  const lastFitCallRef = useRef<number>(0);\r\n  const [shouldAutoFit, setShouldAutoFit] = useState(true);\r\n  const autoFitAllowed = useRef(true);\r\n  const expectingProcessedChange = useRef(false);\r\n  const isUserDraggingSlider = useRef(false);\r\n  // When the user interacts with the zoom controls we temporarily suppress\r\n  // any automatic fit-to-width triggers (both while dragging and for a short\r\n  // cooldown after release). This ensures user-chosen zoom is never overridden\r\n  // by auto-fit logic.\r\n  const suppressAutoFitRef = useRef(false);\r\n  const suppressAutoFitTimeoutRef = useRef<number | null>(null);\r\n  // Track if the user has explicitly set a zoom so automatic fits don't\r\n  // override their choice. This stays true until a new image is loaded or\r\n  // an explicit auto-fit (resolution change / load) runs.\r\n  const userSetZoomRef = useRef(false);\r\n  // One-time permit for explicit forced fitToWidth calls (only allow camera/button)\r\n  const autoFitPermitRef = useRef(false);\r\n\r\n  // Get available cameras\r\n  useEffect(() => {\r\n    const getCameras = async () => {\r\n      try {\r\n        const devices = await navigator.mediaDevices.enumerateDevices();\r\n        const cameras = devices.filter(device => device.kind === 'videoinput');\r\n        setAvailableCameras(cameras);\r\n        if (cameras.length > 0 && !currentCameraId) {\r\n          setCurrentCameraId(cameras[0].deviceId);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error getting cameras:', error);\r\n      }\r\n    };\r\n    \r\n    getCameras();\r\n  }, [currentCameraId]);\r\n\r\n  // Set camera aspect ratio for responsive layout\r\n  const setCameraAspectRatio = useCallback(() => {\r\n    if (!videoRef.current || videoRef.current.videoHeight === 0) return;\r\n\r\n    // Get actual camera resolution\r\n    const cameraWidth = videoRef.current.videoWidth;\r\n    const cameraHeight = videoRef.current.videoHeight;\r\n    \r\n    if (cameraWidth === 0 || cameraHeight === 0) return;\r\n\r\n    // Calculate aspect ratio\r\n    const aspectRatio = cameraWidth / cameraHeight;\r\n    \r\n    // Update container to use the camera's aspect ratio\r\n    const containerEl = containerRef.current;\r\n    if (containerEl) {\r\n      containerEl.style.aspectRatio = aspectRatio.toString();\r\n    }\r\n  }, []);\r\n\r\n  // Start camera preview\r\n  const startCameraPreview = useCallback(async () => {\r\n    try {\r\n      const constraints = {\r\n        video: currentCameraId ? { deviceId: { exact: currentCameraId } } : true\r\n      };\r\n      const stream = await navigator.mediaDevices.getUserMedia(constraints);\r\n      streamRef.current = stream;\r\n      \r\n      if (videoRef.current) {\r\n        videoRef.current.srcObject = stream;\r\n        videoRef.current.play();\r\n        \r\n        // Wait for video metadata to load before setting aspect ratio\r\n        videoRef.current.addEventListener('loadedmetadata', () => {\r\n          setCameraAspectRatio();\r\n          // Authorize a single forced fit and notify readiness for camera flow\r\n          try { autoFitPermitRef.current = true; window.dispatchEvent(new CustomEvent('cameraPreviewReady')); } catch (e) { /* ignore */ }\r\n        }, { once: true });\r\n      }\r\n      \r\n      onCameraPreviewChange?.(true);\r\n    } catch (error) {\r\n      console.error('Camera access denied:', error);\r\n    }\r\n  }, [currentCameraId, onCameraPreviewChange, setCameraAspectRatio]);\r\n\r\n  // Apply selected camera from parent\r\n  useEffect(() => {\r\n    if (selectedCameraId) {\r\n      setCurrentCameraId(selectedCameraId);\r\n    }\r\n  }, [selectedCameraId]);\r\n\r\n  // Camera preview aspect ratio effect\r\n  useEffect(() => {\r\n    if (!showCameraPreview) return;\r\n\r\n    // Initial calculation\r\n    const timer = setTimeout(setCameraAspectRatio, 100);\r\n\r\n    // Listen for video metadata loaded\r\n    const video = videoRef.current;\r\n    if (video) {\r\n      video.addEventListener('loadedmetadata', setCameraAspectRatio);\r\n      video.addEventListener('resize', setCameraAspectRatio);\r\n    }\r\n\r\n    return () => {\r\n      clearTimeout(timer);\r\n      if (video) {\r\n        video.removeEventListener('loadedmetadata', setCameraAspectRatio);\r\n        video.removeEventListener('resize', setCameraAspectRatio);\r\n      }\r\n    };\r\n  }, [showCameraPreview, setCameraAspectRatio]);\r\n\r\n  // Stop camera preview\r\n  const stopCameraPreview = useCallback(() => {\r\n    if (streamRef.current) {\r\n      streamRef.current.getTracks().forEach(track => track.stop());\r\n      streamRef.current = null;\r\n    }\r\n    onCameraPreviewChange?.(false);\r\n  }, [onCameraPreviewChange]);\r\n\r\n  // Capture photo from camera\r\n  const capturePhoto = useCallback(() => {\r\n    if (!videoRef.current) return;\r\n    \r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = videoRef.current.videoWidth;\r\n    canvas.height = videoRef.current.videoHeight;\r\n    const ctx = canvas.getContext('2d');\r\n    if (!ctx) return;\r\n    ctx.drawImage(videoRef.current, 0, 0);\r\n\r\n    // Prefer a data URL (string) because the import/load handlers may expect a URL/clipboard-style input.\r\n    // Also create a File so components that expect a File will still work.\r\n    const dataUrl = canvas.toDataURL('image/png');\r\n\r\n    canvas.toBlob((blob) => {\r\n      if (!blob) {\r\n        // If we couldn't produce a blob, still attempt the data URL\r\n        onLoadImageClick?.(dataUrl);\r\n        stopCameraPreview();\r\n        return;\r\n      }\r\n\r\n      const file = new File([blob], 'camera-capture.png', { type: 'image/png' });\r\n\r\n      // Call parent handler with data URL first (covers handlers expecting string sources),\r\n      // then call again with File as fallback (covers handlers expecting File).\r\n      // Small delay between calls helps avoid race conditions in some parent handlers.\r\n      try {\r\n        onLoadImageClick?.(dataUrl);\r\n      } catch (e) {\r\n        // ignore\r\n      }\r\n\r\n      setTimeout(() => {\r\n        try {\r\n          onLoadImageClick?.(file);\r\n        } catch (e) {\r\n          // ignore\r\n        }\r\n      }, 50);\r\n\r\n      stopCameraPreview();\r\n    }, 'image/png');\r\n  }, [onLoadImageClick, stopCameraPreview]);\r\n\r\n  // ...existing code... (switch camera button removed)\r\n\r\n  // Start camera preview when prop changes\r\n  useEffect(() => {\r\n    if (showCameraPreview) {\r\n      startCameraPreview();\r\n    } else {\r\n      stopCameraPreview();\r\n    }\r\n  }, [showCameraPreview, startCameraPreview, stopCameraPreview]);\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (originalImage && originalImageSource) {\r\n        try {\r\n          const module = await import('@/lib/pngAnalyzer');\r\n          const info: ImageFormatInfo = await module.analyzePNGFile(originalImageSource as File | string);\r\n          const isIndexed = info.isIndexed;\r\n          const isPNG8 = (info.bitDepth ?? 8) <= 8 && (info.paletteSize ?? 256) <= 256;\r\n          let localized = '';\r\n          if (isIndexed) {\r\n            const key = isPNG8 ? 'png8IndexedFormat' : 'png24IndexedFormat';\r\n            localized = t(key).replace('{count}', String(info.paletteSize ?? 0));\r\n          } else {\r\n            if (info.format.includes('PNG-24 RGB')) localized = t('png24RgbFormat');\r\n            else localized = info.format; // Fallback for other formats\r\n          }\r\n          setOriginalFormat(localized);\r\n          setIsIndexedPNG(isIndexed);\r\n        } catch (error) {\r\n          // If analysis fails, fallback to basic analysis\r\n          const format = await analyzeImageFormat(originalImage, t);\r\n          setOriginalFormat(format);\r\n          setIsIndexedPNG(format.includes('Indexed'));\r\n        }\r\n      } else if (originalImage) {\r\n        // Fallback to basic analysis for URLs or when source is not available\r\n        analyzeImageFormat(originalImage, t).then(format => {\r\n          setOriginalFormat(format);\r\n          setIsIndexedPNG(format.includes('Indexed'));\r\n        });\r\n      } else {\r\n        setOriginalFormat('');\r\n        setIsIndexedPNG(false);\r\n      }\r\n    })();\r\n  }, [originalImage, originalImageSource, t]);\r\n\r\n  // Analyze processed image format\r\n  useEffect(() => {\r\n    if (processedImageData) {\r\n      const format = analyzeImageDataFormat(processedImageData, t);\r\n      setProcessedFormat(format);\r\n    } else {\r\n      setProcessedFormat('');\r\n    }\r\n  }, [processedImageData, t]);\r\n\r\n  // Calculate container width and fit-to-width zoom (observe element size)\r\n  useEffect(() => {\r\n    const update = () => {\r\n      if (containerRef.current) {\r\n        const width = containerRef.current.clientWidth;\r\n        const cw = Math.max(200, width);\r\n        setContainerWidth(cw);\r\n        containerWidthRef.current = cw;\r\n      }\r\n    };\r\n\r\n    update();\r\n\r\n    const ro = new ResizeObserver((entries) => {\r\n      for (const entry of entries) {\r\n        const width = entry.contentRect.width;\r\n        const cw = Math.max(200, width);\r\n        setContainerWidth(cw);\r\n        containerWidthRef.current = cw;\r\n      }\r\n    });\r\n\r\n    if (containerRef.current) {\r\n      ro.observe(containerRef.current);\r\n    }\r\n\r\n    window.addEventListener('resize', update);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', update);\r\n      ro.disconnect();\r\n    };\r\n  }, []);\r\n  // Fit to width function\r\n  const fitToWidth = useCallback((force = false) => {\r\n    // If caller requested a forced fit, require a one-time permit so only\r\n    // authorized flows (camera preview and manual button) can execute it.\r\n    if (force) {\r\n      if (!autoFitPermitRef.current) {\r\n        // eslint-disable-next-line no-console\r\n        console.debug('[TEMP DEBUG] fitToWidth blocked: no permit for forced call');\r\n        return;\r\n      }\r\n      // consume permit\r\n      autoFitPermitRef.current = false;\r\n    }\r\n    const cw = containerWidthRef.current;\r\n    const now = Date.now();\r\n\r\n    // Prevent rapid repeated calls or re-entrant execution\r\n    if (isAutoFitting.current) {\r\n      // eslint-disable-next-line no-console\r\n      console.debug('[TEMP DEBUG] fitToWidth suppressed: already running');\r\n      return;\r\n    }\r\n    if (now - lastFitCallRef.current < FIT_DEBOUNCE_MS) {\r\n      // eslint-disable-next-line no-console\r\n      console.debug('[TEMP DEBUG] fitToWidth suppressed: debounce');\r\n      return;\r\n    }\r\n    lastFitCallRef.current = now;\r\n    isAutoFitting.current = true;\r\n    // TEMPORARY DIAGNOSTIC: capture call stack and print caller location and args\r\n    try {\r\n      const raw = (new Error()).stack || '';\r\n      const lines = raw.split('\\n').map(l => l.trim()).filter(Boolean);\r\n      // Find first stack entry that is not this function itself\r\n      let callerLine = lines.find(l => !/fitToWidth/.test(l) && !/new Error/.test(l));\r\n      if (!callerLine) callerLine = lines[1] || lines[0] || 'unknown';\r\n      const match = callerLine.match(/\\(?([^()]+:\\d+:\\d+)\\)?$/);\r\n      const callerLocation = match ? match[1] : callerLine;\r\n      // Use console.debug so it can be filtered; also print full stack for deeper inspection\r\n      // eslint-disable-next-line no-console\r\n      console.debug('[TEMP DEBUG] fitToWidth called', { force, callerLocation });\r\n      // eslint-disable-next-line no-console\r\n      console.debug('[TEMP DEBUG] fitToWidth stack:\\n' + lines.join('\\n'));\r\n    } catch (err) {\r\n      // eslint-disable-next-line no-console\r\n      console.debug('[TEMP DEBUG] fitToWidth diagnostic failed', err);\r\n    }\r\n    // If caller doesn't force, respect user interactions / suppression.\r\n    if (!force) {\r\n      if (isUserDraggingSlider.current) return; // Prevent fit to width while user is dragging slider\r\n      if (suppressAutoFitRef.current) return; // Suppress auto-fit during/after user zoom interactions\r\n      if (userSetZoomRef.current) return; // Respect explicit user-selected zoom\r\n    }\r\n    \r\n    try {\r\n      if (originalImage && cw > 0) {\r\n      const currentImage = showOriginal ? originalImage : (processedImageData ? { width: processedImageData.width, height: processedImageData.height } : originalImage);\r\n      const fitZoom = Math.floor((cw / currentImage.width) * 100);\r\n  const newZoom = Math.max(1, Math.min(2000, fitZoom));\r\n      programmaticZoomChange.current = true;\r\n      setZoom([newZoom]);\r\n      setSliderValue([newZoom]);\r\n      onZoomChange?.(newZoom);\r\n      \r\n      // Calculate and set height based on fit-to-width zoom\r\n      const displayHeight = currentImage.height * (newZoom / 100);\r\n      const minHeight = 150;\r\n      const calculatedHeight = Math.max(minHeight, displayHeight);\r\n      setPreviewHeight(Math.ceil(calculatedHeight));\r\n    }\r\n    } finally {\r\n      // Allow a short delay before clearing running flag to avoid immediate reentry\r\n      setTimeout(() => {\r\n        isAutoFitting.current = false;\r\n      }, 0);\r\n    }\r\n  }, [originalImage, showOriginal, processedImageData, onZoomChange]);\r\n\r\n  // Listen for camera preview readiness and perform a single allowed auto-fit\r\n  useEffect(() => {\r\n    const handler = () => {\r\n      try {\r\n        // force the fit once when camera preview is ready\r\n        fitToWidth(true);\r\n      } catch (e) {\r\n        // ignore\r\n      }\r\n    };\r\n\r\n    window.addEventListener('cameraPreviewReady', handler as EventListener);\r\n    return () => window.removeEventListener('cameraPreviewReady', handler as EventListener);\r\n  }, [fitToWidth]);\r\n\r\n  // Set zoom to exactly 100%\r\n  const setZoomTo100 = useCallback(() => {\r\n  // Prevent setting 100% from triggering any auto-fit logic while the user\r\n  // is actively dragging. Allow the button even if suppression is active so\r\n  // users can always set an explicit 100% zoom.\r\n  if (isUserDraggingSlider.current) return;\r\n\r\n  // Mark that the user explicitly set the zoom so auto-fit won't override it.\r\n  userSetZoomRef.current = true;\r\n\r\n  // Mark that this is a programmatic zoom change and suppress auto-fit\r\n  // for a short cooldown so effects triggered by zoom won't call fitToWidth.\r\n    programmaticZoomChange.current = true;\r\n    if (suppressAutoFitTimeoutRef.current) window.clearTimeout(suppressAutoFitTimeoutRef.current);\r\n    suppressAutoFitRef.current = true;\r\n    suppressAutoFitTimeoutRef.current = window.setTimeout(() => {\r\n      suppressAutoFitRef.current = false;\r\n      suppressAutoFitTimeoutRef.current = null;\r\n    }, 700) as unknown as number;\r\n    const newZoom = 100;\r\n    setZoom([newZoom]);\r\n    setSliderValue([newZoom]);\r\n    onZoomChange?.(newZoom);\r\n\r\n    // Recalculate and set height based on 100% zoom\r\n    if (originalImage) {\r\n      const currentImage = showOriginal ? originalImage : (processedImageData ? { width: processedImageData.width, height: processedImageData.height } : originalImage);\r\n      const displayHeight = currentImage.height * (newZoom / 100);\r\n      const minHeight = 150;\r\n      const calculatedHeight = Math.max(minHeight, displayHeight);\r\n      setPreviewHeight(Math.ceil(calculatedHeight));\r\n    }\r\n  }, [originalImage, showOriginal, processedImageData, onZoomChange]);\r\n\r\n  // Optimized zoom handling with bounds checking and integer scaling\r\n  const handleZoomChange = useCallback((newZoom: number[]) => {\r\n    isUserDraggingSlider.current = true;\r\n    // Mark that the user explicitly set the zoom so auto-fit won't override it.\r\n    userSetZoomRef.current = true;\r\n    // Suppress auto-fit while user is dragging and for a short cooldown after release\r\n    if (suppressAutoFitTimeoutRef.current) window.clearTimeout(suppressAutoFitTimeoutRef.current);\r\n    suppressAutoFitRef.current = true;\r\n    setShouldAutoFit(false);\r\n    autoFitAllowed.current = false;\r\n    expectingProcessedChange.current = false;\r\n    \r\n    // Apply zoom bounds for performance\r\n    const clampedZoom = Math.max(ZOOM_BOUNDS.min, Math.min(ZOOM_BOUNDS.max, newZoom[0]));\r\n    \r\n    if (integerScaling) {\r\n      // Snap to 100% increments for pixel-perfect scaling\r\n      const roundedZoom = Math.round(clampedZoom / 100) * 100;\r\n      const applied = Math.max(100, roundedZoom);\r\n      setZoom([applied]);\r\n      setSliderValue([applied]);\r\n      onZoomChange?.(applied);\r\n    } else {\r\n      setZoom([clampedZoom]);\r\n      setSliderValue([clampedZoom]);\r\n      onZoomChange?.(clampedZoom);\r\n    }\r\n    \r\n    // Recalculate height when zoom changes\r\n    if (originalImage && containerWidth > 0) {\r\n      const currentImage = showOriginal ? originalImage : (processedImageData || originalImage);\r\n      const displayHeight = currentImage.height * (clampedZoom / 100);\r\n      const minHeight = 150;\r\n      const calculatedHeight = Math.max(minHeight, displayHeight);\r\n      setPreviewHeight(Math.ceil(calculatedHeight));\r\n    }\r\n    \r\n    // Reset dragging flag after a short delay (increase to avoid auto-fit race)\r\n    setTimeout(() => {\r\n      isUserDraggingSlider.current = false;\r\n      // Keep suppressing auto-fit for a short cooldown after the user releases\r\n      // the slider so other effects don't immediately trigger fitToWidth.\r\n      if (suppressAutoFitTimeoutRef.current) window.clearTimeout(suppressAutoFitTimeoutRef.current);\r\n      suppressAutoFitTimeoutRef.current = window.setTimeout(() => {\r\n        suppressAutoFitRef.current = false;\r\n        suppressAutoFitTimeoutRef.current = null;\r\n      }, 700) as unknown as number;\r\n    }, 300);\r\n  }, [integerScaling, onZoomChange, originalImage, containerWidth, showOriginal, processedImageData]);\r\n\r\n  // Cleanup suppression timeout on unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      if (suppressAutoFitTimeoutRef.current) {\r\n        window.clearTimeout(suppressAutoFitTimeoutRef.current);\r\n        suppressAutoFitTimeoutRef.current = null;\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // Layout-aware height recalculation effect\r\n  useEffect(() => {\r\n    if (isVerticalLayout !== undefined && originalImage && containerWidth > 0) {\r\n      // Layout changed — intentionally not triggering fitToWidth automatically.\r\n      // Previously this scheduled fitToWidth(true) with a timeout; removed to\r\n      // ensure fitToWidth only runs from the manual button or the camera flow.\r\n    }\r\n  }, [isVerticalLayout, originalImage, containerWidth]);\r\n\r\n  // Observe header width and controls width to decide if slider should wrap to its own line\r\n  useEffect(() => {\r\n    const update = () => {\r\n      const header = headerRef.current;\r\n      const controls = controlsRef.current;\r\n      if (!header || !controls) {\r\n        setSliderFullWidth(false);\r\n        return;\r\n      }\r\n      const containerW = header.clientWidth;\r\n      const controlsW = controls.offsetWidth;\r\n      const availableForSlider = Math.max(0, containerW - controlsW);\r\n      const needsWrap = availableForSlider < containerW * 0.5;\r\n      setSliderFullWidth(needsWrap);\r\n    };\r\n\r\n    update();\r\n    const ro = new ResizeObserver(() => update());\r\n    if (headerRef.current) ro.observe(headerRef.current);\r\n    if (controlsRef.current) ro.observe(controlsRef.current);\r\n    window.addEventListener('resize', update);\r\n    return () => {\r\n      ro.disconnect();\r\n      window.removeEventListener('resize', update);\r\n    };\r\n  }, []);\r\n\r\n  // Custom imageLoaded event listener for layout-aware recalculation\r\n  useEffect(() => {\r\n    // imageLoaded listener retained but no automatic fitToWidth call (manual only)\r\n    const handleImageLoaded = () => {\r\n      if (isUserDraggingSlider.current) return; // Prevent auto-fit while dragging\r\n      // previously would call fitToWidth() here; removed to avoid automatic loops\r\n    };\r\n\r\n    window.addEventListener('imageLoaded', handleImageLoaded);\r\n\r\n    return () => {\r\n      window.removeEventListener('imageLoaded', handleImageLoaded);\r\n    };\r\n  }, [isVerticalLayout, originalImage, containerWidth]);\r\n\r\n  // Handle integer scaling toggle\r\n  const handleIntegerScalingChange = useCallback((checked: boolean) => {\r\n    setShouldAutoFit(false);\r\n    autoFitAllowed.current = false;\r\n    expectingProcessedChange.current = false;\r\n    setIntegerScaling(checked);\r\n    if (checked) {\r\n      const roundedZoom = Math.round(zoom[0] / 100) * 100;\r\n      const applied = Math.max(100, roundedZoom);\r\n      setZoom([applied]);\r\n      setSliderValue([applied]);\r\n      onZoomChange?.(applied);\r\n    }\r\n  }, [zoom, onZoomChange]);\r\n\r\n  // Enable auto-fit on new image load with enhanced reliability\r\n  useEffect(() => {\r\n    if (originalImage) {\r\n      autoFitAllowed.current = true;\r\n      setShouldAutoFit(true);\r\n      // Previously this scheduled fitToWidth(true) and retries; removed to avoid automatic calls\r\n    }\r\n  }, [originalImage, containerWidth]);\r\n\r\n  // Prepare auto-fit when resolution/scaling changes; wait for processed image\r\n  useEffect(() => {\r\n    if (autoFitKey !== undefined) {\r\n      autoFitAllowed.current = true;\r\n      expectingProcessedChange.current = true;\r\n    }\r\n  }, [autoFitKey]);\r\n\r\n  // When processed image updates due to resolution/scaling changes and auto-fit is allowed, trigger it once\r\n  useEffect(() => {\r\n    if (expectingProcessedChange.current && autoFitAllowed.current) {\r\n      setShouldAutoFit(true);\r\n    }\r\n  }, [processedImageData]);\r\n\r\n  // Apply fit to width once when auto-fit is pending and container size is known\r\n  useEffect(() => {\r\n    // Auto-fit pending watcher retained but no automatic fitToWidth invocation\r\n    if (!originalImage || containerWidth <= 0) return;\r\n    if (!shouldAutoFit || isUserDraggingSlider.current) return;\r\n    // Previously would call fitToWidth(true) here; removed to prevent loops\r\n    setShouldAutoFit(false);\r\n    expectingProcessedChange.current = false;\r\n  }, [shouldAutoFit, containerWidth, originalImage]);\r\n\r\n  // Layout-aware height recalculation effect\r\n  useEffect(() => {\r\n    if (isUserDraggingSlider.current) return; // Prevent auto-fit while dragging\r\n    // Layout change detected; intentionally not triggering fitToWidth automatically\r\n  }, [isVerticalLayout, originalImage, containerWidth]);\r\n\r\n  // Calculate preview block height to match the image height only.\r\n  // IMPORTANT: Do NOT include header/footer heights here — the preview cell\r\n  // should contain only the image area. Including header/footer produced a\r\n  // visible gap between header, image and footer. Keep a sensible minimum.\r\n  useEffect(() => {\r\n    const timeoutId = setTimeout(() => {\r\n      if (originalImage) {\r\n        const currentImage = showOriginal ? originalImage : (processedImageData || originalImage);\r\n        const currentZoom = zoom[0] / 100;\r\n        const imageHeight = currentImage.height * currentZoom;\r\n        const minHeight = 150;\r\n        const calculatedHeight = Math.max(minHeight, imageHeight);\r\n        setPreviewHeight(Math.ceil(calculatedHeight));\r\n      } else {\r\n        setPreviewHeight(120);\r\n      }\r\n    }, 50);\r\n\r\n    return () => clearTimeout(timeoutId);\r\n  }, [originalImage, processedImageData, zoom, showOriginal]);\r\n\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) return;\r\n\r\n    const ctx = canvas.getContext('2d');\r\n    if (!ctx) return;\r\n\r\n    // Helper to draw image only if fully loaded\r\n    const drawImageIfReady = (img: HTMLImageElement) => {\r\n      if (img.complete && img.naturalWidth > 0 && img.naturalHeight > 0) {\r\n        canvas.width = img.width;\r\n        canvas.height = img.height;\r\n        ctx.drawImage(img, 0, 0);\r\n      } else {\r\n        // Wait for image to load, then draw\r\n        img.onload = () => {\r\n          canvas.width = img.width;\r\n          canvas.height = img.height;\r\n          ctx.drawImage(img, 0, 0);\r\n        };\r\n      }\r\n    };\r\n\r\n    if (showOriginal && originalImage) {\r\n      drawImageIfReady(originalImage);\r\n    } else if (processedImageData) {\r\n      canvas.width = processedImageData.width;\r\n      canvas.height = processedImageData.height;\r\n      ctx.putImageData(processedImageData, 0, 0);\r\n    } else if (originalImage) {\r\n      drawImageIfReady(originalImage);\r\n    }\r\n  }, [originalImage, processedImageData, showOriginal]);\r\n\r\n  const hasProcessedImage = processedImageData !== null;\r\n  // Compute zoom factor from preview slider (1.0 == 100%) to scale grid spacing\r\n  const zoomFactor = zoom[0] / 100;\r\n  // Determine final rendered size of one image pixel in CSS pixels.\r\n  // Use the actual rendered canvas/client width so this accounts for browser zoom\r\n  // and any CSS scaling. Fallback to zoomFactor when canvas isn't available yet.\r\n  const pixelSize = (() => {\r\n    const c = canvasRef.current as HTMLCanvasElement | null;\r\n    if (c && c.width) {\r\n      // clientWidth is CSS pixels used to render the canvas on screen\r\n      return c.clientWidth / c.width;\r\n    }\r\n    return zoomFactor; // fallback\r\n  })();\r\n\r\n  // Compute wrapper size based on the image currently displayed (processed or original)\r\n  const currentDisplayedImage = showOriginal ? originalImage : (processedImageData ? { width: processedImageData.width, height: processedImageData.height } : originalImage);\r\n  const displayedWidth = currentDisplayedImage ? currentDisplayedImage.width * (zoom[0] / 100) : 0;\r\n  const displayedHeight = currentDisplayedImage ? currentDisplayedImage.height * (zoom[0] / 100) : 0;\r\n\r\n  return (\r\n    <div className=\"bg-card rounded-xl border border-elegant-border p-0 m-0 w-full h-full min-w-0 flex flex-col\">\r\n      {/* Header (hidden when camera preview is shown so video can use full cell) */}\r\n    {!showCameraPreview && (\r\n  <div className=\"flex flex-wrap items-center gap-2 text-sm p-4\" ref={headerRef}>\r\n            <span className=\"w-16 font-bold uppercase\">{t('zoom')} {zoom[0]}%</span>\r\n          <div className=\"flex items-center gap-2\" ref={controlsRef}>\r\n            <div className=\"flex items-center space-x-2\">\r\n              <Checkbox \r\n                id=\"integer-scaling\" \r\n                checked={integerScaling}\r\n                onCheckedChange={handleIntegerScalingChange}\r\n              />\r\n              <label htmlFor=\"integer-scaling\" className=\"text-sm\">{t('integerScaling')}</label>\r\n            </div>\r\n            <Button onClick={() => { autoFitPermitRef.current = true; fitToWidth(true); }} variant=\"highlighted\" size=\"sm\" title={t('fitToWidth')} aria-label={t('fitToWidth')}>\r\n              <MoveHorizontal className=\"h-4 w-4\" />\r\n            </Button>\r\n            <Button onClick={setZoomTo100} variant=\"highlighted\" size=\"sm\" title=\"100%\" aria-label=\"Set zoom to 100%\">\r\n              100%\r\n            </Button>\r\n          </div>\r\n\r\n          <div className={sliderFullWidth ? 'w-full mt-2' : 'flex-1'}>\r\n            <Slider\r\n              value={sliderValue}\r\n              onValueChange={handleZoomChange}\r\n              max={ZOOM_BOUNDS.max}\r\n              min={ZOOM_BOUNDS.min}\r\n              step={integerScaling ? 100 : 1}\r\n              className=\"w-full\"\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Image Preview (between header and footer, no overlap) */}\r\n  {/* If we're showing the camera preview, allow the container to size from aspect-ratio\r\n      (setCameraAspectRatio writes containerEl.style.aspectRatio). For images use the\r\n      calculated previewHeight so fit-to-width keeps working. */}\r\n  <div\r\n    ref={containerRef}\r\n    style={\r\n      showCameraPreview\r\n        ? { display: 'flex', alignItems: 'center', justifyContent: 'center', width: '100%', minWidth: 0, ...containerStyle }\r\n        : { height: previewHeight ? `${previewHeight}px` : undefined, display: 'flex', alignItems: 'center', justifyContent: 'center', width: '100%', minWidth: 0, ...containerStyle }\r\n    }\r\n  >\r\n        {originalImage ? (\r\n          <div className=\"relative\" style={{ width: `${displayedWidth}px`, height: `${displayedHeight}px`, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n            <canvas\r\n              ref={canvasRef}\r\n              style={{ \r\n                imageRendering: 'pixelated',\r\n                width: '100%',\r\n                height: '100%',\r\n                display: 'block'\r\n              }}\r\n            />\r\n            {/* Tile Grid */}\r\n            {showTileGrid && (\r\n              <div\r\n                className=\"absolute inset-0 pointer-events-none\"\r\n                style={{\r\n                  // Line thickness (image pixels) scaled by zoomFactor\r\n                  // Use fractional px if necessary — browsers render subpixel lines.\r\n                  backgroundImage: `\r\n                      linear-gradient(to right, ${tileGridColor} ${tileLineThickness}px, transparent ${tileLineThickness}px),\r\n                      linear-gradient(to bottom, ${tileGridColor} ${tileLineThickness}px, transparent ${tileLineThickness}px)\r\n                  `,\r\n                  // Background size should be original image pixels × zoom\r\n                  backgroundSize: `${tileWidth * pixelSize}px ${tileHeight * pixelSize}px`,\r\n                  borderRight: `${tileLineThickness}px solid ${tileGridColor}`,\r\n                  borderBottom: `${tileLineThickness}px solid ${tileGridColor}`\r\n                }}\r\n              />\r\n            )}\r\n            {/* Frame Grid */}\r\n            {showFrameGrid && (\r\n              <div\r\n                className=\"absolute inset-0 pointer-events-none\"\r\n                style={{\r\n                  backgroundImage: `\r\n                    linear-gradient(to right, ${frameGridColor} ${frameLineThickness}px, transparent ${frameLineThickness}px),\r\n                    linear-gradient(to bottom, ${frameGridColor} ${frameLineThickness}px, transparent ${frameLineThickness}px)\r\n                  `,\r\n                  backgroundSize: `${frameWidth * pixelSize}px ${frameHeight * pixelSize}px`,\r\n                  borderRight: `${frameLineThickness}px solid ${frameGridColor}`,\r\n                  borderBottom: `${frameLineThickness}px solid ${frameGridColor}`\r\n                }}\r\n              />\r\n            )}\r\n          </div>\r\n        ) : showCameraPreview ? (\r\n          <div className=\"relative w-full h-full bg-black rounded-md\">\r\n            <video\r\n              ref={videoRef}\r\n              className=\"absolute inset-0 w-full h-full object-contain rounded-md\"\r\n              autoPlay\r\n              muted\r\n              playsInline\r\n            />\r\n            <div className=\"absolute top-4 left-1/2 transform -translate-x-1/2 flex gap-3 z-10 pt-safe\">\r\n              <Button\r\n                onClick={capturePhoto}\r\n                variant=\"secondary\"\r\n                size=\"sm\"\r\n                className=\"bg-white/10 backdrop-blur-md border border-white/20 hover:bg-white/20 text-white shadow-lg\"\r\n              >\r\n                <Camera className=\"h-5 w-5\" />\r\n              </Button>\r\n              {/* Camera-switch button removed — single-camera workflow only */}\r\n              <Button\r\n                onClick={() => {\r\n                  stopCameraPreview();\r\n                  try { onRequestOpenCameraSelector?.(); } catch (e) { /* ignore */ }\r\n                  try { window.dispatchEvent(new CustomEvent('openCameraSelectorRequest')); } catch (e) { /* ignore */ }\r\n                }}\r\n                variant=\"secondary\"\r\n                size=\"sm\"\r\n                className=\"bg-white/10 backdrop-blur-md border border-white/20 hover:bg-white/20 text-white shadow-lg\"\r\n              >\r\n                <X className=\"h-4 w-4\" />\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"w-full bg-card/50 rounded-lg border-2 border-dashed border-elegant-border flex items-center justify-center\" style={{ minHeight: '80px' }}>\r\n            <div className=\"text-center text-muted-foreground py-2\">\r\n              <p className=\"text-base\">{t('loadImage')}</p>\r\n              <p className=\"text-xs\">{t('noImageLoaded')}</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Footer (render only when we have an original or processed image) */}\r\n      <div className=\"space-y-6\" ref={footerRef}>\r\n        {(originalImage || hasProcessedImage) ? (\r\n          <>\r\n            {/* Two-column layout: left = text (unchanged content), right = toggle button */}\r\n            <div style={{ display: 'grid', gridTemplateColumns: 'auto 1fr', alignItems: 'center', width: '100%' }} className=\"text-sm font-mono p-4\">\r\n              {hasProcessedImage && (\r\n                <div style={{ textAlign: 'left' }} className=\"pr-4\">\r\n                  {/* first column (was right): red toggle button, now aligned left */}\r\n                  <Button\r\n                    onClick={() => {\r\n                      const next = !showOriginal;\r\n                      setShowOriginal(next);\r\n                      // Recalculate preview height to reflect the new image selection\r\n                      try {\r\n                        const currentImage = next ? originalImage : (processedImageData || originalImage);\r\n                        if (currentImage) {\r\n                          const displayHeight = currentImage.height * (zoom[0] / 100);\r\n                          const minHeight = 150;\r\n                          const calculatedHeight = Math.max(minHeight, displayHeight);\r\n                          setPreviewHeight(Math.ceil(calculatedHeight));\r\n                        }\r\n                      } catch (e) {\r\n                        // ignore\r\n                      }\r\n                    }}\r\n                    variant=\"highlighted\"\r\n                    size=\"sm\"\r\n                    className=\"flex items-center justify-center h-8 w-8 p-0 focus:outline-none focus-visible:ring-0 bg-blood-red border-blood-red\"\r\n                    title={t('switchPreview')}\r\n                    aria-label={t('switchPreview')}\r\n                  >\r\n                    <RefreshCcw className=\"h-4 w-4 text-white\" />\r\n                  </Button>\r\n                </div>\r\n              )}\r\n              <div style={{ display: 'block' }}>\r\n                {/* second column (was left): text/info block */}\r\n                <div>\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <span className=\"text-foreground font-semibold\">{t('original')}</span>\r\n                    <span className=\"text-muted-foreground text-xs\">{originalImage?.width}×{originalImage?.height}</span>\r\n                    <span className=\"text-muted-foreground text-xs\">{originalFormat}</span>\r\n                    {!processedImageData && originalImage && (\r\n                      <span className=\"text-muted-foreground text-xs\">\r\n                        {t('zoomedDimensions')\r\n                          .replace('{width}', Math.round(originalImage.width * (zoom[0] / 100)).toString())\r\n                          .replace('{height}', Math.round(originalImage.height * (zoom[0] / 100)).toString())}\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                  {processedImageData && (\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <span className=\"text-foreground font-semibold\">{t('processed')}</span>\r\n                      <span className=\"text-muted-foreground text-xs\">{processedImageData.width}×{processedImageData.height}</span>\r\n                      <span className=\"text-muted-foreground text-xs\">{processedFormat}</span>\r\n                      <span className=\"text-muted-foreground text-xs\">\r\n                        {t('zoomedDimensions')\r\n                          .replace('{width}', Math.round(processedImageData.width * (zoom[0] / 100)).toString())\r\n                          .replace('{height}', Math.round(processedImageData.height * (zoom[0] / 100)).toString())}\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Palette Viewer - only show when needed */}\r\n            {(() => {\r\n              // Only show palette viewer when:\r\n              // 1. selectedPalette is not 'original' (showing a retro palette), OR\r\n              // 2. selectedPalette is 'original' AND the image is PNG-8 indexed\r\n              const showPaletteViewer = selectedPalette !== 'original' || isIndexedPNG;\r\n              return showPaletteViewer && originalImage ? (\r\n                <div className=\"mt-4\">\r\n                  <PaletteViewer\r\n                    selectedPalette={selectedPalette}\r\n                    imageData={processedImageData}\r\n                    onPaletteUpdate={onPaletteUpdate}\r\n                    originalImageSource={originalImageSource}\r\n                    // Always forward the parent's current palette (if present). PaletteViewer\r\n                    // expects items with { r,g,b }, so map to that shape. This ensures exports\r\n                    // can use the exact palette shown in the preview even when selectedPalette === 'original'.\r\n                    externalPalette={currentPaletteColors && currentPaletteColors.length > 0\r\n                      ? currentPaletteColors.map(c => ({ r: c.r, g: c.g, b: c.b }))\r\n                      : undefined}\r\n                    onImageUpdate={() => {\r\n                      // Trigger image reprocessing when palette is updated\r\n                      onSectionOpen?.();\r\n                    }}\r\n                  />\r\n                </div>\r\n              ) : null;\r\n            })()}\r\n          </>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};","import { useCallback, useState } from 'react';\r\nimport { Card } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Checkbox } from '@/components/ui/checkbox';\r\nimport { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group';\r\nimport { Label } from '@/components/ui/label';\r\nimport { useTranslation } from '@/hooks/useTranslation';\r\nimport { Download, Cloud, Upload, Share, Copy, X, FileQuestion, FilePlus } from 'lucide-react';\r\nimport { toast } from 'sonner';\r\nimport { createPNG8IndexedBlob } from '@/lib/pngIndexedEncoder';\r\n\r\ninterface ExportImageProps {\r\n  processedImageData: ImageData | null;\r\n  originalImage?: HTMLImageElement | null;\r\n  selectedPalette: string;\r\n  // selectedResolution removed, now managed internally\r\n  currentZoom?: number;\r\n  showTileGrid?: boolean;\r\n  showFrameGrid?: boolean;\r\n  tileWidth?: number;\r\n  tileHeight?: number;\r\n  frameWidth?: number;\r\n  frameHeight?: number;\r\n  tileGridColor?: string;\r\n  frameGridColor?: string;\r\n  paletteColors?: { r: number; g: number; b: number }[];\r\n  onClose?: () => void;\r\n}\r\n\r\nexport const ExportImage = ({ \r\n  processedImageData, \r\n  originalImage, \r\n  selectedPalette, \r\n  currentZoom = 1, \r\n  showTileGrid = false, \r\n  showFrameGrid = false, \r\n  tileWidth = 8,\r\n  tileHeight = 8,\r\n  frameWidth = 16,\r\n  frameHeight = 16,\r\n  tileGridColor = '#808080',\r\n  frameGridColor = '#96629d',\r\n  paletteColors, \r\n  onClose \r\n}: Omit<ExportImageProps, 'selectedResolution'>) => {\r\n  const { t } = useTranslation();\r\n  const [exportAtCurrentZoom, setExportAtCurrentZoom] = useState(false);\r\n  const [exportWithGrids, setExportWithGrids] = useState(false);\r\n  const [exportFormat, setExportFormat] = useState<'png24' | 'png8'>('png8');\r\n  \r\n  // Check if any grids are enabled to determine if export with grids should be enabled\r\n  const hasAnyGridEnabled = showTileGrid || showFrameGrid;\r\n\r\n  const createIndexedPNG = useCallback((canvas: HTMLCanvasElement, palette: { r: number; g: number; b: number }[]): string => {\r\n    const ctx = canvas.getContext('2d');\r\n    if (!ctx) return canvas.toDataURL('image/png');\r\n    \r\n    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n    \r\n    try {\r\n      const blob = createPNG8IndexedBlob(imageData, palette);\r\n      return URL.createObjectURL(blob);\r\n    } catch (error) {\r\n      console.warn('Failed to create PNG-8 indexed format, falling back to PNG-24:', error);\r\n      return canvas.toDataURL('image/png');\r\n    }\r\n  }, []);\r\n\r\n  const downloadPNG = useCallback(() => {\r\n    if (!processedImageData && !originalImage) return;\r\n    \r\n    const canvas = document.createElement('canvas');\r\n    const ctx = canvas.getContext('2d');\r\n    if (!ctx) return;\r\n    \r\n    const scale = exportAtCurrentZoom ? currentZoom : 1;\r\n    \r\n    if (processedImageData) {\r\n      const scaledWidth = Math.round(processedImageData.width * scale);\r\n      const scaledHeight = Math.round(processedImageData.height * scale);\r\n      \r\n      canvas.width = scaledWidth;\r\n      canvas.height = scaledHeight;\r\n      \r\n      if (scale !== 1) {\r\n        // Create offscreen canvas for nearest-neighbor scaling\r\n        const offscreenCanvas = document.createElement('canvas');\r\n        offscreenCanvas.width = processedImageData.width;\r\n        offscreenCanvas.height = processedImageData.height;\r\n        const offscreenCtx = offscreenCanvas.getContext('2d');\r\n        if (offscreenCtx) {\r\n          offscreenCtx.putImageData(processedImageData, 0, 0);\r\n          \r\n          // Scale to main canvas with nearest-neighbor\r\n          ctx.imageSmoothingEnabled = false;\r\n          ctx.drawImage(offscreenCanvas, 0, 0, scaledWidth, scaledHeight);\r\n        }\r\n      } else {\r\n        ctx.putImageData(processedImageData, 0, 0);\r\n      }\r\n    } else if (originalImage) {\r\n      const scaledWidth = Math.round(originalImage.width * scale);\r\n      const scaledHeight = Math.round(originalImage.height * scale);\r\n      \r\n      canvas.width = scaledWidth;\r\n      canvas.height = scaledHeight;\r\n      \r\n      ctx.imageSmoothingEnabled = false; // Use nearest neighbor scaling\r\n      ctx.drawImage(originalImage, 0, 0, scaledWidth, scaledHeight);\r\n    }\r\n    \r\n    // Add grids if requested\r\n    if (exportWithGrids) {\r\n      // Draw tile grid\r\n      if (showTileGrid) {\r\n        ctx.strokeStyle = tileGridColor;\r\n        ctx.lineWidth = 1;\r\n        \r\n        // Draw vertical lines\r\n        for (let x = tileWidth * scale; x < canvas.width; x += tileWidth * scale) {\r\n          ctx.beginPath();\r\n          ctx.moveTo(x, 0);\r\n          ctx.lineTo(x, canvas.height);\r\n          ctx.stroke();\r\n        }\r\n        \r\n        // Draw horizontal lines\r\n        for (let y = tileHeight * scale; y < canvas.height; y += tileHeight * scale) {\r\n          ctx.beginPath();\r\n          ctx.moveTo(0, y);\r\n          ctx.lineTo(canvas.width, y);\r\n          ctx.stroke();\r\n        }\r\n      }\r\n      \r\n      // Draw frame grid\r\n      if (showFrameGrid) {\r\n        ctx.strokeStyle = frameGridColor;\r\n        ctx.lineWidth = 3;\r\n        \r\n        // Draw vertical lines\r\n        for (let x = frameWidth * scale; x < canvas.width; x += frameWidth * scale) {\r\n          ctx.beginPath();\r\n          ctx.moveTo(x, 0);\r\n          ctx.lineTo(x, canvas.height);\r\n          ctx.stroke();\r\n        }\r\n        \r\n        // Draw horizontal lines\r\n        for (let y = frameHeight * scale; y < canvas.height; y += frameHeight * scale) {\r\n          ctx.beginPath();\r\n          ctx.moveTo(0, y);\r\n          ctx.lineTo(canvas.width, y);\r\n          ctx.stroke();\r\n        }\r\n      }\r\n    }\r\n    \r\n    let dataURL: string;\r\n    // Use PNG-8 when format is selected and we have palette colors (up to 256 colors)\r\n    const shouldUseIndexed = exportFormat === 'png8' && paletteColors && paletteColors.length > 0 && paletteColors.length <= 256;\r\n    \r\n    if (shouldUseIndexed) {\r\n      // Export as PNG-8 indexed format\r\n      dataURL = createIndexedPNG(canvas, paletteColors);\r\n    } else {\r\n      // Export as PNG-24 RGB format\r\n      dataURL = canvas.toDataURL('image/png');\r\n    }\r\n    \r\n    const formatSuffix = shouldUseIndexed ? '-png8' : '-png24';\r\n    \r\n    const link = document.createElement('a');\r\n    const zoomSuffix = exportAtCurrentZoom ? `-${Math.round(currentZoom * 100)}pct` : '';\r\n    const gridSuffix = exportWithGrids ? '-with-grids' : '';\r\n  link.download = `retro-image-${selectedPalette}${zoomSuffix}${gridSuffix}${formatSuffix}.png`;\r\n    link.href = dataURL;\r\n    link.click();\r\n    \r\n    toast.success(t('imageDownloaded'));\r\n  }, [processedImageData, originalImage, selectedPalette, t, exportAtCurrentZoom, exportWithGrids, currentZoom, paletteColors, createIndexedPNG, exportFormat, tileWidth, tileHeight, frameWidth, frameHeight, tileGridColor, frameGridColor, showTileGrid, showFrameGrid]);\r\n\r\n  const getImageDataURL = useCallback(() => {\r\n    if (!processedImageData && !originalImage) return null;\r\n    \r\n    const canvas = document.createElement('canvas');\r\n    const ctx = canvas.getContext('2d');\r\n    if (!ctx) return null;\r\n    \r\n    if (processedImageData) {\r\n      canvas.width = processedImageData.width;\r\n      canvas.height = processedImageData.height;\r\n      ctx.putImageData(processedImageData, 0, 0);\r\n    } else if (originalImage) {\r\n      canvas.width = originalImage.width;\r\n      canvas.height = originalImage.height;\r\n      ctx.drawImage(originalImage, 0, 0);\r\n    }\r\n    \r\n    return canvas.toDataURL('image/png');\r\n  }, [processedImageData, originalImage]);\r\n\r\n  const saveToDropbox = useCallback(() => {\r\n    const dataURL = getImageDataURL();\r\n    if (!dataURL) return;\r\n    \r\n    // Dropbox integration would require Dropbox API\r\n    toast.info(t('dropboxComingSoon'));\r\n  }, [getImageDataURL, t]);\r\n\r\n  const saveToGoogleDrive = useCallback(() => {\r\n    const dataURL = getImageDataURL();\r\n    if (!dataURL) return;\r\n    \r\n    // Google Drive integration would require Google Drive API\r\n    toast.info(t('googleDriveComingSoon'));\r\n  }, [getImageDataURL, t]);\r\n\r\n  const copyToClipboard = useCallback(async () => {\r\n    if (!processedImageData && !originalImage) return;\r\n    \r\n    try {\r\n      const canvas = document.createElement('canvas');\r\n      const ctx = canvas.getContext('2d');\r\n      if (!ctx) return;\r\n      \r\n      const scale = exportAtCurrentZoom ? currentZoom : 1;\r\n      \r\n      if (processedImageData) {\r\n        const scaledWidth = Math.round(processedImageData.width * scale);\r\n        const scaledHeight = Math.round(processedImageData.height * scale);\r\n        \r\n        canvas.width = scaledWidth;\r\n        canvas.height = scaledHeight;\r\n        \r\n        if (scale !== 1) {\r\n          // Create offscreen canvas for nearest-neighbor scaling\r\n          const offscreenCanvas = document.createElement('canvas');\r\n          offscreenCanvas.width = processedImageData.width;\r\n          offscreenCanvas.height = processedImageData.height;\r\n          const offscreenCtx = offscreenCanvas.getContext('2d');\r\n          if (offscreenCtx) {\r\n            offscreenCtx.putImageData(processedImageData, 0, 0);\r\n            \r\n            // Scale to main canvas with nearest-neighbor\r\n            ctx.imageSmoothingEnabled = false;\r\n            ctx.drawImage(offscreenCanvas, 0, 0, scaledWidth, scaledHeight);\r\n          }\r\n        } else {\r\n          ctx.putImageData(processedImageData, 0, 0);\r\n        }\r\n      } else if (originalImage) {\r\n        const scaledWidth = Math.round(originalImage.width * scale);\r\n        const scaledHeight = Math.round(originalImage.height * scale);\r\n        \r\n        canvas.width = scaledWidth;\r\n        canvas.height = scaledHeight;\r\n        \r\n        ctx.imageSmoothingEnabled = false; // Use nearest neighbor scaling\r\n        ctx.drawImage(originalImage, 0, 0, scaledWidth, scaledHeight);\r\n      }\r\n      \r\n      // Add grids if requested\r\n      if (exportWithGrids) {\r\n        // Draw tile grid\r\n        if (showTileGrid) {\r\n          ctx.strokeStyle = tileGridColor;\r\n          ctx.lineWidth = 1;\r\n          \r\n          // Draw vertical lines\r\n          for (let x = tileWidth * scale; x < canvas.width; x += tileWidth * scale) {\r\n            ctx.beginPath();\r\n            ctx.moveTo(x, 0);\r\n            ctx.lineTo(x, canvas.height);\r\n            ctx.stroke();\r\n          }\r\n          \r\n          // Draw horizontal lines\r\n          for (let y = tileHeight * scale; y < canvas.height; y += tileHeight * scale) {\r\n            ctx.beginPath();\r\n            ctx.moveTo(0, y);\r\n            ctx.lineTo(canvas.width, y);\r\n            ctx.stroke();\r\n          }\r\n        }\r\n        \r\n        // Draw frame grid\r\n        if (showFrameGrid) {\r\n          ctx.strokeStyle = frameGridColor;\r\n          ctx.lineWidth = 3;\r\n          \r\n          // Draw vertical lines\r\n          for (let x = frameWidth * scale; x < canvas.width; x += frameWidth * scale) {\r\n            ctx.beginPath();\r\n            ctx.moveTo(x, 0);\r\n            ctx.lineTo(x, canvas.height);\r\n            ctx.stroke();\r\n          }\r\n          \r\n          // Draw horizontal lines\r\n          for (let y = frameHeight * scale; y < canvas.height; y += frameHeight * scale) {\r\n            ctx.beginPath();\r\n            ctx.moveTo(0, y);\r\n            ctx.lineTo(canvas.width, y);\r\n            ctx.stroke();\r\n          }\r\n        }\r\n      }\r\n      \r\n      // Convert canvas to blob\r\n      canvas.toBlob(async (blob) => {\r\n        if (!blob) return;\r\n        \r\n        try {\r\n          // Modern browsers with Clipboard API\r\n          if (navigator.clipboard && navigator.clipboard.write) {\r\n            const item = new ClipboardItem({ 'image/png': blob });\r\n            await navigator.clipboard.write([item]);\r\n            toast.success(t('imageCopiedToClipboard'));\r\n          } else {\r\n            // Fallback for older browsers - copy data URL to clipboard\r\n            const dataURL = canvas.toDataURL('image/png');\r\n            if (navigator.clipboard && navigator.clipboard.writeText) {\r\n              await navigator.clipboard.writeText(dataURL);\r\n              toast.success(t('imageCopiedToClipboard'));\r\n            } else {\r\n              // Final fallback - create temporary textarea (for very old browsers)\r\n              const textarea = document.createElement('textarea');\r\n              textarea.value = dataURL;\r\n              document.body.appendChild(textarea);\r\n              textarea.select();\r\n              document.execCommand('copy');\r\n              document.body.removeChild(textarea);\r\n              toast.success(t('imageCopiedToClipboard'));\r\n            }\r\n          }\r\n        } catch (error) {\r\n          console.error('Failed to copy image:', error);\r\n          toast.error(t('copyImageError'));\r\n        }\r\n      }, 'image/png');\r\n    } catch (error) {\r\n      console.error('Failed to copy image:', error);\r\n      toast.error(t('copyImageError'));\r\n    }\r\n  }, [processedImageData, originalImage, t, exportAtCurrentZoom, currentZoom, exportWithGrids, showTileGrid, showFrameGrid, tileWidth, tileHeight, frameWidth, frameHeight, tileGridColor, frameGridColor]);\r\n\r\n  const shareOnTwitter = useCallback(() => {\r\n    const dataURL = getImageDataURL();\r\n    if (!dataURL) return;\r\n    \r\n    // Create a temporary download for the image to attach\r\n    const link = document.createElement('a');\r\n  link.download = `viejunizer-${selectedPalette}.png`;\r\n    link.href = dataURL;\r\n    link.click();\r\n    \r\n    // Open Twitter with text\r\n    const text = encodeURIComponent(`Check out my retro-style image created with Viejunizer! #RetroGaming #PixelArt #Viejunizer`);\r\n    const url = `https://twitter.com/intent/tweet?text=${text}`;\r\n    window.open(url, '_blank', 'width=600,height=400');\r\n  }, [getImageDataURL, selectedPalette]);\r\n\r\n  return (\r\n  <Card className=\"absolute z-50 left-0 right-0 p-7 bg-card border-elegant-border rounded-xl\">\r\n      {onClose && (\r\n        <Button\r\n          variant=\"ghost\"\r\n          size=\"sm\"\r\n          onClick={onClose}\r\n          className=\"absolute top-2 right-2 h-8 w-8 p-0 hover:bg-destructive hover:text-destructive-foreground\"\r\n        >\r\n          <X className=\"h-4 w-4\" />\r\n        </Button>\r\n      )}\r\n      <div className=\"space-y-4\">\r\n        <div>\r\n          <h3 className=\"text-xl font-bold flex items-center\" style={{ color: '#7d1b2d' }}>\r\n            <Download className=\"mr-2 h-6 w-6\" style={{ color: '#7d1b2d' }} />\r\n            {t('exportImage')}\r\n          </h3>\r\n          <p className=\"text-sm text-muted-foreground pt-2 pb-2 text-left\">{t('exportImageDesc')}</p>\r\n        </div>\r\n        <div className=\"space-y-4\">\r\n          {/* horizontal separator above the export type/format blocks */}\r\n          <div className=\"border-t border-elegant-border my-4\" />\r\n          <div className=\"flex gap-6\">\r\n            {/* Export Types (checkboxes) on the left */}\r\n            <div className=\"flex-1\">\r\n              <label className=\"block text-m font-bold text-foreground pt-5 pb-5\">\r\n                <span className=\"flex items-center\">\r\n                  <FilePlus className=\"mr-2 h-4 w-4\" />\r\n                    {t('exportTypes')}\r\n                </span>\r\n              </label>\r\n              <div className=\"grid grid-cols-1 gap-2.5\">\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <Checkbox \r\n                    id=\"export-zoom\" \r\n                    checked={exportAtCurrentZoom}\r\n                    className=\"h-4 w-4 mt-0 mr-2 flex-shrink-0\"\r\n                    onCheckedChange={(checked) => setExportAtCurrentZoom(checked as boolean)}\r\n                  />\r\n                  <label htmlFor=\"export-zoom\" className=\"text-xs text-muted-foreground leading-tight break-words text-left\">\r\n                    {t('exportAtCurrentZoom')} ({Math.round((currentZoom ?? 1) * 100)}%)\r\n                  </label>\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <Checkbox \r\n                    id=\"export-grids\" \r\n                    checked={exportWithGrids}\r\n                     className=\"h-4 w-4 mt-0 mr-2 flex-shrink-0\"\r\n                    onCheckedChange={(checked) => setExportWithGrids(checked as boolean)}\r\n                    disabled={!hasAnyGridEnabled}\r\n                  />\r\n                  <label \r\n                    htmlFor=\"export-grids\" \r\n                    className={`text-xs text-muted-foreground leading-tight break-words text-left ${\r\n                      !hasAnyGridEnabled \r\n                        ? 'cursor-not-allowed opacity-50' \r\n                        : 'peer-disabled:cursor-not-allowed peer-disabled:opacity-70'\r\n                    }`}\r\n                  >\r\n                    {t('exportWithGrids')}\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Vertical separator */}\r\n            <div className=\"w-px bg-border\"></div>\r\n\r\n            {/* Export Format on the right */}\r\n            {paletteColors && paletteColors.length > 0 && paletteColors.length <= 256 && (\r\n            <div className=\"flex-1\">\r\n              <label className=\"block text-m font-bold text-foreground pt-5 pb-5\">\r\n                <span className=\"flex items-center\">\r\n                  <FilePlus className=\"mr-2 h-4 w-4\" />\r\n                    {t('exportFormat')}\r\n                </span>\r\n              </label>\r\n              <div className=\"grid grid-cols-1 gap-2.5\">\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <RadioGroup value={exportFormat} onValueChange={(value: 'png24' | 'png8') => setExportFormat(value)}>\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <RadioGroupItem value=\"png8\" id=\"png8\" className=\"h-3 w-3 mt-0 mr-2 flex-shrink-0\"/>\r\n                      <Label htmlFor=\"png8\" className=\"text-xs font-normal text-muted-foreground leading-tight break-words text-left\">{t('png8Indexed')} ({paletteColors.length} colors)</Label>\r\n                    </div>\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <RadioGroupItem value=\"png24\" id=\"png24\" className=\"h-3 w-3 mt-2 mr-2 flex-shrink-0\"/>\r\n                      <Label htmlFor=\"png24\" className=\"text-xs font-normal text-muted-foreground mt-3 leading-tight break-words text-left\">PNG-24 RGB (24-bit)</Label>\r\n                    </div>\r\n                  </RadioGroup>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* horizontal separator below the export type/format blocks */}\r\n          <div className=\"border-t border-elegant-border my-4\" />\r\n\r\n          {/* buttons with vertical separator between them */}\r\n          <div className=\"relative pt-2\">\r\n            <div className=\"absolute inset-y-0 left-1/2 w-px bg-border transform -translate-x-1/2\" />\r\n            <div className=\"grid grid-cols-2 gap-3\">\r\n            <Button\r\n              onClick={downloadPNG}\r\n              className=\"flex items-center justify-center gap-2 w-full rounded-lg text-xs whitespace-pre-wrap leading-tight\"\r\n              variant=\"glass\"\r\n              size=\"sm\"\r\n            >\r\n              <Download className=\"h-4 w-4\" />\r\n              {t('downloadPng')}\r\n            </Button>\r\n            <Button\r\n              onClick={copyToClipboard}\r\n              className=\"flex items-center justify-center gap-2 w-full rounded-lg text-xs whitespace-pre-wrap leading-tight\"\r\n              variant=\"glass\"\r\n              size=\"sm\"\r\n            >\r\n              <Copy className=\"h-4 w-4\" />\r\n              {t('copyToClipboard')}\r\n            </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  );\r\n};","import { useTranslation, Language } from '@/hooks/useTranslation';\r\nimport { Button } from './ui/button';\r\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from './ui/tooltip';\r\nimport { Globe, X } from 'lucide-react';\r\nimport { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Card } from '@/components/ui/card';\r\n\r\ninterface LanguageSelectorProps {\r\n  hideLabel?: boolean;\r\n  onClose?: () => void;\r\n}\r\n\r\nexport const LanguageSelector = ({ hideLabel = false, onClose }: LanguageSelectorProps) => {\r\n  const { currentLanguage, changeLanguage, languages, getLanguageName, t } = useTranslation();\r\n\r\n  const languagesSafe = Array.isArray(languages) ? languages : [];\r\n  const sortedLanguages = [...languagesSafe].sort((a, b) => \r\n    getLanguageName(a).localeCompare(getLanguageName(b))\r\n  );\r\n\r\n  if (hideLabel) {\r\n    return (\r\n      <TooltipProvider>\r\n        <Tooltip>\r\n          <TooltipTrigger asChild>\r\n            <Button\r\n              variant=\"secondary\"\r\n              size=\"sm\"\r\n              className=\"w-12 h-12 p-0 bg-blood-red hover:bg-blood-red-hover text-bone-white border-none\"\r\n            >\r\n              <Globe className=\"w-5 h-5\" />\r\n            </Button>\r\n          </TooltipTrigger>\r\n          <TooltipContent>\r\n            <p>{t('changeLanguage')}</p>\r\n          </TooltipContent>\r\n        </Tooltip>\r\n      </TooltipProvider>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Card className=\"absolute z-50 left-0 right-0 p-7 bg-card border-elegant-border rounded-xl\">\r\n      {onClose && (\r\n        <Button\r\n          variant=\"ghost\"\r\n          size=\"sm\"\r\n          onClick={onClose}\r\n          className=\"absolute top-2 right-2 h-8 w-8 p-0 hover:bg-destructive hover:text-destructive-foreground\"\r\n        >\r\n          <X className=\"h-4 w-4\" />\r\n        </Button>\r\n      )}\r\n      <div>\r\n        <h3 className=\"text-xl font-bold flex items-center\" style={{ color: '#7d1b2d' }}>\r\n          <Globe className=\"mr-2 h-6 w-6\" style={{ color: '#7d1b2d' }} />\r\n          {t('changeLanguage')}\r\n        </h3>\r\n        <p className=\"text-sm text-muted-foreground pt-2 pb-2 text-left\">\r\n          {t('changeLanguageDesc')}\r\n        </p>\r\n      </div>\r\n      <div className=\"border-t border-elegant-border my-4 pt-5\" />\r\n        <RadioGroup \r\n          value={currentLanguage} \r\n          onValueChange={(value) => changeLanguage(value as Language)}\r\n          className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 gap-x-3 gap-y-2\"\r\n        >\r\n        {sortedLanguages.map((lang) => (\r\n          <div key={lang} className=\"flex items-center space-x-1 py-0\">\r\n            <RadioGroupItem \r\n              value={lang} \r\n              id={`lang-${lang}`}\r\n              className=\"h-3 w-3 mr-2 flex-shrink-0\"\r\n            />\r\n            <Label \r\n              htmlFor={`lang-${lang}`} \r\n              className=\"text-bone-white cursor-pointer hover:text-primary text-sm leading-none whitespace-nowrap\"\r\n            >\r\n              {getLanguageName(lang)}\r\n            </Label>\r\n          </div>\r\n        ))}\r\n      </RadioGroup>\r\n    </Card>\r\n  );\r\n};","// Props type for Toolbar\r\nexport interface ToolbarProps {\r\n  isVerticalLayout: boolean;\r\n  originalImage: HTMLImageElement | null;\r\n  activeTab: string;\r\n  setActiveTab: (tab: string) => void;\r\n  resetEditor: () => void;\r\n  loadFromClipboard: () => void;\r\n  toast: any;\r\n  t: (key: string) => string;\r\n}\r\nimport { useEffect } from 'react';\r\n// Build the logo URL from Vite's BASE_URL so it resolves correctly on GitHub Pages\r\nconst logoGif = `${import.meta.env.BASE_URL}logo.gif`;\r\nimport { Button } from '@/components/ui/button';\r\nimport { Upload, Palette, Proportions, Grid3X3, Download, Globe } from 'lucide-react';\r\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from './ui/tooltip';\r\n\r\n\r\nexport const Toolbar = ({ isVerticalLayout, originalImage, activeTab, setActiveTab, resetEditor, loadFromClipboard, toast, t }: ToolbarProps) => {\r\n  useEffect(() => {\r\n    const handleKeyDown = (event: KeyboardEvent) => {\r\n      if (event.target instanceof HTMLInputElement || event.target instanceof HTMLTextAreaElement) return;\r\n      const key = event.key.toLowerCase();\r\n      if ((event.ctrlKey || event.metaKey) && key === 'v') {\r\n        event.preventDefault();\r\n        loadFromClipboard();\r\n        return;\r\n      }\r\n      if (key === 'escape') {\r\n        setActiveTab('');\r\n        return;\r\n      }\r\n      switch (key) {\r\n        case 'i':\r\n          event.preventDefault();\r\n          setActiveTab('load-image');\r\n          break;\r\n        case 'p':\r\n          event.preventDefault();\r\n          if (!originalImage) {\r\n            toast.error(t('loadImageToStart'));\r\n          } else {\r\n            setActiveTab('palette-selector');\r\n          }\r\n          break;\r\n        case 'r':\r\n          event.preventDefault();\r\n          if (!originalImage) {\r\n            toast.error(t('loadImageToStart'));\r\n          } else {\r\n            setActiveTab('resolution');\r\n          }\r\n          break;\r\n        case 'g':\r\n          event.preventDefault();\r\n          if (!originalImage) {\r\n            toast.error(t('loadImageToStart'));\r\n          } else {\r\n            setActiveTab('change-grids');\r\n          }\r\n          break;\r\n        case 'e':\r\n          event.preventDefault();\r\n          if (!originalImage) {\r\n            toast.error(t('loadImageToStart'));\r\n          } else {\r\n            setActiveTab('export-image');\r\n          }\r\n          break;\r\n        case 'l':\r\n          event.preventDefault();\r\n          setActiveTab('language');\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    };\r\n    document.addEventListener('keydown', handleKeyDown);\r\n    return () => document.removeEventListener('keydown', handleKeyDown);\r\n  }, [originalImage, t, loadFromClipboard, setActiveTab, toast]);\r\n\r\n  const getButtonVariant = (tabId: string) => {\r\n    if (tabId === 'language') return 'highlighted';\r\n    if (tabId === 'load-image') return 'highlighted';\r\n    if (!originalImage) return 'blocked';\r\n    if (originalImage) return 'highlighted';\r\n    return 'blocked';\r\n  };\r\n\r\n  const handleTabClick = (tabId: string) => {\r\n    if (!originalImage && tabId !== 'language' && tabId !== 'load-image') return;\r\n    if (originalImage && tabId === 'load-image') {\r\n      resetEditor();\r\n      return;\r\n    }\r\n    setActiveTab(tabId);\r\n    if (tabId) window.scrollTo({ top: 0, behavior: 'smooth' });\r\n  };\r\n\r\n  if (!isVerticalLayout) {\r\n    return (\r\n  // height set to 1.5x the button height (h-10 -> 2.5rem * 1.5 = 3.75rem)\r\n  // Add horizontal padding equal to gap-2 so logo and buttons sit inset from edges\r\n  <header className=\"border-b border-elegant-border bg-[#202225] w-full flex-shrink-0 m-0 px-2 py-0 h-[3.75rem] flex items-center\">\r\n        <div className=\"w-full max-w-none flex items-center justify-between m-0 p-0 h-full\">\r\n            <div className=\"flex items-center h-full m-0 p-0\">\r\n            <img src={logoGif} alt=\"Vintage Palette Studio\" className=\"h-8 w-8 m-0 p-0 block\" />\r\n          </div>\r\n          <div className=\"flex items-center gap-2 flex-shrink-0 m-0 p-0 h-full\">\r\n            <Button\r\n              variant={getButtonVariant('load-image') as import('./ui/button').ButtonProps['variant']}\r\n              onClick={() => handleTabClick('load-image')}\r\n              className=\"flex items-center justify-center h-10 w-10 p-0 focus:outline-none focus-visible:ring-0 bg-blood-red border-blood-red\"\r\n              title={t('loadImage')}\r\n            >\r\n              <Upload className=\"h-4 w-4\" />\r\n            </Button>\r\n            <Button\r\n              variant={getButtonVariant('palette-selector') as import('./ui/button').ButtonProps['variant']}\r\n              onClick={() => handleTabClick('palette-selector')}\r\n              className=\"flex items-center justify-center h-10 w-10 p-0 focus:outline-none focus-visible:ring-0 bg-blood-red border-blood-red\"\r\n              disabled={!originalImage}\r\n              title={t('changePalette')}\r\n            >\r\n              <Palette className=\"h-4 w-4\" />\r\n            </Button>\r\n            <Button\r\n              variant={getButtonVariant('resolution') as import('./ui/button').ButtonProps['variant']}\r\n              onClick={() => handleTabClick('resolution')}\r\n              className=\"flex items-center justify-center h-10 w-10 p-0 focus:outline-none focus-visible:ring-0 bg-blood-red border-blood-red\"\r\n              disabled={!originalImage}\r\n              title={t('changeResolution')}\r\n            >\r\n              <Proportions className=\"h-4 w-4\" />\r\n            </Button>\r\n            <Button\r\n              variant={getButtonVariant('change-grids') as import('./ui/button').ButtonProps['variant']}\r\n              onClick={() => handleTabClick('change-grids')}\r\n              className=\"flex items-center justify-center h-10 w-10 p-0 focus:outline-none focus-visible:ring-0 bg-blood-red border-blood-red\"\r\n              disabled={!originalImage}\r\n              title={t('changeGrids')}\r\n            >\r\n              <Grid3X3 className=\"h-4 w-4\" />\r\n            </Button>\r\n            <Button\r\n              variant={getButtonVariant('export-image') as import('./ui/button').ButtonProps['variant']}\r\n              onClick={() => handleTabClick('export-image')}\r\n              className=\"flex items-center justify-center h-10 w-10 p-0 focus:outline-none focus-visible:ring-0 bg-blood-red border-blood-red\"\r\n              disabled={!originalImage}\r\n              title={t('exportImage')}\r\n            >\r\n              <Download className=\"h-4 w-4\" />\r\n            </Button>\r\n            <Button\r\n              variant={getButtonVariant('language') as import('./ui/button').ButtonProps['variant']}\r\n              onClick={() => handleTabClick('language')}\r\n              className=\"flex items-center justify-center h-10 w-10 p-0 focus:outline-none focus-visible:ring-0 bg-blood-red border-blood-red\"\r\n              title={t('changeLanguage')}\r\n            >\r\n              <Globe className=\"h-4 w-4\" />\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </header>\r\n    );\r\n  }\r\n  return (\r\n    <aside className=\"h-full w-12 flex flex-col bg-[#202225] border-r border-elegant-border z-50\">\r\n      <div className=\"flex flex-col items-center py-1 space-y-1 h-full\">\r\n          <div className=\"flex flex-col items-center gap-1 flex-shrink-0 mb-3 pt-2\">\r\n          <img src={logoGif} alt=\"Vintage Palette Studio\" className=\"h-8 w-8\" />\r\n        </div>\r\n        <div className=\"flex flex-col items-center gap-1 flex-shrink-0\">\r\n          <Button\r\n            variant={getButtonVariant('load-image') as import('./ui/button').ButtonProps['variant']}\r\n            onClick={() => handleTabClick('load-image')}\r\n            className=\"flex items-center justify-center h-8 w-8 p-0 focus:outline-none focus-visible:ring-0 bg-blood-red border-blood-red\"\r\n            title={t('loadImage')}\r\n          >\r\n            <Upload className=\"h-4 w-4\" />\r\n          </Button>\r\n          <Button\r\n            variant={getButtonVariant('palette-selector') as import('./ui/button').ButtonProps['variant']}\r\n            onClick={() => handleTabClick('palette-selector')}\r\n            className=\"flex items-center justify-center h-8 w-8 p-0 focus:outline-none focus-visible:ring-0 bg-blood-red border-blood-red\"\r\n            disabled={!originalImage}\r\n            title={t('changePalette')}\r\n          >\r\n            <Palette className=\"h-4 w-4\" />\r\n          </Button>\r\n          <Button\r\n            variant={getButtonVariant('resolution') as import('./ui/button').ButtonProps['variant']}\r\n            onClick={() => handleTabClick('resolution')}\r\n            className=\"flex items-center justify-center h-8 w-8 p-0 focus:outline-none focus-visible:ring-0 bg-blood-red border-blood-red\"\r\n            disabled={!originalImage}\r\n            title={t('changeResolution')}\r\n          >\r\n            <Proportions className=\"h-4 w-4\" />\r\n          </Button>\r\n          <Button\r\n            variant={getButtonVariant('change-grids') as import('./ui/button').ButtonProps['variant']}\r\n            onClick={() => handleTabClick('change-grids')}\r\n            className=\"flex items-center justify-center h-8 w-8 p-0 focus:outline-none focus-visible:ring-0 bg-blood-red border-blood-red\"\r\n            disabled={!originalImage}\r\n            title={t('changeGrids')}\r\n          >\r\n            <Grid3X3 className=\"h-4 w-4\" />\r\n          </Button>\r\n          <Button\r\n            variant={getButtonVariant('export-image') as import('./ui/button').ButtonProps['variant']}\r\n            onClick={() => handleTabClick('export-image')}\r\n            className=\"flex items-center justify-center h-8 w-8 p-0 focus:outline-none focus-visible:ring-0 bg-blood-red border-blood-red\"\r\n            disabled={!originalImage}\r\n            title={t('exportImage')}\r\n          >\r\n            <Download className=\"h-4 w-4\" />\r\n          </Button>\r\n          <Button\r\n            variant={getButtonVariant('language') as import('./ui/button').ButtonProps['variant']}\r\n            onClick={() => handleTabClick('language')}\r\n            className=\"flex items-center justify-center h-8 w-8 p-0 focus:outline-none focus-visible:ring-0 bg-blood-red border-blood-red\"\r\n            title={t('changeLanguage')}\r\n          >\r\n            <Globe className=\"h-4 w-4\" />\r\n          </Button>\r\n        </div>\r\n        <div className=\"mt-auto pb-4 flex-shrink-0\"></div>\r\n      </div>\r\n    </aside>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\ninterface FooterProps {\r\n  isVerticalLayout: boolean;\r\n}\r\n\r\n// Get version from Vite environment variable (set at build time)\r\nconst getVersion = () => {\r\n  return import.meta.env.VITE_APP_VERSION || 'dev';\r\n};\r\n\r\nexport const Footer: React.FC<FooterProps> = () => (\r\n  <footer className=\"border-t border-elegant-border bg-card flex-shrink-0 w-full\">\r\n    <div className=\"w-full px-[5px] py-[5px]\">\r\n      <p className=\"text-sm text-muted-foreground text-center\">©2025 Anarkade - {getVersion()}</p>\r\n    </div>\r\n  </footer>\r\n);\r\n","// Custom hook for optimized image processing with Web Workers\r\nimport { useState, useCallback, useRef, useEffect } from 'react';\r\nimport type { ProcessingMessage, ProcessingResponse } from '../workers/imageProcessingWorker';\r\nimport type { Color } from '../lib/colorQuantization';\r\n\r\ninterface ProcessingState {\r\n  isProcessing: boolean;\r\n  progress: number;\r\n  error: string | null;\r\n}\r\n\r\ninterface ProcessingOptions {\r\n  operation: string;\r\n  options?: Record<string, unknown>;\r\n  onProgress?: (progress: number) => void;\r\n}\r\n\r\nexport const useImageProcessor = () => {\r\n  const [state, setState] = useState<ProcessingState>({\r\n    isProcessing: false,\r\n    progress: 0,\r\n    error: null\r\n  });\r\n  \r\n  const workerRef = useRef<Worker | null>(null);\r\n  const requestIdRef = useRef(0);\r\n  const pendingRequests = useRef(new Map<string, {\r\n    resolve: (value: unknown) => void;\r\n    reject: (error: Error) => void;\r\n    onProgress?: (progress: number) => void;\r\n  }>());\r\n\r\n  // Initialize worker\r\n  useEffect(() => {\r\n    // Create worker from URL (Vite will handle the worker import)\r\n    workerRef.current = new Worker(\r\n      new URL('../workers/imageProcessingWorker.ts', import.meta.url),\r\n      { type: 'module' }\r\n    );\r\n\r\n    workerRef.current.onmessage = (event: MessageEvent<ProcessingResponse>) => {\r\n      const { type, data, id, progress } = event.data;\r\n      const payload: unknown = data;\r\n      const request = pendingRequests.current.get(id);\r\n\r\n      if (!request) return;\r\n\r\n      switch (type) {\r\n        case 'PROCESSING_COMPLETE':\r\n          request.resolve(payload);\r\n          pendingRequests.current.delete(id);\r\n          setState(prev => ({ ...prev, isProcessing: false, progress: 100 }));\r\n          break;\r\n\r\n        case 'PROCESSING_ERROR':\r\n          {\r\n            const maybeMsg = (payload as Record<string, unknown>)['message'];\r\n            const msg = typeof maybeMsg === 'string' ? maybeMsg : String(payload);\r\n            request.reject(new Error(msg));\r\n            pendingRequests.current.delete(id);\r\n            setState(prev => ({ ...prev, isProcessing: false, error: msg }));\r\n          }\r\n          break;\r\n\r\n        case 'PROCESSING_PROGRESS':\r\n          if (progress !== undefined) {\r\n            setState(prev => ({ ...prev, progress }));\r\n            request.onProgress?.(progress);\r\n          }\r\n          break;\r\n      }\r\n    };\r\n\r\n    workerRef.current.onerror = (error) => {\r\n      console.error('Image processing worker error:', error);\r\n      setState(prev => ({ ...prev, error: 'Worker error occurred', isProcessing: false }));\r\n    };\r\n\r\n    // Snapshot refs used in cleanup to avoid stale-ref warnings from ESLint\r\n    const workerSnapshot = workerRef.current;\r\n    const pendingSnapshot = pendingRequests.current;\r\n\r\n    return () => {\r\n      if (workerSnapshot) {\r\n        workerSnapshot.terminate();\r\n      }\r\n      pendingSnapshot.clear();\r\n    };\r\n  }, []);\r\n\r\n  // Process image data with worker\r\n  const processImage = useCallback((\r\n    imageData: ImageData,\r\n    options: ProcessingOptions\r\n  ): Promise<unknown> => {\r\n    return new Promise((resolve, reject) => {\r\n      if (!workerRef.current) {\r\n        reject(new Error('Worker not initialized'));\r\n        return;\r\n      }\r\n\r\n      const id = `req_${++requestIdRef.current}`;\r\n      \r\n      pendingRequests.current.set(id, {\r\n        resolve,\r\n        reject,\r\n        onProgress: options.onProgress\r\n      });\r\n\r\n      setState(prev => ({ \r\n        ...prev, \r\n        isProcessing: true, \r\n        progress: 0, \r\n        error: null \r\n      }));\r\n\r\n      const message: ProcessingMessage = {\r\n        type: 'PROCESS_IMAGE',\r\n        data: {\r\n          imageData,\r\n          operation: options.operation,\r\n          options: options.options\r\n        } as Record<string, unknown>,\r\n        id\r\n      };\r\n\r\n      workerRef.current.postMessage(message);\r\n    });\r\n  }, []);\r\n\r\n  // Process Mega Drive image\r\n  const processMegaDriveImage = useCallback((\r\n    imageData: ImageData,\r\n    originalPalette?: Color[],\r\n    onProgress?: (progress: number) => void\r\n  ): Promise<{ imageData: ImageData; palette: Color[] }> => {\r\n    return new Promise((resolve, reject) => {\r\n      if (!workerRef.current) {\r\n        reject(new Error('Worker not initialized'));\r\n        return;\r\n      }\r\n\r\n      const id = `megadrive_${++requestIdRef.current}`;\r\n      \r\n      pendingRequests.current.set(id, {\r\n        resolve,\r\n        reject,\r\n        onProgress\r\n      });\r\n\r\n      setState(prev => ({ \r\n        ...prev, \r\n        isProcessing: true, \r\n        progress: 0, \r\n        error: null \r\n      }));\r\n\r\n      const message: ProcessingMessage = {\r\n        type: 'MEGA_DRIVE_PROCESS',\r\n        data: {\r\n          imageData,\r\n          originalPalette\r\n        } as Record<string, unknown>,\r\n        id\r\n      };\r\n\r\n      workerRef.current.postMessage(message);\r\n    });\r\n  }, []);\r\n\r\n  // Extract colors from image\r\n  const extractColors = useCallback((\r\n    imageData: ImageData,\r\n    onProgress?: (progress: number) => void\r\n  ): Promise<Color[]> => {\r\n    return processImage(imageData, {\r\n      operation: 'EXTRACT_COLORS',\r\n      onProgress\r\n    }) as Promise<Color[]>;\r\n  }, [processImage]);\r\n\r\n  // Quantize colors\r\n  const quantizeColors = useCallback((\r\n    colors: Color[],\r\n    targetCount: number,\r\n    onProgress?: (progress: number) => void\r\n  ): Promise<Color[]> => {\r\n    return new Promise((resolve, reject) => {\r\n      if (!workerRef.current) {\r\n        reject(new Error('Worker not initialized'));\r\n        return;\r\n      }\r\n\r\n      const id = `quantize_${++requestIdRef.current}`;\r\n      \r\n      pendingRequests.current.set(id, {\r\n        resolve,\r\n        reject,\r\n        onProgress\r\n      });\r\n\r\n      setState(prev => ({ \r\n        ...prev, \r\n        isProcessing: true, \r\n        progress: 0, \r\n        error: null \r\n      }));\r\n\r\n      const message: ProcessingMessage = {\r\n        type: 'QUANTIZE_COLORS',\r\n        data: {\r\n          colors,\r\n          targetCount\r\n        } as Record<string, unknown>,\r\n        id\r\n      };\r\n\r\n      workerRef.current.postMessage(message);\r\n    });\r\n  }, []);\r\n\r\n  // Apply palette to image\r\n  const applyPalette = useCallback((\r\n    imageData: ImageData,\r\n    palette: Color[],\r\n    onProgress?: (progress: number) => void\r\n  ): Promise<ImageData> => {\r\n    return processImage(imageData, {\r\n      operation: 'APPLY_PALETTE',\r\n      options: { palette },\r\n      onProgress\r\n    }) as Promise<ImageData>;\r\n  }, [processImage]);\r\n\r\n  // Cancel current processing\r\n  const cancelProcessing = useCallback(() => {\r\n    if (workerRef.current) {\r\n      workerRef.current.terminate();\r\n      \r\n      // Recreate worker\r\n      workerRef.current = new Worker(\r\n        new URL('../workers/imageProcessingWorker.ts', import.meta.url),\r\n        { type: 'module' }\r\n      );\r\n    }\r\n    \r\n    pendingRequests.current.clear();\r\n    setState({\r\n      isProcessing: false,\r\n      progress: 0,\r\n      error: null\r\n    });\r\n  }, []);\r\n\r\n  return {\r\n    ...state,\r\n    processImage,\r\n    processMegaDriveImage,\r\n    extractColors,\r\n    quantizeColors,\r\n    applyPalette,\r\n    cancelProcessing\r\n  };\r\n};","// Custom hook for monitoring and optimizing performance\r\nimport { useState, useCallback, useRef, useEffect } from 'react';\r\n\r\ninterface PerformanceMetrics {\r\n  processingTime: number;\r\n  memoryUsage: number;\r\n  imageDimensions: { width: number; height: number };\r\n  operationType: string;\r\n  timestamp: number;\r\n}\r\n\r\ninterface PerformanceState {\r\n  metrics: PerformanceMetrics[];\r\n  currentOperation: string | null;\r\n  estimatedTime: number;\r\n  memoryWarning: boolean;\r\n  shouldOptimize: boolean;\r\n}\r\n\r\nexport const usePerformanceMonitor = () => {\r\n  const [state, setState] = useState<PerformanceState>({\r\n    metrics: [],\r\n    currentOperation: null,\r\n    estimatedTime: 0,\r\n    memoryWarning: false,\r\n    shouldOptimize: false\r\n  });\r\n\r\n  const startTimeRef = useRef<number>(0);\r\n  const maxMetrics = 50; // Keep only recent metrics\r\n\r\n  // Monitor memory usage\r\n  const checkMemoryUsage = useCallback(() => {\r\n    type PerfMemory = { usedJSHeapSize: number; totalJSHeapSize: number };\r\n    if ('memory' in performance) {\r\n      const memory = (performance as unknown as { memory?: PerfMemory }).memory;\r\n      if (!memory) return 0;\r\n      const usedMemory = memory.usedJSHeapSize / (1024 * 1024); // MB\r\n      const totalMemory = memory.totalJSHeapSize / (1024 * 1024); // MB\r\n      \r\n      const memoryRatio = usedMemory / totalMemory;\r\n      \r\n      setState(prev => ({\r\n        ...prev,\r\n        memoryWarning: memoryRatio > 0.8, // Warn at 80% memory usage\r\n        shouldOptimize: memoryRatio > 0.6  // Suggest optimization at 60%\r\n      }));\r\n      \r\n      return usedMemory;\r\n    }\r\n    return 0;\r\n  }, []);\r\n\r\n  // Start performance measurement\r\n  const startMeasurement = useCallback((operationType: string) => {\r\n    startTimeRef.current = performance.now();\r\n    setState(prev => ({\r\n      ...prev,\r\n      currentOperation: operationType\r\n    }));\r\n  }, []);\r\n\r\n  // End performance measurement and record metrics\r\n  const endMeasurement = useCallback((\r\n    imageDimensions: { width: number; height: number }\r\n  ) => {\r\n    if (startTimeRef.current === 0) return;\r\n\r\n    const processingTime = performance.now() - startTimeRef.current;\r\n    const memoryUsage = checkMemoryUsage();\r\n\r\n    const newMetric: PerformanceMetrics = {\r\n      processingTime,\r\n      memoryUsage,\r\n      imageDimensions,\r\n      operationType: state.currentOperation || 'unknown',\r\n      timestamp: Date.now()\r\n    };\r\n\r\n    setState(prev => {\r\n      const updatedMetrics = [...prev.metrics, newMetric];\r\n      \r\n      // Keep only recent metrics\r\n      if (updatedMetrics.length > maxMetrics) {\r\n        updatedMetrics.splice(0, updatedMetrics.length - maxMetrics);\r\n      }\r\n\r\n      return {\r\n        ...prev,\r\n        metrics: updatedMetrics,\r\n        currentOperation: null\r\n      };\r\n    });\r\n\r\n    startTimeRef.current = 0;\r\n  }, [state.currentOperation, checkMemoryUsage]);\r\n\r\n  // Estimate processing time based on historical data\r\n  const estimateProcessingTime = useCallback((\r\n    operationType: string,\r\n    imageDimensions: { width: number; height: number }\r\n  ): number => {\r\n    const relevantMetrics = state.metrics.filter(\r\n      m => m.operationType === operationType\r\n    );\r\n\r\n    if (relevantMetrics.length === 0) {\r\n      // Default estimates based on image size\r\n      const pixelCount = imageDimensions.width * imageDimensions.height;\r\n      \r\n      if (pixelCount > 4000000) return 3000; // 3 seconds for very large images\r\n      if (pixelCount > 1000000) return 1500; // 1.5 seconds for large images\r\n      if (pixelCount > 250000) return 500;   // 0.5 seconds for medium images\r\n      return 200; // 0.2 seconds for small images\r\n    }\r\n\r\n    // Calculate weighted average based on image size similarity\r\n    const targetPixels = imageDimensions.width * imageDimensions.height;\r\n    \r\n    let totalWeight = 0;\r\n    let weightedTime = 0;\r\n\r\n    relevantMetrics.forEach(metric => {\r\n      const metricPixels = metric.imageDimensions.width * metric.imageDimensions.height;\r\n      const sizeRatio = Math.min(targetPixels, metricPixels) / Math.max(targetPixels, metricPixels);\r\n      const weight = sizeRatio; // Higher weight for similar-sized images\r\n      \r\n      totalWeight += weight;\r\n      weightedTime += metric.processingTime * weight;\r\n    });\r\n\r\n    const estimate = totalWeight > 0 ? weightedTime / totalWeight : 1000;\r\n    \r\n    setState(prev => ({\r\n      ...prev,\r\n      estimatedTime: estimate\r\n    }));\r\n\r\n    return estimate;\r\n  }, [state.metrics]);\r\n\r\n  // Get optimization recommendations\r\n  const getOptimizationRecommendations = useCallback((\r\n    imageDimensions: { width: number; height: number }\r\n  ) => {\r\n    const pixelCount = imageDimensions.width * imageDimensions.height;\r\n    const recommendations: string[] = [];\r\n\r\n    // Size-based recommendations\r\n    if (pixelCount > 4000000) {\r\n      recommendations.push('Consider resizing image before processing');\r\n      recommendations.push('Use Web Workers for heavy operations');\r\n      recommendations.push('Enable progressive processing');\r\n    }\r\n\r\n    if (pixelCount > 1000000) {\r\n      recommendations.push('Use optimized sampling for color analysis');\r\n      recommendations.push('Consider chunked processing');\r\n    }\r\n\r\n    // Memory-based recommendations\r\n    if (state.memoryWarning) {\r\n      recommendations.push('Clear unused canvases and ImageData');\r\n      recommendations.push('Process image in smaller chunks');\r\n      recommendations.push('Consider reducing image quality temporarily');\r\n    }\r\n\r\n    // Performance history-based recommendations\r\n    const recentMetrics = state.metrics.slice(-10);\r\n    const avgProcessingTime = recentMetrics.reduce((sum, m) => sum + m.processingTime, 0) / recentMetrics.length;\r\n\r\n    if (avgProcessingTime > 2000) {\r\n      recommendations.push('Enable faster processing modes');\r\n      recommendations.push('Use lower quality settings for preview');\r\n      recommendations.push('Consider using OffscreenCanvas');\r\n    }\r\n\r\n    return recommendations;\r\n  }, [state.memoryWarning, state.metrics]);\r\n\r\n  // Determine if processing should be optimized\r\n  const shouldOptimizeProcessing = useCallback((\r\n    imageDimensions: { width: number; height: number }\r\n  ): boolean => {\r\n    const pixelCount = imageDimensions.width * imageDimensions.height;\r\n    const estimatedTime = estimateProcessingTime('default', imageDimensions);\r\n\r\n    return (\r\n      pixelCount > 2000000 || // Large image\r\n      estimatedTime > 1500 || // Estimated long processing time\r\n      state.memoryWarning ||   // Memory pressure\r\n      state.shouldOptimize     // General optimization flag\r\n    );\r\n  }, [estimateProcessingTime, state.memoryWarning, state.shouldOptimize]);\r\n\r\n  // Clean up old metrics periodically\r\n  useEffect(() => {\r\n    const cleanup = setInterval(() => {\r\n      const cutoffTime = Date.now() - (60 * 60 * 1000); // 1 hour ago\r\n      \r\n      setState(prev => ({\r\n        ...prev,\r\n        metrics: prev.metrics.filter(m => m.timestamp > cutoffTime)\r\n      }));\r\n    }, 5 * 60 * 1000); // Clean up every 5 minutes\r\n\r\n    return () => clearInterval(cleanup);\r\n  }, []);\r\n\r\n  // Monitor memory usage periodically\r\n  useEffect(() => {\r\n    const monitor = setInterval(checkMemoryUsage, 10000); // Check every 10 seconds\r\n    return () => clearInterval(monitor);\r\n  }, [checkMemoryUsage]);\r\n\r\n  return {\r\n    ...state,\r\n    startMeasurement,\r\n    endMeasurement,\r\n    estimateProcessingTime,\r\n    getOptimizationRecommendations,\r\n    shouldOptimizeProcessing,\r\n    checkMemoryUsage\r\n  };\r\n};\r\n","// Canvas pooling system for memory optimization\r\n// Reuses canvas elements to prevent constant allocation/deallocation\r\n\r\ninterface CanvasPoolEntry {\r\n  canvas: HTMLCanvasElement;\r\n  ctx: CanvasRenderingContext2D;\r\n  inUse: boolean;\r\n  lastUsed: number;\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nclass CanvasPool {\r\n  private pool: CanvasPoolEntry[] = [];\r\n  private maxPoolSize = 10;\r\n  private maxIdleTime = 60000; // 1 minute\r\n  private cleanupInterval: number | null = null;\r\n\r\n  constructor() {\r\n    this.startCleanup();\r\n  }\r\n\r\n  // Get a canvas from the pool or create a new one\r\n  getCanvas(width: number, height: number): { canvas: HTMLCanvasElement; ctx: CanvasRenderingContext2D } {\r\n    // Try to find a suitable canvas in the pool\r\n    const suitable = this.pool.find(entry => \r\n      !entry.inUse && \r\n      entry.width >= width && \r\n      entry.height >= height &&\r\n      entry.width <= width * 1.5 && // Don't use oversized canvases\r\n      entry.height <= height * 1.5\r\n    );\r\n\r\n    if (suitable) {\r\n      suitable.inUse = true;\r\n      suitable.lastUsed = Date.now();\r\n      \r\n      // Resize if needed\r\n      if (suitable.width !== width || suitable.height !== height) {\r\n        suitable.canvas.width = width;\r\n        suitable.canvas.height = height;\r\n        suitable.width = width;\r\n        suitable.height = height;\r\n      }\r\n      \r\n      // Clear the canvas\r\n      suitable.ctx.clearRect(0, 0, width, height);\r\n      \r\n      return {\r\n        canvas: suitable.canvas,\r\n        ctx: suitable.ctx\r\n      };\r\n    }\r\n\r\n    // Create new canvas if pool is not full\r\n    if (this.pool.length < this.maxPoolSize) {\r\n      const canvas = document.createElement('canvas');\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n      \r\n      const ctx = canvas.getContext('2d');\r\n      if (!ctx) {\r\n        throw new Error('Failed to get 2D context');\r\n      }\r\n\r\n      const entry: CanvasPoolEntry = {\r\n        canvas,\r\n        ctx,\r\n        inUse: true,\r\n        lastUsed: Date.now(),\r\n        width,\r\n        height\r\n      };\r\n\r\n      this.pool.push(entry);\r\n      return { canvas, ctx };\r\n    }\r\n\r\n    // Pool is full, create temporary canvas (not pooled)\r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n    \r\n    const ctx = canvas.getContext('2d');\r\n    if (!ctx) {\r\n      throw new Error('Failed to get 2D context');\r\n    }\r\n\r\n    return { canvas, ctx };\r\n  }\r\n\r\n  // Return a canvas to the pool\r\n  returnCanvas(canvas: HTMLCanvasElement): void {\r\n    const entry = this.pool.find(e => e.canvas === canvas);\r\n    if (entry) {\r\n      entry.inUse = false;\r\n      entry.lastUsed = Date.now();\r\n      \r\n      // Clear the canvas for next use\r\n      entry.ctx.clearRect(0, 0, entry.width, entry.height);\r\n    }\r\n    // If not in pool, it was a temporary canvas - just let it be garbage collected\r\n  }\r\n\r\n  // Get canvas usage statistics\r\n  getStats(): { total: number; inUse: number; available: number } {\r\n    const inUse = this.pool.filter(e => e.inUse).length;\r\n    return {\r\n      total: this.pool.length,\r\n      inUse,\r\n      available: this.pool.length - inUse\r\n    };\r\n  }\r\n\r\n  // Force cleanup of idle canvases\r\n  cleanup(): void {\r\n    const now = Date.now();\r\n    const before = this.pool.length;\r\n    \r\n    this.pool = this.pool.filter(entry => {\r\n      if (entry.inUse) return true;\r\n      \r\n      const idleTime = now - entry.lastUsed;\r\n      return idleTime < this.maxIdleTime;\r\n    });\r\n\r\n    const removed = before - this.pool.length;\r\n    if (removed > 0) {\r\n      console.log(`Canvas pool cleanup: removed ${removed} idle canvases`);\r\n    }\r\n  }\r\n\r\n  // Start automatic cleanup\r\n  private startCleanup(): void {\r\n    if (typeof window !== 'undefined') {\r\n      this.cleanupInterval = window.setInterval(() => {\r\n        this.cleanup();\r\n      }, 30000); // Cleanup every 30 seconds\r\n    }\r\n  }\r\n\r\n  // Stop automatic cleanup\r\n  stopCleanup(): void {\r\n    if (this.cleanupInterval) {\r\n      clearInterval(this.cleanupInterval);\r\n      this.cleanupInterval = null;\r\n    }\r\n  }\r\n\r\n  // Clear all canvases (for testing or reset)\r\n  clear(): void {\r\n    this.pool.length = 0;\r\n  }\r\n\r\n  // Destroy the pool\r\n  destroy(): void {\r\n    this.stopCleanup();\r\n    this.clear();\r\n  }\r\n}\r\n\r\n// Global canvas pool instance\r\nexport const canvasPool = new CanvasPool();\r\n\r\n// Utility functions for easy canvas management\r\nexport const getPooledCanvas = (width: number, height: number) => {\r\n  return canvasPool.getCanvas(width, height);\r\n};\r\n\r\nexport const returnPooledCanvas = (canvas: HTMLCanvasElement) => {\r\n  canvasPool.returnCanvas(canvas);\r\n};\r\n\r\n// Hook for React components\r\nexport const useCanvasPool = () => {\r\n  return {\r\n    getCanvas: getPooledCanvas,\r\n    returnCanvas: returnPooledCanvas,\r\n    getStats: () => canvasPool.getStats(),\r\n    cleanup: () => canvasPool.cleanup()\r\n  };\r\n};","// Smart caching system for processed images and palettes\r\n// Uses LRU eviction and memory-aware cache management\r\n\r\ninterface CacheEntry<T> {\r\n  key: string;\r\n  data: T;\r\n  timestamp: number;\r\n  accessCount: number;\r\n  lastAccessed: number;\r\n  size: number; // Estimated size in bytes\r\n}\r\n\r\ninterface CacheStats {\r\n  entries: number;\r\n  totalSize: number;\r\n  hitRate: number;\r\n  maxSize: number;\r\n}\r\n\r\nclass LRUCache<T> {\r\n  private cache = new Map<string, CacheEntry<T>>();\r\n  private maxSize: number;\r\n  private maxEntries: number;\r\n  private totalSize = 0;\r\n  private hits = 0;\r\n  private misses = 0;\r\n\r\n  constructor(maxSize = 50 * 1024 * 1024, maxEntries = 100) { // 50MB default\r\n    this.maxSize = maxSize;\r\n    this.maxEntries = maxEntries;\r\n  }\r\n\r\n  // Generate cache key from parameters\r\n  private generateKey(params: Record<string, unknown>): string {\r\n    const sorted = Object.keys(params).sort().reduce((result: Record<string, unknown>, key) => {\r\n      result[key] = params[key];\r\n      return result;\r\n    }, {});\r\n    \r\n    return btoa(JSON.stringify(sorted));\r\n  }\r\n\r\n  // Estimate size of data\r\n  private estimateSize(data: T): number {\r\n    if (data instanceof ImageData) {\r\n      return data.width * data.height * 4; // RGBA pixels\r\n    } else if (Array.isArray(data)) {\r\n      return data.length * 24; // Approximate size of color objects\r\n    } else if (typeof data === 'string') {\r\n      return data.length * 2; // UTF-16 characters\r\n    } else if (data && typeof data === 'object') {\r\n      return JSON.stringify(data).length * 2;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  // Set cache entry\r\n  set(key: string, data: T): void {\r\n    const size = this.estimateSize(data);\r\n    const now = Date.now();\r\n\r\n    // Remove existing entry if it exists\r\n    if (this.cache.has(key)) {\r\n      const existing = this.cache.get(key)!;\r\n      this.totalSize -= existing.size;\r\n    }\r\n\r\n    // Create new entry\r\n    const entry: CacheEntry<T> = {\r\n      key,\r\n      data,\r\n      timestamp: now,\r\n      accessCount: 1,\r\n      lastAccessed: now,\r\n      size\r\n    };\r\n\r\n    this.cache.set(key, entry);\r\n    this.totalSize += size;\r\n\r\n    // Evict if necessary\r\n    this.evictIfNeeded();\r\n  }\r\n\r\n  // Get cache entry\r\n  get(key: string): T | null {\r\n    const entry = this.cache.get(key);\r\n    \r\n    if (entry) {\r\n      entry.accessCount++;\r\n      entry.lastAccessed = Date.now();\r\n      this.hits++;\r\n      return entry.data;\r\n    }\r\n    \r\n    this.misses++;\r\n    return null;\r\n  }\r\n\r\n  // Set with parameter-based key\r\n  setByParams(params: Record<string, unknown>, data: T): void {\r\n    const key = this.generateKey(params);\r\n    this.set(key, data);\r\n  }\r\n\r\n  // Get with parameter-based key\r\n  getByParams(params: Record<string, unknown>): T | null {\r\n    const key = this.generateKey(params);\r\n    return this.get(key);\r\n  }\r\n\r\n  // Check if key exists\r\n  has(key: string): boolean {\r\n    return this.cache.has(key);\r\n  }\r\n\r\n  // Check if parameters exist\r\n  hasByParams(params: Record<string, unknown>): boolean {\r\n    const key = this.generateKey(params);\r\n    return this.has(key);\r\n  }\r\n\r\n  // Remove entry\r\n  delete(key: string): boolean {\r\n    const entry = this.cache.get(key);\r\n    if (entry) {\r\n      this.totalSize -= entry.size;\r\n      return this.cache.delete(key);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  // Evict entries if cache is too large\r\n  private evictIfNeeded(): void {\r\n    // Evict by size\r\n    while (this.totalSize > this.maxSize && this.cache.size > 0) {\r\n      this.evictLRU();\r\n    }\r\n\r\n    // Evict by count\r\n    while (this.cache.size > this.maxEntries) {\r\n      this.evictLRU();\r\n    }\r\n  }\r\n\r\n  // Evict least recently used entry\r\n  private evictLRU(): void {\r\n    let lruKey = '';\r\n    let lruTime = Date.now();\r\n\r\n    for (const [key, entry] of this.cache) {\r\n      if (entry.lastAccessed < lruTime) {\r\n        lruTime = entry.lastAccessed;\r\n        lruKey = key;\r\n      }\r\n    }\r\n\r\n    if (lruKey) {\r\n      this.delete(lruKey);\r\n    }\r\n  }\r\n\r\n  // Get cache statistics\r\n  getStats(): CacheStats {\r\n    const totalRequests = this.hits + this.misses;\r\n    return {\r\n      entries: this.cache.size,\r\n      totalSize: this.totalSize,\r\n      hitRate: totalRequests > 0 ? this.hits / totalRequests : 0,\r\n      maxSize: this.maxSize\r\n    };\r\n  }\r\n\r\n  // Clear all entries\r\n  clear(): void {\r\n    this.cache.clear();\r\n    this.totalSize = 0;\r\n    this.hits = 0;\r\n    this.misses = 0;\r\n  }\r\n\r\n  // Get all keys (for debugging)\r\n  keys(): string[] {\r\n    return Array.from(this.cache.keys());\r\n  }\r\n}\r\n\r\n// Specialized cache for image processing results\r\nimport type { Color } from '@/lib/colorQuantization';\r\n\r\nclass ImageProcessingCache extends LRUCache<unknown> {\r\n  constructor() {\r\n    super(100 * 1024 * 1024, 50); // 100MB, 50 entries max\r\n  }\r\n\r\n  // Cache processed image with its settings\r\n  cacheProcessedImage(\r\n    originalImageHash: string,\r\n    palette: string,\r\n    resolution: string,\r\n    scaling: string,\r\n    imageData: ImageData,\r\n    paletteColors: Color[]\r\n  ): void {\r\n    const params = {\r\n      image: originalImageHash,\r\n      palette,\r\n      resolution,\r\n      scaling\r\n    };\r\n\r\n    this.setByParams(params, {\r\n      imageData,\r\n      paletteColors,\r\n      timestamp: Date.now()\r\n    });\r\n  }\r\n\r\n  // Get cached processed image\r\n  getCachedProcessedImage(\r\n    originalImageHash: string,\r\n    palette: string,\r\n    resolution: string,\r\n    scaling: string\r\n  ): { imageData: ImageData; paletteColors: Color[] } | null {\r\n    const params = {\r\n      image: originalImageHash,\r\n      palette,\r\n      resolution,\r\n      scaling\r\n    };\r\n    return this.getByParams(params) as unknown as { imageData: ImageData; paletteColors: Color[] } | null;\r\n  }\r\n\r\n  // Cache color analysis results\r\n  cacheColorAnalysis(imageHash: string, colors: Color[], format: string): void {\r\n    this.setByParams({ image: imageHash, type: 'colors' }, {\r\n      colors,\r\n      format,\r\n      timestamp: Date.now()\r\n    });\r\n  }\r\n\r\n  // Get cached color analysis\r\n  getCachedColorAnalysis(imageHash: string): { colors: Color[]; format: string } | null {\r\n    return this.getByParams({ image: imageHash, type: 'colors' }) as unknown as { colors: Color[]; format: string } | null;\r\n  }\r\n\r\n  // Cache palette generation results\r\n  cachePaletteGeneration(\r\n    colorsHash: string,\r\n    targetCount: number,\r\n    palette: Color[]\r\n  ): void {\r\n    this.setByParams({\r\n      colors: colorsHash,\r\n      targetCount,\r\n      type: 'palette'\r\n    }, {\r\n      palette,\r\n      timestamp: Date.now()\r\n    });\r\n  }\r\n\r\n  // Get cached palette generation\r\n  getCachedPaletteGeneration(\r\n    colorsHash: string,\r\n    targetCount: number\r\n  ): { palette: Color[] } | null {\r\n    return this.getByParams({\r\n      colors: colorsHash,\r\n      targetCount,\r\n      type: 'palette'\r\n    }) as unknown as { palette: Color[] } | null;\r\n  }\r\n}\r\n\r\n// Global cache instances\r\nexport const imageProcessingCache = new ImageProcessingCache();\r\nexport const generalCache = new LRUCache(20 * 1024 * 1024, 200); // 20MB general cache\r\n\r\n// Utility functions for hashing\r\nexport const hashImage = (image: HTMLImageElement): string => {\r\n  // Simple hash based on src and dimensions\r\n  const data = `${image.src}_${image.width}_${image.height}`;\r\n  return btoa(data).replace(/[+/=]/g, ''); // URL-safe\r\n};\r\n\r\nexport const hashImageData = (imageData: ImageData): string => {\r\n  // Hash based on dimensions and sample of pixel data\r\n  const sampleSize = Math.min(1000, imageData.data.length);\r\n  const sample = Array.from(imageData.data.slice(0, sampleSize));\r\n  const data = `${imageData.width}_${imageData.height}_${sample.join(',')}`;\r\n  return btoa(data).replace(/[+/=]/g, '');\r\n};\r\n\r\nexport const hashArray = (array: unknown[]): string => {\r\n  const data = JSON.stringify(array);\r\n  return btoa(data).replace(/[+/=]/g, '');\r\n};\r\n\r\n// Cache management utilities\r\nexport const getCacheStats = () => {\r\n  return {\r\n    imageProcessing: imageProcessingCache.getStats(),\r\n    general: generalCache.getStats()\r\n  };\r\n};\r\n\r\nexport const clearAllCaches = () => {\r\n  imageProcessingCache.clear();\r\n  generalCache.clear();\r\n};","import React from 'react';\r\nimport { useTranslation } from '@/hooks/useTranslation';\r\nimport { Card } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Checkbox } from '@/components/ui/checkbox';\r\nimport { Separator } from '@/components/ui/separator';\r\nimport { Grid3X3, X } from 'lucide-react';\r\n\r\ninterface ChangeGridSelectorProps {\r\n  showTileGrid: boolean;\r\n  setShowTileGrid: (v: boolean) => void;\r\n  tileWidth: number;\r\n  setTileWidth: (v: number) => void;\r\n  tileHeight: number;\r\n  setTileHeight: (v: number) => void;\r\n  tileGridColor: string;\r\n  setTileGridColor: (v: string) => void;\r\n  showFrameGrid: boolean;\r\n  setShowFrameGrid: (v: boolean) => void;\r\n  frameWidth: number;\r\n  setFrameWidth: (v: number) => void;\r\n  frameHeight: number;\r\n  setFrameHeight: (v: number) => void;\r\n  frameGridColor: string;\r\n  setFrameGridColor: (v: string) => void;\r\n  tileLineThickness: number;\r\n  setTileLineThickness: (v: number) => void;\r\n  frameLineThickness: number;\r\n  setFrameLineThickness: (v: number) => void;\r\n  // Removed t prop, use hook instead\r\n  onClose: () => void;\r\n}\r\n\r\nexport const ChangeGridSelector: React.FC<ChangeGridSelectorProps> = ({\r\n  showTileGrid,\r\n  setShowTileGrid,\r\n  tileWidth,\r\n  setTileWidth,\r\n  tileHeight,\r\n  setTileHeight,\r\n  tileGridColor,\r\n  setTileGridColor,\r\n  tileLineThickness,\r\n  setTileLineThickness,\r\n  showFrameGrid,\r\n  setShowFrameGrid,\r\n  frameWidth,\r\n  setFrameWidth,\r\n  frameHeight,\r\n  setFrameHeight,\r\n  frameGridColor,\r\n  setFrameGridColor,\r\n  frameLineThickness,\r\n  setFrameLineThickness,\r\n  onClose,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <Card\r\n      className=\"absolute z-50 left-0 right-0 p-7 bg-card border-elegant-border rounded-xl\"\r\n      onClick={(e) => e.stopPropagation()}\r\n      data-section=\"change-grids\"\r\n    >\r\n        <Button\r\n          variant=\"ghost\"\r\n          size=\"sm\"\r\n          onClick={onClose}\r\n          className=\"absolute top-2 right-2 h-8 w-8 p-0 hover:bg-destructive hover:text-destructive-foreground\"\r\n        >\r\n          <X className=\"h-4 w-4\" />\r\n        </Button>\r\n\r\n        <div className=\"space-y-6\">\r\n          <div>\r\n            <h3\r\n              className=\"text-xl font-bold flex items-center\"\r\n              style={{ color: '#7d1b2d' }}\r\n            >\r\n              <Grid3X3 className=\"mr-2 h-6 w-6\" style={{ color: '#7d1b2d' }} />\r\n              {t('changeGrids')}\r\n            </h3>\r\n            <p className=\"text-sm text-muted-foreground pt-2 pb-2 text-left\">\r\n              {t('changeGridsDesc')}\r\n            </p>\r\n          </div>\r\n          <div className=\"border-t border-elegant-border my-4\" />\r\n          <div className=\"flex gap-6\">\r\n            {/* Tile Grid Column */}\r\n            <div className=\"flex-1\">\r\n              <div className=\"space-y-3\">\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <Checkbox id=\"show-tile-grid\" className=\"h-4 w-4 mt-0 mr-2 flex-shrink-0\" checked={showTileGrid} onCheckedChange={checked => setShowTileGrid(!!checked)} />\r\n                  <label htmlFor=\"show-tile-grid\" className=\"block text-sm font-medium text-foreground cursor-pointer text-left\">{t('showTileGrid')}</label>\r\n                </div>\r\n                {showTileGrid && (\r\n                  <div className=\"ml-6 space-y-4\">\r\n                    <div className=\"grid grid-cols-2 gap-4\">\r\n                      {/* Top row: Width | Height */}\r\n                      <div>\r\n                        <label className=\"block text-xs text-muted-foreground text-left\">{t('width')}</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          min=\"1\"\r\n                          max=\"64\"\r\n                          value={tileWidth}\r\n                          onChange={e => setTileWidth(Math.max(1, parseInt(e.target.value) || 1))}\r\n                          className=\"w-full px-2 py-1 text-sm border border-input rounded bg-background\"\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"block text-xs text-muted-foreground text-left\">{t('height')}</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          min=\"1\"\r\n                          max=\"64\"\r\n                          value={tileHeight}\r\n                          onChange={e => setTileHeight(Math.max(1, parseInt(e.target.value) || 1))}\r\n                          className=\"w-full px-2 py-1 text-sm border border-input rounded bg-background\"\r\n                        />\r\n                      </div>\r\n\r\n                      {/* Bottom row: Line thickness | Color */}\r\n                      <div>\r\n                        <label className=\"block text-xs text-muted-foreground text-left\">{t('tileLineThickness')}</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          min=\"1\"\r\n                          value={tileLineThickness}\r\n                          onChange={e => setTileLineThickness(Math.max(1, parseInt(e.target.value) || 1))}\r\n                          className=\"w-full px-2 py-1 text-sm border border-input rounded bg-background\"\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"block text-xs text-muted-foreground text-left\">{t('tileGridColor')}</label>\r\n                        <input\r\n                          type=\"color\"\r\n                          value={tileGridColor}\r\n                          onChange={e => setTileGridColor(e.target.value)}\r\n                          className=\"w-full h-8 border border-input rounded bg-background cursor-pointer\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Vertical separator */}\r\n            <div className=\"w-px bg-border\" />\r\n\r\n            {/* Frame Grid Column */}\r\n            <div className=\"flex-1\">\r\n              <div className=\"space-y-3\">\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <Checkbox id=\"show-frame-grid\" className=\"h-4 w-4 mt-0 mr-2 flex-shrink-0\" checked={showFrameGrid} onCheckedChange={checked => setShowFrameGrid(!!checked)} />\r\n                  <label htmlFor=\"show-frame-grid\" className=\"block text-sm font-medium text-foreground cursor-pointer text-left\">{t('showFrameGrid')}</label>\r\n                </div>\r\n                {showFrameGrid && (\r\n                  <div className=\"ml-6 space-y-4\">\r\n                    <div className=\"grid grid-cols-2 gap-4\">\r\n                      {/* Top row: Width | Height */}\r\n                      <div>\r\n                        <label className=\"block text-xs text-muted-foreground text-left\">{t('width')}</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          min=\"1\"\r\n                          max=\"128\"\r\n                          value={frameWidth}\r\n                          onChange={e => setFrameWidth(Math.max(1, parseInt(e.target.value) || 1))}\r\n                          className=\"w-full px-2 py-1 text-sm border border-input rounded bg-background\"\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"block text-xs text-muted-foreground text-left\">{t('height')}</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          min=\"1\"\r\n                          max=\"128\"\r\n                          value={frameHeight}\r\n                          onChange={e => setFrameHeight(Math.max(1, parseInt(e.target.value) || 1))}\r\n                          className=\"w-full px-2 py-1 text-sm border border-input rounded bg-background\"\r\n                        />\r\n                      </div>\r\n\r\n                      {/* Bottom row: Line thickness | Color */}\r\n                      <div>\r\n                        <label className=\"block text-xs text-muted-foreground text-left\">{t('frameLineThickness')}</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          min=\"1\"\r\n                          value={frameLineThickness}\r\n                          onChange={e => setFrameLineThickness(Math.max(1, parseInt(e.target.value) || 1))}\r\n                          className=\"w-full px-2 py-1 text-sm border border-input rounded bg-background\"\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"block text-xs text-muted-foreground text-left\">{t('frameGridColor')}</label>\r\n                        <input\r\n                          type=\"color\"\r\n                          value={frameGridColor}\r\n                          onChange={e => setFrameGridColor(e.target.value)}\r\n                          className=\"w-full h-8 border border-input rounded bg-background cursor-pointer\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Card>\r\n  );\r\n};\r\n","import { Card } from '@/components/ui/card';\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Monitor, AlignCenter, Maximize, X, Scaling, AlignLeft, Proportions, Expand, ChevronsLeftRight, MoveHorizontal } from 'lucide-react';\r\nimport { useTranslation } from '@/hooks/useTranslation';\r\n\r\n// Custom alignment icon component\r\nconst AlignmentIcon = ({ position, label }: { position: string; label?: string }) => {\r\n  const getAlignment = () => {\r\n    const [vertical, horizontal] = position.split('-');\r\n    let outerStyle = '';\r\n    \r\n    switch (vertical) {\r\n      case 'top':\r\n        outerStyle += 'items-start ';\r\n        break;\r\n      case 'middle':\r\n        outerStyle += 'items-center ';\r\n        break;\r\n      case 'bottom':\r\n        outerStyle += 'items-end ';\r\n        break;\r\n    }\r\n    \r\n    switch (horizontal) {\r\n      case 'left':\r\n        outerStyle += 'justify-start';\r\n        break;\r\n      case 'center':\r\n        outerStyle += 'justify-center';\r\n        break;\r\n      case 'right':\r\n        outerStyle += 'justify-end';\r\n        break;\r\n    }\r\n    \r\n    return { outerStyle };\r\n  };\r\n  \r\n  const { outerStyle } = getAlignment();\r\n  \r\n  return (\r\n    <div\r\n      className={`w-4 h-4 border border-current flex ${outerStyle}`}\r\n      title={label}\r\n      aria-label={label}\r\n    >\r\n      <div className=\"w-1.5 h-1.5 bg-current rounded-sm\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport type ResolutionType = \r\n  | 'original'\r\n  | 'unscaled'\r\n  | '96x65'\r\n  | '128x128'\r\n  | '128x160'\r\n  | '160x144'\r\n  | '160x192'\r\n  | '160x200'\r\n  | '256x192'\r\n  | '256x212'\r\n  | '256x224'\r\n  | '256x240'\r\n  | '304x224'\r\n  | '320x200'\r\n  | '320x224'\r\n  | '320x240'\r\n  | '384x224'\r\n  | '480x272'\r\n  | '512x212'\r\n  | '320x256'\r\n  | '640x200'\r\n  | '640x256';\r\n\r\nexport type AlignmentMode = 'top-left' | 'top-center' | 'top-right' | 'middle-left' | 'middle-center' | 'middle-right' | 'bottom-left' | 'bottom-center' | 'bottom-right';\r\nexport type ScalingMode = 'stretch' | 'scale-to-fit-width' | 'dont-scale';\r\nexport type CombinedScalingMode = ScalingMode | AlignmentMode;\r\n\r\ninterface ResolutionSelectorProps {\r\n  onClose?: () => void;\r\n  onApplyResolution?: (resolution: ResolutionType) => void;\r\n  onChangeScalingMode?: (mode: CombinedScalingMode) => void;\r\n  // Optional controlled props from parent\r\n  selectedResolution?: ResolutionType;\r\n  selectedScalingMode?: CombinedScalingMode;\r\n}\r\n\r\nexport const ResolutionSelector = ({\r\n  onClose,\r\n  onApplyResolution,\r\n  onChangeScalingMode\r\n  , selectedResolution: selectedResolutionProp, selectedScalingMode: selectedScalingModeProp\r\n}: ResolutionSelectorProps) => {\r\n  const [selectedResolution, setSelectedResolution] = useState<ResolutionType>(selectedResolutionProp ?? 'original');\r\n  const [scalingMode, setScalingMode] = useState<CombinedScalingMode>(selectedScalingModeProp ?? 'scale-to-fit-width');\r\n  const { t } = useTranslation();\r\n\r\n  // Sync with controlled props when they change\r\n  useEffect(() => {\r\n    if (selectedResolutionProp !== undefined && selectedResolutionProp !== selectedResolution) {\r\n      setSelectedResolution(selectedResolutionProp);\r\n    }\r\n  }, [selectedResolutionProp]);\r\n\r\n  useEffect(() => {\r\n    if (selectedScalingModeProp !== undefined && selectedScalingModeProp !== scalingMode) {\r\n      setScalingMode(selectedScalingModeProp);\r\n    }\r\n  }, [selectedScalingModeProp]);\r\n\r\n  // Build options inside render to ensure translations update\r\n  const resolutionOptions = [\r\n    { value: 'original', label: t('originalSize'), desc: t('keepOriginalSize') },\r\n    { value: 'unscaled', label: t('unscaledSize'), desc: t('removeScaling') },\r\n    { value: '96x65', label: '96×65', desc: t('nokia3510ires') },\r\n    { value: '128x128', label: '128×128', desc: t('pico8res') },\r\n    { value: '128x160', label: '128×160', desc: t('sonyEricssonRes') },\r\n    { value: '160x144', label: '160×144', desc: t('gameBoyRes') },\r\n    { value: '160x192', label: '160×192', desc: t('atari2600res') },\r\n    { value: '176x200', label: '160×200', desc: t('amstradCpc0') },\r\n    { value: '240x160', label: '240×160', desc: t('gameBoyAdvance') },\r\n    { value: '256x192', label: '256×192', desc: t('msxZxSpectrum') },\r\n    { value: '256x212', label: '256×212', desc: t('msxPlatform') },\r\n    { value: '256x224', label: '256×224', desc: t('megaDriveNtscH32') },\r\n    { value: '256x240', label: '256×240', desc: t('megaDrivePalH32') },\r\n    { value: '304x224', label: '304×224', desc: t('neoGeoCd') },\r\n    { value: '320x200', label: '320×200', desc: t('amstradCpc1') },\r\n    { value: '320x224', label: '320×224', desc: t('megaDriveNtscH40') },\r\n    { value: '320x240', label: '320×240', desc: t('megaDrivePalH40') },\r\n    { value: '320x256', label: '320×256', desc: t('amigaLowResPal') },\r\n    { value: '384x224', label: '384×224', desc: t('cpsArcade') },\r\n    { value: '480x272', label: '480×272', desc: t('pspPlatform') },\r\n    { value: '512x212', label: '512×212', desc: t('msxHiRes') },\r\n    { value: '640x200', label: '640×200', desc: t('amstradCpc2') },\r\n    { value: '640x256', label: '640×256', desc: t('amigaHiResPal') },\r\n    { value: '640x480', label: '640×480', desc: t('vgaAmiga') },\r\n  ];\r\n\r\n  const scalingOptions = [\r\n    { value: 'stretch', label: t('stretch'), icon: Expand, desc: t('stretchToFit') },\r\n    { value: 'scale-to-fit-width', label: t('keepAspectRatio'), icon: MoveHorizontal, desc: t('keepAspectRatio') },\r\n    { value: 'dont-scale', label: t('dontScale'), icon: AlignLeft, desc: t('dontScale') },\r\n  ];\r\n\r\n  const alignmentOptions = [\r\n    { value: 'top-left', label: t('alignTopLeft'), position: 'top-left' },\r\n    { value: 'top-center', label: t('alignTopCenter'), position: 'top-center' },\r\n    { value: 'top-right', label: t('alignTopRight'), position: 'top-right' },\r\n    { value: 'middle-left', label: t('alignMiddleLeft'), position: 'middle-left' },\r\n    { value: 'middle-center', label: t('alignMiddleCenter'), position: 'middle-center' },\r\n    { value: 'middle-right', label: t('alignMiddleRight'), position: 'middle-right' },\r\n    { value: 'bottom-left', label: t('alignBottomLeft'), position: 'bottom-left' },\r\n    { value: 'bottom-center', label: t('alignBottomCenter'), position: 'bottom-center' },\r\n    { value: 'bottom-right', label: t('alignBottomRight'), position: 'bottom-right' },\r\n  ];\r\n\r\n  const isAlignmentMode = (mode: CombinedScalingMode): mode is AlignmentMode => {\r\n    return alignmentOptions.some(option => option.value === mode);\r\n  };\r\n\r\n  return (\r\n    <Card className=\"absolute z-50 left-0 right-0 p-7 bg-card border-elegant-border rounded-xl overflow-visible\">\r\n      {onClose && (\r\n        <Button\r\n          variant=\"ghost\"\r\n          size=\"sm\"\r\n          onClick={onClose}\r\n          className=\"absolute top-2 right-2 h-8 w-8 p-0 hover:bg-destructive hover:text-destructive-foreground\"\r\n        >\r\n          <X className=\"h-4 w-4\" />\r\n        </Button>\r\n      )}\r\n\r\n      <div className=\"space-y-5\">\r\n        <div>\r\n          <h3 className=\"text-xl font-bold flex items-center\" style={{ color: '#7d1b2d' }}>\r\n            <Proportions className=\"mr-2 h-6 w-6\" style={{ color: '#7d1b2d' }} />\r\n            {t('changeResolution')}\r\n          </h3>\r\n          <p className=\"text-sm text-muted-foreground pt-2 pb-2 text-left\">{t('changeResolutionDesc')}</p>\r\n        </div>\r\n\r\n        <div className=\"border-t border-elegant-border my-4\" />\r\n\r\n        {/* Scaling and Alignment - side by side */}\r\n        <div className=\"flex justify-center\">\r\n          <div className=\"space-y-8 bg-card border border-elegant-border rounded-lg p-6 mr-6\">\r\n            <label className=\"block text-m font-bold text-foreground\">\r\n              <span className=\"flex items-center\">\r\n                <Scaling className=\"mr-2 h-4 w-4\" />\r\n                {t('scalingMode')}\r\n              </span>\r\n            </label>\r\n\r\n            <RadioGroup\r\n              value={['stretch', 'scale-to-fit-width', 'dont-scale'].includes(scalingMode as string) ? (scalingMode as ScalingMode) : 'scale-to-fit-width'}\r\n              onValueChange={(value: ScalingMode) => {\r\n                setScalingMode(value);\r\n                onChangeScalingMode?.(value);\r\n              }}\r\n              className=\"space-y-0 gap-1 flex flex-col\"\r\n            >\r\n              {scalingOptions.map((option) => {\r\n                const Icon = option.icon;\r\n                return (\r\n                  <div key={option.value} className=\"flex items-start space-x-2 min-h-[1.75rem]\">\r\n                    <RadioGroupItem value={option.value} id={`scaling-${option.value}`} className=\"h-3 w-3 mt-0.5 mr-2 flex-shrink-0\" />\r\n                    <Label htmlFor={`scaling-${option.value}`} className=\"flex gap-1.5 cursor-pointer text-xs text-left\">\r\n                      <Icon className=\"h-3 w-3 mt-0.5 flex-shrink-0\" />\r\n                      <span className=\"text-xs text-muted-foreground leading-tight break-words text-left whitespace-nowrap\">{option.label}</span>\r\n                    </Label>\r\n                  </div>\r\n                );\r\n              })}\r\n            </RadioGroup>\r\n          </div>\r\n\r\n          <div className=\"space-y-8 bg-card border border-elegant-border rounded-lg p-6\">\r\n            <label className=\"block text-m font-bold text-foreground\">\r\n              <span className=\"flex items-center\">\r\n                <AlignLeft className=\"mr-2 h-4 w-4\" />\r\n                {t('alignment')}\r\n              </span>\r\n            </label>\r\n\r\n            <RadioGroup\r\n              value={isAlignmentMode(scalingMode) ? (scalingMode as AlignmentMode) : 'middle-center'}\r\n              onValueChange={(value: AlignmentMode) => {\r\n                setScalingMode(value);\r\n                onChangeScalingMode?.(value);\r\n              }}\r\n              className=\"text-xs grid grid-cols-3 text-muted-foreground leading-tight break-words text-left\"\r\n              style={{ columnGap: '1.0rem' }}\r\n            >\r\n              {alignmentOptions.map((option) => (\r\n                <div key={option.value} className=\"flex min-h-[1.6rem]\">\r\n                  <RadioGroupItem value={option.value} id={`alignment-${option.value}`} className=\"h-3 w-3 mr-2 mt-0.5 flex-shrink-0\" />\r\n                  <Label htmlFor={`alignment-${option.value}`} className=\"flex cursor-pointer text-xs text-left h-3 w-4\">\r\n                    <AlignmentIcon position={option.position} label={option.label} />\r\n                  </Label>\r\n                </div>\r\n              ))}\r\n            </RadioGroup>\r\n          </div>\r\n        </div>\r\n        {/* Target Resolution - separated section */}\r\n        <div className=\"border-t border-elegant-border pt-4\">\r\n          <div className=\"space-y-3\">\r\n            <label className=\"block text-m font-bold text-foreground pt-5 pb-5\">\r\n              <span className=\"flex items-center\">\r\n                <Proportions className=\"mr-2 h-4 w-4\" />\r\n                {t('targetResolution')}\r\n              </span>\r\n            </label>\r\n\r\n            <RadioGroup\r\n              value={selectedResolution}\r\n              onValueChange={(value) => {\r\n                const r = value as ResolutionType;\r\n                setSelectedResolution(r);\r\n                onApplyResolution?.(r);\r\n              }}\r\n              className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-x-4 gap-y-3\"\r\n            >\r\n              {resolutionOptions.map((option) => (\r\n                <div key={option.value} className=\"flex space-x-1 min-h-[2.0rem]\">\r\n                  <RadioGroupItem value={option.value} id={`resolution-${option.value}`} className=\"h-3 w-3 mt-2.5 mr-2 flex-shrink-0\" />\r\n                  <Label htmlFor={`resolution-${option.value}`} className=\"flex flex-col cursor-pointer text-left\">\r\n                    <span className=\"font-medium text-xs leading-tight break-words text-left\">{option.label}</span>\r\n                    <span className=\"text-xs text-muted-foreground leading-tight break-words text-left\">{option.desc}</span>\r\n                  </Label>\r\n                </div>\r\n              ))}\r\n            </RadioGroup>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n","import { useState, useCallback, useRef, useEffect, useMemo } from 'react';\r\nimport { LoadImage } from './LoadImage';\r\nimport { CameraSelector } from './CameraSelector';\r\nimport { ColorPaletteSelector } from './ColorPaletteSelector';\r\nimport { usePalette } from '../contexts/PaletteContext';\r\nimport { ImagePreview } from './ImagePreview';\r\nimport { ExportImage } from './ExportImage';\r\nimport { LanguageSelector } from './LanguageSelector';\r\nimport { useTranslation } from '@/hooks/useTranslation';\r\nimport { Toolbar } from './Toolbar';\r\nimport { Footer } from './Footer';\r\nimport { Card } from '@/components/ui/card';\r\nimport { Checkbox } from '@/components/ui/checkbox';\r\nimport { toast } from 'sonner';\r\nimport { Upload, Palette, Eye, Monitor, Download, Grid3X3, Globe, X, AlertTriangle } from 'lucide-react';\r\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from './ui/tooltip';\r\nimport { Separator } from '@/components/ui/separator';\r\nimport { Progress } from '@/components/ui/progress';\r\nimport { processMegaDriveImage, extractColorsFromImageData, medianCutQuantization, applyQuantizedPalette, Color } from '@/lib/colorQuantization';\r\n// pngAnalyzer is imported dynamically where needed to keep the main bundle small\r\nimport { useImageProcessor } from '@/hooks/useImageProcessor';\r\nimport { usePerformanceMonitor } from '@/hooks/usePerformanceMonitor';\r\nimport { useCanvasPool } from '@/utils/canvasPool';\r\nimport { imageProcessingCache, hashImage, hashImageData } from '@/utils/imageCache';\r\nimport { ChangeGridSelector } from './ChangeGridSelector';\r\nimport { ResolutionSelector, ResolutionType, CombinedScalingMode } from './ResolutionSelector';\r\n// Performance constants - Optimized for large image handling\r\nconst MAX_IMAGE_SIZE = 4096; // Maximum input image dimension to prevent memory issues\r\nconst MAX_CANVAS_SIZE = 4096; // Maximum output canvas size\r\nconst PROCESSING_DEBOUNCE_MS = 100; // Debounce time for image processing\r\nconst COLOR_SAMPLE_INTERVAL = 16; // Sample every 4th pixel for color analysis (performance optimization)\r\n\r\n// Local history state type used by the editor\r\ntype HistoryState = {\r\n  imageData: ImageData;\r\n  palette: string;\r\n};\r\n\r\nexport const RetroImageEditor = () => {\r\n  // UI state variables\r\n  const [currentZoom, setCurrentZoom] = useState(100);\r\n  const [selectedCameraId, setSelectedCameraId] = useState<string | null>(null);\r\n  const [showCameraPreview, setShowCameraPreview] = useState(false);\r\n  const [activeTab, setActiveTab] = useState<string>('load-image');\r\n  const [isVerticalLayout, setIsVerticalLayout] = useState(false);\r\n  const [isLanguageDropdownOpen, setIsLanguageDropdownOpen] = useState(false);\r\n  const [originalImageSource, setOriginalImageSource] = useState<File | string | null>(null);\r\n  const [isOriginalPNG8Indexed, setIsOriginalPNG8Indexed] = useState(false);\r\n  const [originalPaletteColors, setOriginalPaletteColors] = useState<Color[]>([]);\r\n  const { t, currentLanguage, changeLanguage, languages, getLanguageName } = useTranslation();\r\n  const [originalImage, setOriginalImage] = useState<HTMLImageElement | null>(null);\r\n  const [processedImageData, setProcessedImageData] = useState<ImageData | null>(null);\r\n  const [selectedPalette, setSelectedPalette] = useState<string>('original');\r\n  // Restore resolution/scaling state that the selector will control\r\n  const [selectedResolution, setSelectedResolution] = useState<ResolutionType>('original');\r\n  const [scalingMode, setScalingMode] = useState<CombinedScalingMode>('scale-to-fit-width');\r\n  const [autoFitKey, setAutoFitKey] = useState<string | undefined>(undefined);\r\n  const ignoreNextCloseRef = useRef(false);\r\n  \r\n  // Performance and processing state\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [processingProgress, setProcessingProgress] = useState(0);\r\n  const [processingOperation, setProcessingOperation] = useState<string>('');\r\n  \r\n  // Grid state\r\n  const [showTileGrid, setShowTileGrid] = useState(false);\r\n  const [showFrameGrid, setShowFrameGrid] = useState(false);\r\n  const [tileWidth, setTileWidth] = useState(8);\r\n  const [tileHeight, setTileHeight] = useState(8);\r\n  const [frameWidth, setFrameWidth] = useState(16);\r\n  const [frameHeight, setFrameHeight] = useState(16);\r\n  const [tileGridColor, setTileGridColor] = useState('#808080');\r\n  const [frameGridColor, setFrameGridColor] = useState('#96629d');\r\n  const [tileLineThickness, setTileLineThickness] = useState(1);\r\n  const [frameLineThickness, setFrameLineThickness] = useState(3);\r\n  \r\n  const [history, setHistory] = useState<HistoryState[]>([]);\r\n  const [historyIndex, setHistoryIndex] = useState(-1);\r\n  \r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n  \r\n  // Performance monitoring hooks\r\n  const imageProcessor = useImageProcessor();\r\n  const performanceMonitor = usePerformanceMonitor();\r\n  const { getCanvas, returnCanvas } = useCanvasPool();\r\n\r\n  // Stable callback to receive zoom updates from ImagePreview. Using useCallback\r\n  // prevents a new function reference being passed on every render which can\r\n  // cause the preview to behave oddly (recreating handlers and triggering\r\n  // unintended effects). ImagePreview expects a zoom in percent (e.g. 100).\r\n  const handlePreviewZoomChange = useCallback((zoom: number) => {\r\n    setCurrentZoom(zoom);\r\n  }, []);\r\n\r\n  // Clean reset of all editor state - prevents memory leaks\r\n  const resetEditor = useCallback(() => {\r\n    // Clean up image references\r\n    setOriginalImage(null);\r\n    setProcessedImageData(null);\r\n    setOriginalImageSource(null);\r\n\r\n    // Restore UI state and selector defaults (these match the initial values\r\n    // set when the component mounts). This ensures ResolutionSelector radio\r\n    // buttons and all related editor state return to their app-start defaults\r\n    // when the user clicks the Load Image / Import button.\r\n    setSelectedPalette('original');\r\n    setSelectedResolution('original');\r\n    setScalingMode('scale-to-fit-width');\r\n    setAutoFitKey(undefined);\r\n\r\n    // Reset camera & preview state\r\n    setShowCameraPreview(false);\r\n    setSelectedCameraId(null);\r\n\r\n    // Reset processing state and progress\r\n    setIsProcessing(false);\r\n    setProcessingProgress(0);\r\n    setProcessingOperation('');\r\n\r\n    // Grid & palette related defaults\r\n    setIsOriginalPNG8Indexed(false);\r\n    setOriginalPaletteColors([]);\r\n    setShowTileGrid(false);\r\n    setShowFrameGrid(false);\r\n    setTileWidth(8);\r\n    setTileHeight(8);\r\n    setFrameWidth(16);\r\n    setFrameHeight(16);\r\n    setTileGridColor('#808080');\r\n    setFrameGridColor('#96629d');\r\n    setTileLineThickness(1);\r\n    setFrameLineThickness(3);\r\n\r\n    // Reset zoom state used by the UI\r\n    setCurrentZoom(100);\r\n\r\n    // Clear history to free memory\r\n    setHistory([]);\r\n    setHistoryIndex(-1);\r\n\r\n    // Reset interface (open load-image panel)\r\n    setActiveTab('load-image');\r\n  }, []);\r\n\r\n  // Async palette conversion with Web Worker support\r\n  // Removed applyPaletteConversion function as it is now handled by usePalette\r\n\r\n  const checkOrientation = useCallback(() => {\r\n    const isLandscape = window.innerWidth >= window.innerHeight;\r\n    setIsVerticalLayout(isLandscape);\r\n    \r\n    // Close language dropdown on orientation/size change\r\n    setIsLanguageDropdownOpen(false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    checkOrientation();\r\n    window.addEventListener('resize', checkOrientation);\r\n    window.addEventListener('orientationchange', checkOrientation);\r\n    const onOpenCameraSelectorRequest = () => {\r\n      ignoreNextCloseRef.current = true;\r\n      setTimeout(() => setActiveTab('select-camera'), 0);\r\n      window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    };\r\n    window.addEventListener('openCameraSelectorRequest', onOpenCameraSelectorRequest as EventListener);\r\n    \r\n    // Close dropdown when clicking outside and close floating sections (except load-image)\r\n    const handleClickOutside = (event: MouseEvent) => {\r\n      const target = event.target as Element;\r\n\r\n      // If a caller recently requested that we open a floating section,\r\n      // ignore the next global click so the new section isn't immediately closed.\r\n      if (ignoreNextCloseRef.current) {\r\n        ignoreNextCloseRef.current = false;\r\n        return;\r\n      }\r\n      \r\n      // Handle language dropdown\r\n      if (isLanguageDropdownOpen && !target.closest('.language-dropdown-container')) {\r\n        setIsLanguageDropdownOpen(false);\r\n      }\r\n      \r\n      // Handle floating sections (except load-image)\r\n      if (activeTab && activeTab !== 'load-image') {\r\n        const isOutsideSection = !target.closest('[data-section]');\r\n        const isButton = target.closest('button') || target.closest('[role=\"button\"]');\r\n        \r\n        // Only close if clicking outside and NOT on any button\r\n        if (isOutsideSection && !isButton) {\r\n          setActiveTab(null);\r\n        }\r\n      }\r\n    };\r\n    \r\n    document.addEventListener('click', handleClickOutside);\r\n    \r\n    return () => {\r\n      window.removeEventListener('resize', checkOrientation);\r\n      window.removeEventListener('orientationchange', checkOrientation);\r\n      window.removeEventListener('openCameraSelectorRequest', onOpenCameraSelectorRequest as EventListener);\r\n      document.removeEventListener('click', handleClickOutside);\r\n    };\r\n  }, [checkOrientation, isLanguageDropdownOpen, activeTab]);\r\n\r\n  // Measure header height so floating dialogs can be positioned below it when toolbar is horizontal\r\n  useEffect(() => {\r\n    const measure = () => {\r\n      const h = headerRef.current?.getBoundingClientRect().height || 0;\r\n      setHeaderHeight(isVerticalLayout ? 0 : h);\r\n    };\r\n    measure();\r\n    window.addEventListener('resize', measure);\r\n    return () => window.removeEventListener('resize', measure);\r\n  }, [isVerticalLayout]);\r\n\r\n\r\n\r\n  const saveToHistory = useCallback((state: HistoryState) => {\r\n    const newHistory = history.slice(0, historyIndex + 1);\r\n    newHistory.push(state);\r\n    setHistory(newHistory);\r\n    setHistoryIndex(newHistory.length - 1);\r\n  }, [history, historyIndex]);\r\n\r\n\r\n  // Optimized image loading with memory management and performance monitoring\r\n  const loadImage = useCallback(async (source: File | string) => {\r\n    try {\r\n      performanceMonitor.startMeasurement('image_loading');\r\n      \r\n      const img = new Image();\r\n      img.crossOrigin = 'anonymous';\r\n      \r\n      // Promise-based image loading for better error handling\r\n      await new Promise((resolve, reject) => {\r\n        img.onload = resolve;\r\n        img.onerror = reject;\r\n        \r\n        if (typeof source === 'string') {\r\n          img.src = source;\r\n        } else {\r\n          // Create object URL for file - will be cleaned up automatically\r\n          img.src = URL.createObjectURL(source);\r\n        }\r\n      });\r\n      \r\n      // Extract palette for indexed PNG\r\n      const isPng = (typeof source === 'string' && (source.startsWith('data:image/png') || source.endsWith('.png'))) || (typeof source !== 'string' && source.name?.endsWith('.png'));\r\n      if (isPng) {\r\n        try {\r\n          const canvas = document.createElement('canvas');\r\n          const ctx = canvas.getContext('2d');\r\n          if (ctx) {\r\n            canvas.width = img.width;\r\n            canvas.height = img.height;\r\n            ctx.drawImage(img, 0, 0);\r\n            const imageData = ctx.getImageData(0, 0, img.width, img.height);\r\n            const colors = new Set<string>();\r\n            for (let i = 0; i < imageData.data.length; i += 4) {\r\n              const r = imageData.data[i];\r\n              const g = imageData.data[i + 1];\r\n              const b = imageData.data[i + 2];\r\n              colors.add(`${r},${g},${b}`);\r\n            }\r\n            if (colors.size <= 256) {\r\n              const palette = Array.from(colors).map(color => {\r\n                const [r, g, b] = color.split(',').map(Number);\r\n                return { r, g, b };\r\n              });\r\n              setOriginalPaletteColors(palette);\r\n              setIsOriginalPNG8Indexed(true);\r\n            }\r\n          }\r\n        } catch (e) {\r\n          // ignore\r\n        }\r\n      }\r\n      \r\n      // Performance check: Validate image size and provide recommendations\r\n      const imageDimensions = { width: img.width, height: img.height };\r\n      const shouldOptimize = performanceMonitor.shouldOptimizeProcessing(imageDimensions);\r\n      \r\n      if (img.width > MAX_IMAGE_SIZE || img.height > MAX_IMAGE_SIZE) {\r\n        toast.error(t('imageTooLarge'));\r\n        return;\r\n      }\r\n      \r\n      setOriginalImage(img);\r\n      setOriginalImageSource(source);\r\n\r\n      // Create an immediate rasterized RGB copy of the loaded image so the\r\n      // preview shows pixels for indexed PNGs (PNG-8) as well. This is a\r\n      // best-effort attempt — it may fail for cross-origin images if the\r\n      // canvas becomes tainted. The later `processImage` run will still\r\n      // perform the full processing and replace this data if needed.\r\n      try {\r\n        const rasterCanvas = document.createElement('canvas');\r\n        rasterCanvas.width = img.width;\r\n        rasterCanvas.height = img.height;\r\n        const rasterCtx = rasterCanvas.getContext('2d');\r\n        if (rasterCtx) {\r\n          rasterCtx.imageSmoothingEnabled = false;\r\n          rasterCtx.drawImage(img, 0, 0);\r\n          const rasterImageData = rasterCtx.getImageData(0, 0, img.width, img.height);\r\n          setProcessedImageData(rasterImageData);\r\n          // Trigger preview autofit immediately\r\n          setAutoFitKey(String(Date.now()));\r\n        } else {\r\n          setProcessedImageData(null);\r\n        }\r\n      } catch (err) {\r\n        // Canvas readback can fail for tainted/cross-origin images. In that\r\n        // case, leave processedImageData null — `processImage` will run later\r\n        // (if possible) and handle or report errors.\r\n        // eslint-disable-next-line no-console\r\n        console.warn('Immediate rasterization failed for loaded image:', err);\r\n        setProcessedImageData(null);\r\n      }\r\n      \r\n      // Force height recalculation after image load with enhanced timing for camera captures\r\n      const isCameraCapture = typeof source !== 'string' && source.name === 'camera-capture.png';\r\n      const delay = isCameraCapture ? 300 : 150; // Longer delay for camera captures\r\n      \r\n      setTimeout(() => {\r\n        // This will trigger the ImagePreview auto-fit mechanism\r\n        window.dispatchEvent(new CustomEvent('imageLoaded', { detail: { width: img.width, height: img.height } }));\r\n        \r\n        // Additional retry for camera captures due to async nature\r\n        if (isCameraCapture) {\r\n          setTimeout(() => {\r\n            window.dispatchEvent(new CustomEvent('imageLoaded', { detail: { width: img.width, height: img.height } }));\r\n          }, 200);\r\n        }\r\n      }, delay);\r\n      \r\n      // Reset settings when loading new image\r\n      setSelectedPalette('original');\r\n      \r\n      performanceMonitor.endMeasurement(imageDimensions);\r\n      toast.success(t('imageLoaded'));\r\n      \r\n      // Clear history to free memory\r\n      setHistory([]);\r\n      setHistoryIndex(-1);\r\n      \r\n      // Auto-close load section on success\r\n      setActiveTab(null);\r\n      \r\n    } catch (error) {\r\n      toast.error(t('imageLoadError'));\r\n      console.error('Image loading error:', error);\r\n      setIsProcessing(false);\r\n      setProcessingProgress(0);\r\n      setProcessingOperation('');\r\n    }\r\n  }, [t, performanceMonitor, imageProcessor, getCanvas, returnCanvas]);\r\n\r\n  // ...existing code...\r\n\r\n  // Performance-optimized color similarity check for pixel art detection\r\n  const areColorsSimilar = (r1: number, g1: number, b1: number, r2: number, g2: number, b2: number): boolean => {\r\n    const distance = Math.sqrt((r1 - r2) ** 2 + (g1 - g2) ** 2 + (b1 - b2) ** 2);\r\n    const maxDistance = Math.sqrt(3 * 255 ** 2); // Maximum possible Euclidean distance\r\n    const similarity = 1 - (distance / maxDistance);\r\n    return similarity >= 0.8; // 80% similarity threshold for pixel art detection\r\n  };\r\n\r\n  // Advanced pixel art scaling detection with performance optimizations\r\n  const detectAndUnscaleImage = useCallback((image: HTMLImageElement) => {\r\n    const canvas = document.createElement('canvas');\r\n    const ctx = canvas.getContext('2d');\r\n    if (!ctx) return null;\r\n\r\n    canvas.width = image.width;\r\n    canvas.height = image.height;\r\n    ctx.imageSmoothingEnabled = false; // Preserve pixel-perfect rendering\r\n    ctx.drawImage(image, 0, 0);\r\n    \r\n    const imageData = ctx.getImageData(0, 0, image.width, image.height);\r\n    const pixels = imageData.data;\r\n    \r\n    // Performance optimization: Test likely scaling factors first (2x, 3x, 4x, etc.)\r\n    const commonScales = [2, 3, 4, 5, 6, 8, 10, 12, 16, 20, 24, 32];\r\n    const allScales = [...commonScales];\r\n    \r\n    // Add remaining scales up to 50\r\n    for (let i = 1; i <= 50; i++) {\r\n      if (!commonScales.includes(i)) {\r\n        allScales.push(i);\r\n      }\r\n    }\r\n    \r\n    // Test each scaling factor\r\n    for (const scalingFactor of allScales) {\r\n      // Quick reject: dimensions must be multiples of scaling factor\r\n      if (image.width % scalingFactor !== 0 || image.height % scalingFactor !== 0) {\r\n        continue;\r\n      }\r\n      \r\n      const blocksX = image.width / scalingFactor;\r\n      const blocksY = image.height / scalingFactor;\r\n      let validBlocks = 0;\r\n      const totalBlocks = blocksX * blocksY;\r\n      \r\n      // Analyze each block for color uniformity\r\n      for (let blockY = 0; blockY < blocksY; blockY++) {\r\n        for (let blockX = 0; blockX < blocksX; blockX++) {\r\n          const startX = blockX * scalingFactor;\r\n          const startY = blockY * scalingFactor;\r\n          \r\n          // Performance optimization: Use Map for color counting\r\n          const colorCounts = new Map<string, number>();\r\n          \r\n          // Sample all pixels in this block\r\n          for (let y = startY; y < startY + scalingFactor; y++) {\r\n            for (let x = startX; x < startX + scalingFactor; x++) {\r\n              const index = (y * image.width + x) * 4;\r\n              const r = pixels[index];\r\n              const g = pixels[index + 1];\r\n              const b = pixels[index + 2];\r\n              const colorKey = `${r},${g},${b}`;\r\n              \r\n              colorCounts.set(colorKey, (colorCounts.get(colorKey) || 0) + 1);\r\n            }\r\n          }\r\n          \r\n          // Find dominant color in this block\r\n          let maxCount = 0;\r\n          for (const count of colorCounts.values()) {\r\n            if (count > maxCount) {\r\n              maxCount = count;\r\n            }\r\n          }\r\n          \r\n          // Block is valid if >51% of pixels share the same color (pixel art characteristic)\r\n          const totalPixelsInBlock = scalingFactor * scalingFactor;\r\n          if (maxCount >= totalPixelsInBlock * 0.51) {\r\n            validBlocks++;\r\n          }\r\n        }\r\n      }\r\n      \r\n      // If all blocks are uniform, we found the scaling factor\r\n      if (validBlocks === totalBlocks) {\r\n        return {\r\n          width: blocksX,\r\n          height: blocksY\r\n        };\r\n      }\r\n    }\r\n    \r\n    return null; // No uniform scaling detected\r\n  }, []);\r\n\r\n  const processImage = useCallback(async () => {\r\n\r\n    // If all settings are original, don't process - keep the original image\r\n    // Remove resolution/scaling logic from UI state\r\n\r\n    // Declare canvas outside try block for cleanup\r\n    let canvas: HTMLCanvasElement | null = null;\r\n    // Declare imageData at the top of processImage function\r\n    let imageData: ImageData;\r\n    \r\n    try {\r\n      // Require at least a raster (processedImageData) or an original image\r\n      // before attempting processing. This allows resolution changes to be\r\n      // applied even when the app only has an in-memory raster (e.g. for\r\n      // indexed PNGs that were rasterized on load).\r\n      if (!originalImage && !processedImageData) return;\r\n\r\n      // Compute a cache/hash key depending on available source. If we have\r\n      // a processed raster, hash its pixel buffer; otherwise hash the\r\n      // original image element.\r\n      const imageHash = processedImageData ? hashImageData(processedImageData) : (originalImage ? hashImage(originalImage) : '');\r\n\r\n      // Start performance monitoring\r\n      performanceMonitor.startMeasurement('image_processing');\r\n      setIsProcessing(true);\r\n      setProcessingProgress(0);\r\n      setProcessingOperation(`Processing with ${selectedPalette} palette...`);\r\n\r\n      // Use canvas pool for memory efficiency. Request a canvas sized to the\r\n      // target output. We'll draw the source (either the processed image data\r\n      // or the original image) into a temporary canvas and then scale/align\r\n      // that into the output canvas.\r\n  // Determine target dimensions based on selectedResolution. Use the\r\n  // processed raster dimensions when available, otherwise fall back to\r\n  // the original image dimensions.\r\n  const srcWidth = processedImageData ? processedImageData.width : (originalImage ? originalImage.width : 0);\r\n  const srcHeight = processedImageData ? processedImageData.height : (originalImage ? originalImage.height : 0);\r\n  let targetWidth = srcWidth;\r\n  let targetHeight = srcHeight;\r\n\r\n      if (selectedResolution !== 'original' && selectedResolution !== 'unscaled') {\r\n        const parts = selectedResolution.split('x');\r\n        const w = parseInt(parts[0], 10);\r\n        const h = parseInt(parts[1], 10);\r\n        if (!isNaN(w) && !isNaN(h)) {\r\n          targetWidth = w;\r\n          targetHeight = h;\r\n        }\r\n      } else if (selectedResolution === 'unscaled') {\r\n        // keep original dimensions\r\n        targetWidth = originalImage.width;\r\n        targetHeight = originalImage.height;\r\n      }\r\n\r\n      // Additional safety check for canvas size\r\n      if (targetWidth > MAX_CANVAS_SIZE || targetHeight > MAX_CANVAS_SIZE) {\r\n        toast.error(t('targetResolutionTooLarge'));\r\n        return;\r\n      }\r\n      // We'll draw into a temporary RGB canvas first (so interpolation is applied\r\n      // as for RGB images). The source for this drawing will be the current\r\n      // processed image (if available) or the original image otherwise. This\r\n      // makes resolution transforms operate on the processed raster rather than\r\n      // the raw original file (requirement 1 and 2).\r\n\r\n      const tempCanvas = document.createElement('canvas');\r\n      const sourceCanvas = document.createElement('canvas');\r\n\r\n      // Determine source: prefer processedImageData when available\r\n      if (processedImageData) {\r\n        sourceCanvas.width = processedImageData.width;\r\n        sourceCanvas.height = processedImageData.height;\r\n        const sctx = sourceCanvas.getContext('2d');\r\n        if (!sctx) {\r\n          toast.error(t('canvasNotSupported'));\r\n          return;\r\n        }\r\n        sctx.putImageData(processedImageData, 0, 0);\r\n      } else {\r\n        // Fallback to original image bitmap\r\n        sourceCanvas.width = originalImage.width;\r\n        sourceCanvas.height = originalImage.height;\r\n        const sctx = sourceCanvas.getContext('2d');\r\n        if (!sctx) {\r\n          toast.error(t('canvasNotSupported'));\r\n          return;\r\n        }\r\n        sctx.imageSmoothingEnabled = false;\r\n        sctx.drawImage(originalImage, 0, 0);\r\n      }\r\n\r\n      tempCanvas.width = targetWidth;\r\n      tempCanvas.height = targetHeight;\r\n      const tempCtx = tempCanvas.getContext('2d');\r\n      if (!tempCtx) {\r\n        toast.error(t('canvasNotSupported'));\r\n        return;\r\n      }\r\n\r\n      // Clear with black background\r\n      tempCtx.fillStyle = '#000000';\r\n      tempCtx.fillRect(0, 0, targetWidth, targetHeight);\r\n\r\n      // Draw source canvas onto temp canvas using the selected scaling/alignment\r\n      // logic. Use the sourceCanvas dimensions instead of originalImage.\r\n      const sw = sourceCanvas.width;\r\n      const sh = sourceCanvas.height;\r\n\r\n      if (scalingMode === 'stretch') {\r\n        tempCtx.drawImage(sourceCanvas, 0, 0, sw, sh, 0, 0, targetWidth, targetHeight);\r\n      } else if (scalingMode === 'scale-to-fit-width') {\r\n        const srcRatio = sw / sh;\r\n        const dstRatio = targetWidth / targetHeight;\r\n        let dw = targetWidth;\r\n        let dh = targetHeight;\r\n        if (srcRatio > dstRatio) {\r\n          dw = targetWidth;\r\n          dh = Math.round(targetWidth / srcRatio);\r\n        } else {\r\n          dh = targetHeight;\r\n          dw = Math.round(targetHeight * srcRatio);\r\n        }\r\n        const dx = Math.round((targetWidth - dw) / 2);\r\n        const dy = Math.round((targetHeight - dh) / 2);\r\n        tempCtx.drawImage(sourceCanvas, 0, 0, sw, sh, dx, dy, dw, dh);\r\n      } else {\r\n        // dont-scale: draw at original size (will be clipped if larger than target)\r\n        tempCtx.drawImage(sourceCanvas, 0, 0);\r\n      }\r\n\r\n      // Read resulting pixels from temp canvas\r\n      const tempImageData = tempCtx.getImageData(0, 0, targetWidth, targetHeight);\r\n\r\n      // If the PaletteViewer has a palette (external/original), quantize the\r\n      // resulting pixels to the nearest colors in that palette (requirement 3).\r\n      if (Array.isArray(originalPaletteColors) && originalPaletteColors.length > 0) {\r\n        const paletteColorsArr = originalPaletteColors.map((c: any) => [c.r, c.g, c.b]);\r\n        applyFixedPalette(tempImageData.data, paletteColorsArr);\r\n      }\r\n\r\n\r\n      // Put the final pixels onto the real canvas and publish the processed ImageData\r\n      const canvasResult = getCanvas(targetWidth, targetHeight);\r\n      canvas = canvasResult.canvas;\r\n      const ctx = canvasResult.ctx;\r\n      if (!ctx) {\r\n        toast.error(t('canvasNotSupported'));\r\n        return;\r\n      }\r\n      ctx.fillStyle = '#000000';\r\n      ctx.fillRect(0, 0, targetWidth, targetHeight);\r\n      ctx.putImageData(tempImageData, 0, 0);\r\n      imageData = tempImageData;\r\n\r\n      // Always set the processed image so the preview/footer shows it\r\n      setProcessedImageData(imageData);\r\n      setAutoFitKey(String(Date.now()));\r\n      saveToHistory({ imageData, palette: selectedPalette });\r\n\r\n      // End performance monitoring\r\n      setProcessingProgress(100);\r\n      performanceMonitor.endMeasurement({ width: targetWidth, height: targetHeight });\r\n\r\n    } catch (error) {\r\n      toast.error(t('errorProcessingImage'));\r\n      console.error('processImage error:', error);\r\n    } finally {\r\n      // Clean up processing state\r\n      if (canvas) {\r\n        returnCanvas(canvas);\r\n      }\r\n      setIsProcessing(false);\r\n      setProcessingProgress(0);\r\n      setProcessingOperation('');\r\n    }\r\n  }, [\r\n    originalImage,\r\n    processedImageData,\r\n    selectedPalette,\r\n    saveToHistory,\r\n    performanceMonitor,\r\n    getCanvas,\r\n    returnCanvas,\r\n    detectAndUnscaleImage,\r\n    isOriginalPNG8Indexed,\r\n    originalPaletteColors,\r\n    selectedResolution,\r\n    scalingMode,\r\n    t\r\n  ]);\r\n\r\n  // Expose the latest processImage via a ref so UI handlers can invoke the\r\n  // most recent version without stale-closure issues. Handlers will call\r\n  // this with a short timeout after state updates so the updated state is\r\n  // captured by the new processImage closure created on render.\r\n  const processImageRef = useRef<(() => Promise<void>) | null>(null);\r\n  useEffect(() => {\r\n    processImageRef.current = processImage;\r\n    return () => {\r\n      // Clear only if it still points to this processImage reference\r\n      if (processImageRef.current === processImage) processImageRef.current = null;\r\n    };\r\n  }, [processImage]);\r\n\r\n  // Helper function to apply a fixed palette to image data using color matching\r\n  const applyFixedPalette = (data: Uint8ClampedArray, palette: number[][]) => {\r\n    for (let i = 0; i < data.length; i += 4) {\r\n      const r = data[i];\r\n      const g = data[i + 1];\r\n      const b = data[i + 2];\r\n      \r\n      // Find the closest color in the palette using Euclidean distance\r\n      let minDistance = Infinity;\r\n      let closestColor = palette[0];\r\n      \r\n      for (const paletteColor of palette) {\r\n        const distance = Math.sqrt(\r\n          Math.pow(r - paletteColor[0], 2) +\r\n          Math.pow(g - paletteColor[1], 2) +\r\n          Math.pow(b - paletteColor[2], 2)\r\n        );\r\n        \r\n        if (distance < minDistance) {\r\n          minDistance = distance;\r\n          closestColor = paletteColor;\r\n        }\r\n      }\r\n      \r\n      data[i] = closestColor[0];     // R\r\n      data[i + 1] = closestColor[1]; // G\r\n      data[i + 2] = closestColor[2]; // B\r\n      // Alpha channel (i + 3) remains unchanged\r\n    }\r\n  };\r\n\r\n\r\n  const downloadImage = useCallback(() => {\r\n    if (!processedImageData) return;\r\n    \r\n    // Create a new canvas for download\r\n    const canvas = document.createElement('canvas');\r\n    const ctx = canvas.getContext('2d');\r\n    if (!ctx) return;\r\n    \r\n    canvas.width = processedImageData.width;\r\n    canvas.height = processedImageData.height;\r\n    ctx.putImageData(processedImageData, 0, 0);\r\n    \r\n    const link = document.createElement('a');\r\n  link.download = `retro-image-${selectedPalette}.png`;\r\n    link.href = canvas.toDataURL('image/png');\r\n    link.click();\r\n    \r\n    toast.success(t('imageDownloaded'));\r\n  }, [processedImageData, selectedPalette, t]);\r\n\r\n  const undo = useCallback(() => {\r\n    if (historyIndex > 0) {\r\n      const prevState = history[historyIndex - 1];\r\n      setProcessedImageData(prevState.imageData);\r\n      setSelectedPalette(prevState.palette);\r\n  // Removed: setSelectedResolution, setScalingMode\r\n      setHistoryIndex(historyIndex - 1);\r\n    }\r\n  }, [history, historyIndex]);\r\n\r\n  const redo = useCallback(() => {\r\n    if (historyIndex < history.length - 1) {\r\n      const nextState = history[historyIndex + 1];\r\n      setProcessedImageData(nextState.imageData);\r\n      setSelectedPalette(nextState.palette);\r\n  // Removed: setSelectedResolution, setScalingMode\r\n      setHistoryIndex(historyIndex + 1);\r\n    }\r\n  }, [history, historyIndex]);\r\n\r\n  // Debounced image processing to prevent excessive re-processing during rapid changes\r\n  // Clipboard image loader for Toolbar\r\n  const loadFromClipboard = async () => {\r\n    try {\r\n      const items = await navigator.clipboard.read();\r\n      for (const item of items) {\r\n        if (item.types.includes('image/png') || item.types.includes('image/jpeg')) {\r\n          const blob = await item.getType(item.types.find(type => type.startsWith('image/')) || '');\r\n          const file = new File([blob], 'clipboard-image.png', { type: blob.type });\r\n          resetEditor();\r\n          setTimeout(() => loadImage(file), 50);\r\n          toast.success('Image loaded from clipboard');\r\n          return;\r\n        }\r\n      }\r\n      toast.error(t('noImageFoundInClipboard'));\r\n    } catch (error) {\r\n      console.error('Failed to read clipboard:', error);\r\n      toast.error(t('failedToReadClipboard'));\r\n    }\r\n  };\r\n  // Centralized debounced processing trigger. Run processing whenever we\r\n  // have either an original image or a rasterized processedImageData (this\r\n  // makes resolution changes apply for indexed images that were rasterized\r\n  // on load). Debounce to avoid repeated runs during rapid UI changes.\r\n  useEffect(() => {\r\n    if (originalImage || processedImageData) {\r\n      const timeoutId = setTimeout(() => {\r\n        processImage();\r\n      }, PROCESSING_DEBOUNCE_MS);\r\n\r\n      return () => clearTimeout(timeoutId);\r\n    }\r\n  }, [originalImage, processedImageData, selectedPalette, selectedResolution, scalingMode, processImage]);\r\n\r\n  // Handle palette changes - clear currentPaletteColors for 'original' on non-indexed images\r\n  useEffect(() => {\r\n    if (selectedPalette === 'original' && !isOriginalPNG8Indexed) {\r\n  // Removed: setCurrentPaletteColors\r\n    }\r\n  }, [selectedPalette, isOriginalPNG8Indexed]);\r\n\r\n  const languagesSafe = Array.isArray(languages) ? languages : [];\r\n  const sortedLanguages = [...languagesSafe].sort((a, b) => \r\n    getLanguageName(a).localeCompare(getLanguageName(b))\r\n  );\r\n\r\n  // Toolbar width used for layout/calculations (matches Toolbar w-12)\r\n  const toolbarWidth = '3rem';\r\n  const headerRef = useRef<HTMLDivElement | null>(null);\r\n  const [headerHeight, setHeaderHeight] = useState<number>(0);\r\n  const rightColumnRef = useRef<HTMLDivElement | null>(null);\r\n  const [rightColumnWidth, setRightColumnWidth] = useState<number | null>(null);\r\n\r\n  // Measure right column width to avoid overflow and account for scrollbars\r\n  useEffect(() => {\r\n    const measure = () => {\r\n      const w = rightColumnRef.current?.clientWidth ?? null;\r\n      setRightColumnWidth(w);\r\n    };\r\n    measure();\r\n    window.addEventListener('resize', measure);\r\n    const ro = new ResizeObserver(measure);\r\n    if (rightColumnRef.current) ro.observe(rightColumnRef.current);\r\n    return () => {\r\n      window.removeEventListener('resize', measure);\r\n      ro.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className=\"bg-elegant-bg\"\r\n      style={{\r\n        margin: 0,\r\n        padding: 0,\r\n        position: 'fixed',\r\n        left: 0,\r\n        top: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        width: '100%',\r\n        height: '100%',\r\n        overflow: 'auto',\r\n        // Reserve stable gutter for scrollbars so content on the right isn't covered\r\n        // by the vertical scrollbar when it appears\r\n        scrollbarGutter: 'stable'\r\n      }}\r\n    >\r\n      {/* Two-column grid fixed to the viewport: left column reserved for vertical toolbar (or 0 when not used), right column holds header, preview and footer */}\r\n      <div\r\n        className=\"grid\"\r\n        style={{\r\n          margin: 0,\r\n          padding: 0,\r\n          boxSizing: 'border-box',\r\n          width: '100%',\r\n          height: '100%',\r\n          // Use minmax(0, 1fr) so the right column can shrink properly and not overflow\r\n          gridTemplateColumns: isVerticalLayout ? `${toolbarWidth} minmax(0, 1fr)` : `0 minmax(0, 1fr)`,\r\n          gridTemplateRows: isVerticalLayout ? '0 1fr auto' : 'auto 1fr auto', // header row 0 when toolbar is vertical\r\n          gap: 0\r\n        }}\r\n      >\r\n        {/* Left column: toolbar when vertical */}\r\n  <div className=\"m-0 p-0 row-start-1 row-end-4 col-start-1 col-end-2\" style={{ minWidth: 0 }}>\r\n          {isVerticalLayout && (\r\n            <Toolbar\r\n              isVerticalLayout={isVerticalLayout}\r\n              originalImage={originalImage}\r\n              activeTab={activeTab}\r\n              setActiveTab={setActiveTab}\r\n              resetEditor={resetEditor}\r\n              loadFromClipboard={loadFromClipboard}\r\n              toast={toast}\r\n              t={t}\r\n            />\r\n          )}\r\n        </div>\r\n\r\n        {/* Right column header: toolbar when horizontal */}\r\n        <div className=\"m-0 p-0 row-start-1 col-start-2 col-end-3\" ref={(el) => (headerRef.current = el)} style={{ minWidth: 0 }}>\r\n          {!isVerticalLayout && (\r\n            <Toolbar\r\n              isVerticalLayout={isVerticalLayout}\r\n              originalImage={originalImage}\r\n              activeTab={activeTab}\r\n              setActiveTab={setActiveTab}\r\n              resetEditor={resetEditor}\r\n              loadFromClipboard={loadFromClipboard}\r\n              toast={toast}\r\n              t={t}\r\n            />\r\n          )}\r\n        </div>\r\n\r\n        {/* Main preview area - occupies middle row, right column */}\r\n        <div className=\"row-start-2 col-start-2 col-end-3 m-0 p-0 relative\" style={{ minWidth: 0 }} ref={rightColumnRef}>\r\n          <div className=\"w-full m-0 p-0\" style={{ width: '100%', minWidth: 0 }}>\r\n            <ImagePreview\r\n              originalImage={originalImage}\r\n              processedImageData={processedImageData}\r\n              originalImageSource={originalImageSource}\r\n              onLoadImageClick={loadImage}\r\n              selectedPalette={selectedPalette}\r\n              onPaletteUpdate={(colors) => {\r\n                try {\r\n                  // colors come from PaletteViewer and have shape { r,g,b, transparent? }\r\n                  const mapped = colors.map((c: any) => ({ r: c.r, g: c.g, b: c.b }));\r\n                  setOriginalPaletteColors(mapped);\r\n                  // Mark as indexed if we received a non-empty palette\r\n                  setIsOriginalPNG8Indexed(Array.isArray(mapped) && mapped.length > 0);\r\n                } catch (e) {\r\n                  // ignore mapping errors\r\n                }\r\n              }}\r\n              showCameraPreview={showCameraPreview}\r\n              onCameraPreviewChange={setShowCameraPreview}\r\n              onZoomChange={handlePreviewZoomChange}\r\n              selectedCameraId={selectedCameraId}\r\n              currentPaletteColors={originalPaletteColors}\r\n              onRequestOpenCameraSelector={() => {\r\n                // Set flag so the global click handler ignores the next click that would close sections\r\n                ignoreNextCloseRef.current = true;\r\n                setTimeout(() => setActiveTab('select-camera'), 0);\r\n              }}\r\n              showTileGrid={showTileGrid}\r\n              showFrameGrid={showFrameGrid}\r\n              tileWidth={tileWidth}\r\n              tileHeight={tileHeight}\r\n              frameWidth={frameWidth}\r\n              frameHeight={frameHeight}\r\n              tileGridColor={tileGridColor}\r\n              frameGridColor={frameGridColor}\r\n              tileLineThickness={tileLineThickness}\r\n              frameLineThickness={frameLineThickness}\r\n              isVerticalLayout={isVerticalLayout}\r\n              containerStyle={rightColumnWidth ? { maxWidth: `${rightColumnWidth}px` } : undefined}\r\n            />\r\n\r\n            {/* Floating Content Sections - now constrained inside preview cell (absolute inset) */}\r\n            {activeTab === 'load-image' && (\r\n              <div\r\n                data-section=\"load-image\"\r\n                className={`absolute inset-0 z-50 bg-card border border-elegant-border rounded-none shadow-none m-0 p-0 overflow-auto`}\r\n              >\r\n                <LoadImage\r\n                  onImageLoad={loadImage}\r\n                  onCameraPreviewRequest={() => {\r\n                      // Prevent the global click handler from immediately closing the section\r\n                      ignoreNextCloseRef.current = true;\r\n                      setActiveTab('select-camera');\r\n                      window.scrollTo({ top: 0, behavior: 'smooth' });\r\n                  }}\r\n                  onClose={() => setActiveTab(null)}\r\n                  onLoadFromClipboard={loadFromClipboard}\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            {activeTab === 'select-camera' && (\r\n              <div\r\n                data-section=\"select-camera\"\r\n                className={`absolute inset-0 z-50 bg-card border border-elegant-border rounded-none shadow-none m-0 p-0 overflow-auto`}\r\n              >\r\n                <CameraSelector\r\n                  onSelect={(cameraId) => {\r\n                    setSelectedCameraId(cameraId);\r\n                    setShowCameraPreview(true);\r\n                    setActiveTab(null);\r\n                  }}\r\n                  onClose={() => setActiveTab('load-image')}\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            {activeTab === 'language' && (\r\n              <div\r\n                data-section=\"language\"\r\n                className={`absolute inset-0 z-50 bg-card border border-elegant-border rounded-none shadow-none m-0 p-0 overflow-auto`}\r\n                onClick={(e) => e.stopPropagation()}\r\n              >\r\n                <LanguageSelector hideLabel={false} onClose={() => setActiveTab(null)} />\r\n              </div>\r\n            )}\r\n\r\n            {activeTab === 'palette-selector' && originalImage && (\r\n              <div\r\n                data-section=\"palette-selector\"\r\n                className={`absolute inset-0 z-50 bg-card border border-elegant-border rounded-none shadow-none m-0 p-0 overflow-auto`}\r\n                onClick={(e) => e.stopPropagation()}\r\n              >\r\n                <ColorPaletteSelector\r\n                  selectedPalette={selectedPalette}\r\n                  onPaletteChange={(palette) => {\r\n                    setSelectedPalette(palette);\r\n                    // Schedule processing using the ref to avoid stale closures.\r\n                    // Use a small timeout so the state update is flushed first.\r\n                    setTimeout(() => {\r\n                      try { processImageRef.current?.(); } catch (e) { /* ignore */ }\r\n                    }, PROCESSING_DEBOUNCE_MS + 10);\r\n                  }}\r\n                  onClose={() => setActiveTab(null)}\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            {activeTab === 'resolution' && originalImage && (\r\n              <div\r\n                data-section=\"resolution\"\r\n                className={`absolute inset-0 z-50 bg-card border border-elegant-border rounded-none shadow-none m-0 p-0 overflow-auto`}\r\n                onClick={(e) => e.stopPropagation()}\r\n              >\r\n                <ResolutionSelector\r\n                  onClose={() => setActiveTab(null)}\r\n                  onApplyResolution={(r) => {\r\n                    setSelectedResolution(r);\r\n                    setTimeout(() => {\r\n                      try { processImageRef.current?.(); } catch (e) { /* ignore */ }\r\n                    }, PROCESSING_DEBOUNCE_MS + 10);\r\n                  }}\r\n                  onChangeScalingMode={(m) => {\r\n                    setScalingMode(m);\r\n                    setTimeout(() => {\r\n                      try { processImageRef.current?.(); } catch (e) { /* ignore */ }\r\n                    }, PROCESSING_DEBOUNCE_MS + 10);\r\n                  }}\r\n                  selectedResolution={selectedResolution}\r\n                  selectedScalingMode={scalingMode}\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            {activeTab === 'change-grids' && originalImage && (\r\n              <div\r\n                data-section=\"change-grids\"\r\n                className={`absolute inset-0 z-50 bg-card border border-elegant-border rounded-none shadow-none m-0 p-0 overflow-auto`}\r\n                onClick={(e) => e.stopPropagation()}\r\n              >\r\n                <ChangeGridSelector\r\n                  showTileGrid={showTileGrid}\r\n                  setShowTileGrid={setShowTileGrid}\r\n                  tileWidth={tileWidth}\r\n                  setTileWidth={setTileWidth}\r\n                  tileHeight={tileHeight}\r\n                  setTileHeight={setTileHeight}\r\n                  tileGridColor={tileGridColor}\r\n                  setTileGridColor={setTileGridColor}\r\n                  tileLineThickness={tileLineThickness}\r\n                  setTileLineThickness={setTileLineThickness}\r\n                  showFrameGrid={showFrameGrid}\r\n                  setShowFrameGrid={setShowFrameGrid}\r\n                  frameWidth={frameWidth}\r\n                  setFrameWidth={setFrameWidth}\r\n                  frameHeight={frameHeight}\r\n                  setFrameHeight={setFrameHeight}\r\n                  frameGridColor={frameGridColor}\r\n                  setFrameGridColor={setFrameGridColor}\r\n                  frameLineThickness={frameLineThickness}\r\n                  setFrameLineThickness={setFrameLineThickness}\r\n                  onClose={() => setActiveTab(null)}\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            {activeTab === 'export-image' && originalImage && (\r\n              <div\r\n                data-section=\"export-image\"\r\n                className={`absolute inset-0 z-50 bg-card border border-elegant-border rounded-none shadow-none m-0 p-0 overflow-auto`}\r\n                onClick={(e) => e.stopPropagation()}\r\n              >\r\n                <ExportImage\r\n                  processedImageData={processedImageData}\r\n                  originalImage={originalImage}\r\n                  selectedPalette={selectedPalette}\r\n                  currentZoom={currentZoom / 100}\r\n                  showTileGrid={showTileGrid}\r\n                  showFrameGrid={showFrameGrid}\r\n                  tileWidth={tileWidth}\r\n                  tileHeight={tileHeight}\r\n                  frameWidth={frameWidth}\r\n                  frameHeight={frameHeight}\r\n                  tileGridColor={tileGridColor}\r\n                  frameGridColor={frameGridColor}\r\n                  paletteColors={isOriginalPNG8Indexed ? originalPaletteColors : undefined}\r\n                  onClose={() => setActiveTab(null)}\r\n                />\r\n              </div>\r\n            )}\r\n\r\n          </div>\r\n        </div>\r\n\r\n        {/* Footer in right column */}\r\n        <div className=\"row-start-3 col-start-2 col-end-3 m-0 p-0\" style={{ minWidth: 0 }}>\r\n          <Footer isVerticalLayout={isVerticalLayout} />\r\n        </div>\r\n\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n","import { RetroImageEditor } from '@/components/RetroImageEditor';\r\n\r\nconst Index = () => {\r\n  return <RetroImageEditor />;\r\n};\r\n\r\nexport default Index;\r\n","import { useLocation } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport { useTranslation } from \"@/hooks/useTranslation\";\r\n\r\nconst NotFound = () => {\r\n  const location = useLocation();\r\n  const { t } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    // Prefer hash-based route when using HashRouter (GitHub Pages). If hash is present, use it,\r\n    // otherwise fall back to pathname. Also strip the BASE_URL prefix if present for clarity.\r\n    const base = import.meta.env.BASE_URL || '/';\r\n    const hash = window.location.hash ? window.location.hash.replace(/^#/, '') : '';\r\n    let shownPath = hash || location.pathname;\r\n    if (base !== '/' && shownPath.startsWith(base)) {\r\n      shownPath = shownPath.slice(base.length) || '/';\r\n    }\r\n    console.error(\"404 Error: User attempted to access non-existent route:\", shownPath);\r\n  }, [location.pathname]);\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-100\">\r\n      <div className=\"text-center\">\r\n        <h1 className=\"text-4xl font-bold mb-4\">{t('pageNotFound')}</h1>\r\n        <p className=\"text-xl text-gray-600 mb-4\">{t('oopsPageNotFound')}</p>\r\n        <a href=\"/\" className=\"text-blue-500 hover:text-blue-700 underline\">\r\n          {t('returnToHome')}\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import { Toaster } from \"@/components/ui/toaster\";\r\nimport { Toaster as Sonner } from \"@/components/ui/sonner\";\r\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\r\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\r\nimport { BrowserRouter, HashRouter, Routes, Route } from \"react-router-dom\";\r\nimport Index from \"./pages/Index\";\r\nimport NotFound from \"./pages/NotFound\";\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nconst App = () => (\r\n  <QueryClientProvider client={queryClient}>\r\n    <TooltipProvider>\r\n      <Toaster />\r\n      <Sonner />\r\n      {/* Use HashRouter in production when served from a subpath (GitHub Pages) to avoid server-side routing issues.\r\n          Use BrowserRouter in development for cleaner URLs. */}\r\n      {(() => {\r\n        const isProd = import.meta.env.PROD;\r\n        if (isProd) {\r\n          // Always use hash routing in production to avoid server 404s on GitHub Pages.\r\n          return (\r\n            <HashRouter>\r\n              <Routes>\r\n                <Route path=\"/\" element={<Index />} />\r\n                {/* ADD ALL CUSTOM ROUTES ABOVE THE CATCH-ALL \"*\" ROUTE */}\r\n                <Route path=\"*\" element={<NotFound />} />\r\n              </Routes>\r\n            </HashRouter>\r\n          );\r\n        }\r\n        // development: use BrowserRouter with correct basename\r\n        const base = import.meta.env.BASE_URL || '/';\r\n        const basename = base === '/' ? '/' : base.replace(/\\/$/, '');\r\n        return (\r\n          <BrowserRouter basename={basename}>\r\n            <Routes>\r\n              <Route path=\"/\" element={<Index />} />\r\n              {/* ADD ALL CUSTOM ROUTES ABOVE THE CATCH-ALL \"*\" ROUTE */}\r\n              <Route path=\"*\" element={<NotFound />} />\r\n            </Routes>\r\n          </BrowserRouter>\r\n        );\r\n      })()}\r\n      \r\n    </TooltipProvider>\r\n  </QueryClientProvider>\r\n);\r\n\r\nexport default App;\r\n","import React, { ReactNode, useCallback, useState } from 'react'\r\nimport {\r\n  baseTranslation,\r\n  translations,\r\n  TranslationContext as _TranslationContext,\r\n  useTranslation as _useTranslation,\r\n  TranslationContextType,\r\n  Language,\r\n} from './translationHelpers'\r\n\r\ninterface TranslationProviderProps {\r\n  children: ReactNode\r\n}\r\n\r\nexport const TranslationProvider: React.FC<TranslationProviderProps> = ({ children }) => {\r\n  const [language, setLanguage] = useState<Language>(() => {\r\n    // Safely read persisted language; some environments block localStorage\r\n    try {\r\n      const stored = window?.localStorage?.getItem?.('language') as Language\r\n      if (stored && Object.prototype.hasOwnProperty.call(translations, stored)) {\r\n        return stored\r\n      }\r\n    } catch (e) {\r\n      console.warn('localStorage getItem unavailable; defaulting language', e)\r\n    }\r\n\r\n    // Detect browser language safely\r\n    let browserLang = 'en'\r\n    try {\r\n      // navigator.language may not exist in some embedded contexts\r\n      browserLang = (navigator?.language || 'en').toLowerCase()\r\n    } catch {\r\n      // ignore\r\n    }\r\n\r\n    if (Object.prototype.hasOwnProperty.call(translations, browserLang)) {\r\n      return browserLang as Language\r\n    }\r\n\r\n    const langMap: Record<string, Language> = {\r\n      es: 'es-ES',\r\n      ca: 'ca',\r\n      zh: 'zh-CN',\r\n      'zh-hans': 'zh-CN',\r\n      'zh-hant': 'zh-TW',\r\n      ja: 'ja',\r\n      it: 'it',\r\n      de: 'de',\r\n      fr: 'fr',\r\n      pt: 'pt-PT',\r\n      ru: 'ru',\r\n      pl: 'pl',\r\n      tr: 'tr',\r\n      eu: 'eu',\r\n      oc: 'oc',\r\n      th: 'th',\r\n      ko: 'ko',\r\n      cs: 'cs',\r\n    }\r\n\r\n    const mainLang = browserLang.split('-')[0]\r\n    return langMap[mainLang] || 'en'\r\n  })\r\n\r\n  const changeLanguage = useCallback((lang: Language) => {\r\n    setLanguage(lang)\r\n    try {\r\n      window?.localStorage?.setItem?.('language', lang)\r\n    } catch (e) {\r\n      console.warn('localStorage setItem failed; continuing without persistence', e)\r\n    }\r\n  }, [])\r\n\r\n  const value: TranslationContextType = {\r\n    language,\r\n    currentLanguage: language,\r\n    t: (key: string) => {\r\n      const langObj = translations[language] as Record<string, unknown>\r\n      const v = langObj ? (langObj as Record<string, unknown>)[key] : undefined\r\n      if (typeof v === 'string') return v\r\n      const baseV = baseTranslation[key]\r\n      return typeof baseV === 'string' ? baseV : String(baseV)\r\n    },\r\n    changeLanguage,\r\n    availableLanguages: Object.keys(translations) as Language[],\r\n    languages: Object.keys(translations) as Language[],\r\n    getLanguageName: (lang: Language) => {\r\n      const langObj = translations[language] as Record<string, unknown>\r\n      const names = (langObj && (langObj as Record<string, unknown>).languageNames) as Record<string, string> | undefined\r\n      return (names && names[lang]) || (baseTranslation.languageNames as Record<string, string>)[lang]\r\n    },\r\n  }\r\n\r\n  return <_TranslationContext.Provider value={value}>{children}</_TranslationContext.Provider>\r\n}\r\n\r\n// Only export the provider component from this file to satisfy react-refresh\r\n// rule: component modules must only export React components. Other helpers\r\n// (context/hook) are exported from `translationHelpers.ts`.\r\n\r\n","import { createRoot } from 'react-dom/client'\r\nimport App from './App.tsx'\r\nimport './index.css'\r\nimport { TranslationProvider } from '@/contexts/TranslationContext'\r\n\r\nimport './App.css'\r\n\r\n// Global error handlers to capture build-only issues\r\nwindow.addEventListener('error', (e) => {\r\n  console.error('Global error:', e.message, e.error)\r\n})\r\nwindow.addEventListener('unhandledrejection', (e: PromiseRejectionEvent) => {\r\n  console.error('Unhandled rejection:', e.reason)\r\n})\r\n\r\nconst rootEl = document.getElementById('root')!\r\nconsole.log('App boot: starting render')\r\n// If we're running a production build served from a subpath (GitHub Pages),\r\n// ensure the URL uses a hash-based routing entry so the SPA doesn't hit server 404s.\r\n// This logic must be defensive: BASE_URL may be a relative value like './',\r\n// and naive concatenation with window.location.origin can produce invalid\r\n// URLs (for example: 'http://localhost:4173./'). Use the URL API and\r\n// only perform the redirect when the base is an absolute path starting with '/'.\r\n{\r\n  const base = import.meta.env.BASE_URL ?? '/';\r\n  const isAbsoluteBase = typeof base === 'string' && base.startsWith('/');\r\n\r\n  if (import.meta.env.PROD && base !== '/' && isAbsoluteBase && window.location.hash === '') {\r\n    try {\r\n      // Resolve the base against the origin using the URL constructor so we\r\n      // avoid malformed concatenation.\r\n      const baseUrl = new URL(base, window.location.origin);\r\n\r\n      // If the current pathname begins with the base path, trim it; otherwise\r\n      // leave the pathname as-is and place it into the hash.\r\n      const pathname = window.location.pathname;\r\n      const basePathname = baseUrl.pathname.endsWith('/') ? baseUrl.pathname.slice(0, -1) : baseUrl.pathname;\r\n      const trimmed = pathname.startsWith(basePathname) ? pathname.slice(basePathname.length) : pathname;\r\n      const newHash = trimmed || '/';\r\n      const search = window.location.search || '';\r\n\r\n      // Build final target URL safely with URL so the resulting string is valid.\r\n      const target = new URL(baseUrl.toString());\r\n      // Set hash and search\r\n      target.hash = `${newHash}`;\r\n      target.search = search;\r\n\r\n      // Only replace if the target is a valid absolute URL string\r\n      window.location.replace(target.toString());\r\n    } catch (err) {\r\n      // Fail gracefully; log to console but don't throw so the app can render.\r\n      // This avoids the uncaught SyntaxError you saw when replace received\r\n      // an invalid URL string.\r\n      // eslint-disable-next-line no-console\r\n      console.error('Hash redirect skipped due to error:', err);\r\n    }\r\n  }\r\n}\r\ntry {\r\n  createRoot(rootEl).render(\r\n    <TranslationProvider>\r\n      <App />\r\n    </TranslationProvider>\r\n  )\r\n} catch (err) {\r\n  console.error('Render error:', err)\r\n}\r\n"],"file":"assets/index-DgMs-u3d.js"}